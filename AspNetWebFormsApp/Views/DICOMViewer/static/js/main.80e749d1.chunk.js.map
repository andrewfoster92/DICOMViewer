{"version":3,"sources":["config.js","version.js","utils/getUserManagerForOpenIdConnectClient.js","store/layout/reducers.js","store/index.js","appExtensions/GenericViewerCommands/commandsModule.js","appExtensions/GenericViewerCommands/index.js","appExtensions/MeasurementsPanel/jumpToRowItem.js","lib/updateTableWithNewMeasurementData.js","lib/getMeasurementLocationCallback.js","appExtensions/MeasurementsPanel/ConnectedMeasurementTable.js","appExtensions/MeasurementsPanel/index.js","components/OHIFLogo/OHIFLogo.js","WhiteLabellingContext.js","components/Header/Header.js","connectedComponents/ConnectedHeader.js","connectedComponents/ConnectedCineDialog.js","connectedComponents/ConnectedLayoutButton.js","connectedComponents/PluginSwitch.js","connectedComponents/ConnectedPluginSwitch.js","connectedComponents/ToolbarRow.js","store/layout/selectors.js","connectedComponents/ConnectedToolbarRow.js","components/SimpleDialog/SimpleDialog.js","lib/utils/bounding.js","components/Labelling/labellingPositionUtils.js","components/EditDescriptionDialog/EditDescriptionDialog.js","components/Labelling/LabellingTransition.js","components/Labelling/OHIFLabellingData.js","components/Labelling/LabellingFlow.js","components/Labelling/LabellingManager.js","connectedComponents/LabellingOverlay.js","connectedComponents/ConnectedLabellingOverlay.js","connectedComponents/ConnectedStudyBrowser.js","connectedComponents/ConnectedLayoutManager.js","connectedComponents/ToolContextMenu.js","connectedComponents/ConnectedToolContextMenu.js","connectedComponents/ViewerMain.js","connectedComponents/ConnectedViewerMain.js","components/SidePanel.js","connectedComponents/Viewer.js","connectedComponents/ConnectedViewer.js","connectedComponents/ViewerRetrieveStudyData.js","connectedComponents/ConnectedViewerRetrieveStudyData.js","routes/IHEInvokeImageDisplay.js","routes/ViewerRouting.js","lib/filesToStudies.js","connectedComponents/ViewerLocalFileData.js","googleCloud/utils/helpers.js","googleCloud/utils/CancellationToken.js","googleCloud/api/DicomUploadService.js","googleCloud/DicomUploader.js","googleCloud/DicomFileUploaderModal.js","googleCloud/ConnectedDicomFilesUploader.js","googleCloud/api/GoogleCloudApi.js","googleCloud/DicomStoreList.js","googleCloud/DicomStorePicker.js","googleCloud/DatasetsList.js","googleCloud/DatasetPicker.js","googleCloud/ProjectsList.js","googleCloud/ProjectPicker.js","googleCloud/LocationsList.js","googleCloud/LocationPicker.js","googleCloud/DatasetSelector.js","googleCloud/DicomStorePickerModal.js","googleCloud/ConnectedDicomStorePicker.js","studylist/StudyListWithData.js","studylist/ConnectedStudyList.js","studylist/StudyListRouting.js","routes/StandaloneRouting.js","routes/CallbackPage.js","routes/NotFound.js","components/LoadingBar/Bar.js","components/LoadingBar/Container.js","OHIFStandaloneViewer.js","setupTools.js","initCornerstoneTools.js","App.js","utils/initWebWorkers.js","index.js"],"names":["window","info","version","homepage","concat","process","cornerstone","cornerstoneWADOImageLoader","external","dicomParser","OHIF","user","getAccessToken","state","store","getState","oidc","access_token","configure","beforeSend","xhr","headers","DICOMWeb","getAuthorizationHeader","Authorization","setRequestHeader","getUserManagerForOpenIdConnectClient","oidcSettings","settings","Object","objectSpread","silent_redirect_uri","automaticSilentRenew","revokeAccessTokenOnSignout","filterProtocolClaims","loadUserInfo","userManager","createUserManager","loadUser","defaultState","labelling","contextMenu","ui","arguments","length","undefined","action","type","assign","labellingFlowData","viewportIndex","toolContextMenuData","reducers","redux","localStorage","layoutReducers","oidcReducer","rootReducer","combineReducers","createStore","loadState","applyMiddleware","thunkMiddleware","subscribe","saveState","preferences","setViewportActive","actions","updateViewportDisplaySet","_ref","direction","updateActiveViewport","_ref2","viewports","viewportSpecificData","activeViewportIndex","maxIndex","keys","newIndex","dispatch","commandsModule","definitions","incrementActiveViewport","commandFn","storeContexts","options","decrementActiveViewport","defaultContext","GenericViewerCommands","id","getCommandsModule","MeasurementApi","measurements","studyMetadataManager","utils","updateTableWithNewMeasurementData","toolType","measurementNumber","location","description","measurementApi","Instance","tools","filter","m","forEach","measurement","updateMeasurement","syncMeasurementsAndToolData","getEnabledElements","enabledElement","updateImage","element","getMeasurementLocationCallback","eventData","tool","doneCallback","ToolInstance","cornerstoneTools","getToolForElement","configuration","console","warn","setViewportSpecificData","getMeasurementText","measurementData","text","getDataForEachMeasurementNumber","measurementNumberList","timepoints","displayFunction","data","timepoint","eachData","displayText","timepointId","push","convertMeasurementsToTableData","toolCollections","toolGroups","getConfiguration","measurementTools","config","toolGroup","childTools","getAllTools","tableMeasurements","map","groupName","name","groupId","toolId","props","toolMeasurements","find","measurementTable","groupedMeasurements","reduce","a","b","groupedMeasurementsIndex","lesionNamingNumber","measurementId","_id","tableMeasurement","itemNumber","label","hasWarnings","warningTitle","isSplitLesion","warningList","group","tm","sort","m1","m2","convertTimepointsToTableData","key","date","moment","latestDate","format","ConnectedMeasurementTable","connect","_state$timepointManag","timepointManager","measurementCollection","dispatchRelabel","event","viewportsState","enabledElements","log","error","clientX","clientY","skipAddLabelButton","editLocation","dispatchEditDescription","editDescriptionOnDialog","dispatchJumpToRowItem","timepointManagerState","invertViewportTimepointsOrder","childToolKey","numViewports","layout","numTimepoints","numViewportsToUpdate","Math","min","reverse","measurementsForToolGroup","measurementsToJumpTo","_loop","i","dataAtThisTimepoint","entry","getToolConfiguration","Array","isArray","study","get","studyInstanceUid","Error","displaySet","findDisplaySet","sopInstanceUid","images","image","getSOPInstanceUID","displaySetContainsSopInstance","frameIndex","jumpToRowItem","active","measurementToActive","propsFromState","propsFromDispatch","ownProps","selectedMeasurementNumber","onItemClick","onRelabelClick","onEditDescriptionClick","onDeleteClick","MeasurementHandlers","onRemoved","detail","MeasurementTable","MeasurementsPanel","getPanelModule","menuOptions","icon","target","components","component","OHIFLogo","react_default","createElement","rel","className","href","dist_index_es","defaultContextValues","logoComponent","WhiteLabellingContext","React","createContext","Header","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","isUserPreferencesOpen","isOpen","loadOptions","_this2","t","title","onClick","setState","hotKeysData","hotkeysManager","hotkeyDefinitions","windowLevelData","_this3","showStudyList","home","studyLink","react_router_dom","to","children","pathname","list","align","onCancel","Component","defaultProps","withTranslation","withRouter","ConnectedHeader","userPreferencesModalOpen","scrollToIndex","toolImport","csTools","import","ConnectedCineDialog","_state$viewports","cine","activeEnabledElement","dom","activeViewportCineData","isPlaying","cineFrameRate","dispatchSetViewportSpecificData","onPlayPauseChanged","cloneDeep","onFrameRateChanged","frameRate","onClickNextButton","stackData","getToolState","_stackData$data$","currentImageIdIndex","imageIds","onClickBackButton","onClickSkipToStart","onClickSkipToEnd","lastIndex","CineDialog","setLayout","ConnectedLayoutButton","currentLayout","onChange","selectedCell","rows","row","columns","col","height","width","LayoutButton","PluginSwitch","buttons","ConnectedPluginSwitch","commandsManager","runCommand","ToolbarRow","toolbarButtonDefinitions","_getVisibleToolbarButtons","assertThisInitialized","toolbarButtons","activeButtons","isCineDialogOpen","_handleBuiltIn","behavior","bind","panelModules","extensionManager","modules","MODULE_TYPES","PANEL","buttonGroups","left","value","bottomLabel","right","panelExtension","panelModule","module","defaultContexts","from","menuOption","contexts","context","activeContexts","some","actx","includes","menuOptionEntry","prevProps","buttonComponents","button","index","childButtons","childButton","_handleToolbarButtonClick","isActive","cineDialogContainerStyle","display","position","top","zIndex","onPress","side","handleSidePanelChange","onPressLeft","onPressRight","Fragment","style","padding","selectedLeftSidePanel","onValueChanged","connectedComponents_ConnectedLayoutButton","connectedComponents_ConnectedPluginSwitch","marginLeft","selectedRightSidePanel","connectedComponents_ConnectedCineDialog","evt","commandName","commandOptions","_this4","toolbarModules","TOOLBAR","extension","_extension$module","definition","getActiveContexts","createSelector","layoutViewports","activeLayoutViewport","activeViewportSpecificData","activeViewportPluginName","plugin","activeViewportExtension","toUpperCase","ConnectedToolbarRow","SimpleDialog","rootClass","ref","componentRef","componentStyle","onClose","headerTitle","onConfirm","bounding","elementRef","currentPosition","current","currentElement","offsetParent","offsetTop","offsetHeight","offsetLeft","offsetWidth","maxHeight","buttonSize","EditDescriptionDialog","componentDidMount","mainElement","onUpdate","handleChange","createRef","dialogProps","maxLeft","innerWidth","maxTop","innerHeight","getDialogStyle","components_SimpleDialog_SimpleDialog","autoComplete","autoFocus","LabellingTransition","CSSTransition","in","displayComponent","appear","timeout","classNames","onExited","onTransitionExit","OHIFLabellingData","item","LabellingFlow","componentDidUpdate","repositionComponent","labellingStateFragment","_this$state","locationLabel","items","currentItems","onSelected","selectTreeSelectCalback","selectTreeFirstTitle","onComponentChange","fadeOutAndLeaveFast","descriptionInput","defaultValue","relabel","setDescriptionUpdateMode","descriptionCancel","descriptionSave","showLabelling","focus","editDescription","_cloneDeep$descriptio","updateLabelling","itemSelected","viewportTopPosition","nativeEvent","y","confirmationState","isTouchScreen","setTimeout","fadeOutAndLeave","fadeOutTimer","clearFadeOutTimer","clearTimeout","_props$measurementDat","_measurementData$hand","handles","start","end","client","currentPoints","clientStart","pixelToCanvas","clientEnd","canvasOffSetLeft","x","canvasOffSetTop","getAddLabelButtonStyle","initialItems","mainElementClassName","LabellingTransition_LabellingTransition","labellingDoneCallback","onMouseLeave","onMouseEnter","LabellingManager","document","addEventListener","onTouchStart","componentWillUnmount","removeEventListener","getRenderComponent","EditDescriptionDialog_EditDescriptionDialog_EditDescriptionDialog","descriptionDialogUpdate","editDescriptionDialog","LabellingFlow_LabellingFlow","treatMeasurementData","_this$props","responseDialogUpdate","response","getComponentPosition","_eventData$event","LabellingOverlay","visible","LabellingManager_LabellingManager","ConnectedLabellingOverlay","ConnectedStudyBrowser","stackLoadingProgressMap","loading","progress","studiesWithLoadingData","studies","thumbnails","displaySetInstanceUid","stackId","stackProgressData","stackPercentComplete","percentComplete","StudyBrowser","ConnectedLayoutManager","defaultPlugin","availableViewportModules","viewportModules","VIEWPORT","moduleDefinition","extensionId","availablePlugins","LayoutManager","toolTypes","defaultDropdownItems","actionType","nearbyToolData","removeToolState","_ref3","getDropdownItems","isTouchEvent","coords","nearbyTool","pointNearTool","toolData","toolInterface","getNearbyToolData","canvas","dropdownItems","params","ToolContextMenu","updateElementPosition","_this$mainElement$cur","offBoundPixels","availableTools","dropdownComponents","ConnectedToolContextMenu","extensions","ViewerMain","getViewportData","viewportData","cachedViewportData","originalDisplaySet","displaySets","ds","v","setViewportData","dSet","getDisplaySets","connectedComponents_ConnectedLayoutManager","connectedComponents_ConnectedToolContextMenu","clearViewportSpecificData","ConnectedViewerMain","SidePanel","fromSideClass","styles","maxWidth","marginRight","Number","parseInt","is-open","Viewer","isLeftSidePanelOpen","isRightSidePanelOpen","retrieveMeasurements","patientId","timepointIds","Promise","resolve","storeMeasurements","retrieveTimepoints","earliestDate","Date","toISOString","studyDate","timepointType","studyInstanceUids","isLocked","storeTimepoints","timepointData","updateTimepoint","query","removeTimepoint","disassociateStudy","onTimepointsUpdated","onMeasurementsUpdated","setConfiguration","dataExchange","retrieve","TimepointApi","remove","update","disassociate","_OHIF$measurements","timepointApi","currentTimepointId","_mapStudiesToThumbnails","VisiblePanelLeft","VisiblePanelRight","panelExt","comp","src_WhiteLabellingContext","Consumer","whiteLabelling","connectedComponents_ConnectedHeader","connectedComponents_ConnectedToolbarRow","selectedPanel","sideClicked","slice","openKey","selectedKey","updatedState","prevSelectedPanel","isSameSelectedPanel","src_components_SidePanel","activeIndex","connectedComponents_ConnectedStudyBrowser","connectedComponents_ConnectedViewerMain","connectedComponents_ConnectedLabellingOverlay","imageId","seriesDescription","seriesNumber","instanceNumber","numImageFrames","altImageText","getImageId","setTimepoints","setMeasurements","ConnectedViewer","OHIFStudyMetadata","metadata","retrieveStudiesMetadata","updateMetaDataManager","ViewerRetrieveStudyData","seriesInstanceUids","server","purge","updatedStudies","studyMetadata","sopClassHandlerModules","createDisplaySets","setDisplaySets","add","_context","t0","JSON","stringify","connectedComponents_ConnectedViewer","ConnectedViewerRetrieveStudyData","servers","studyUids","_getQueryParameters","queryString","parse","search","getQueryParameters","requestType","studyUID","connectedComponents_ConnectedViewerRetrieveStudyData","split","atob","ViewerRouting","studyUIDs","seriesUIDs","match","_match$params","datasetsToStudies","datasets","StudyInstanceUIDs","Set","StudyInstanceUID","studyDatasets","firstDataset","StudyDate","studyTime","StudyTime","accessionNumber","AccessionNumber","referringPhysicianName","ReferringPhysicianName","patientName","PatientName","PatientID","patientBirthdate","PatientBirthDate","patientSex","PatientSex","studyId","StudyID","studyDescription","StudyDescription","seriesList","SeriesInstanceUIDs","SeriesInstanceUID","seriesInstanceUid","seriesDatasets","SOPInstanceUIDs","SOPInstanceUID","SeriesDescription","SeriesNumber","instances","instance","sopClassUid","SOPClassUID","Rows","Columns","numberOfFrames","NumberOfFrames","InstanceNumber","filesToStudies","_x","_filesToStudies","apply","_callee","files","imagePromises","regenerator_default","wrap","prev","next","file","wadouri","fileManager","loadAndCacheImage","catch","all","sent","arrayBuffer","byteArray","buffer","dicomData","dcmjs","DicomMessage","readFile","dataset","DicomMetaDictionary","naturalizeDataset","dict","_meta","namifyDataset","meta","abrupt","stop","ViewerLocalFileData","updateStudies","onDrop","asyncToGenerator","mark","acceptedFiles","dist_es","getRootProps","getInputProps","formatFileSize","size","n","floor","pow","toFixed","httpErrorToStr","jsonResponse","code","message","err","getOidcToken","oidcStorageKey","oidcConfigStr","sessionStorage","getItem","checkDicomFile","arr","Uint8Array","every","char","charCodeAt","CancellationToken","cancelled","api_DicomUploadService","url","authToken","uploadCallback","cancellationToken","CHUNK_SIZE","MAX_PARALLEL_JOBS","filesArray","parallelJobsCount","completed","processJob","reject","_ret","_context2","chunk","simpleUpload","fileId","delegateYield","getClient","loadedFile","content","storeInstances","reader","FileReader","onload","result","onerror","readAsArrayBuffer","accessToken","api","DICOMwebClient","DicomUploader","status","isCancelled","errorsCount","uploadedVolume","wholeVolumeStr","isFilesListHidden","timeLeft","uploadedList","totalCount","successfullyUploadedCount","lastFile","uploadContext","uploadFiles","filesDict","fileDesc","path","webkitRelativePath","processed","processedInUI","wholeVolume","f","random","dicomUploader","setOidcStorageKey","oidcKey","smartUpload","renderTableRow","color","errors","htmlFor","src","alt","accept","multiple","webkitdirectory","mozdirectory","percents","filesLeft","DicomFileUploaderModal","uploaded","Modal_default","show","onHide","aria-labelledby","backdrop","keyboard","closeButton","Title","Body","DicomUploader_DicomUploader","ConnectedDicomFileUploader","activeServer","_window$config$oidc$","authority","client_id","qidoRoot","api_GoogleCloudApi","urlStr","URL","URLSearchParams","fetch","fetchConfig","json","nextPageToken","pageToken","doRequest","subPage","hasOwnProperty","isError","t1","projectId","urlBaseProject","locationId","urlBase","method","DicomStoreList","highlightedItem","onHighlightItem","onSelect","loadingIcon","body","stores","DicomStorePicker","locations","loadDicomStores","dicomStores","googleCloud_DicomStoreList","DatasetsList","DatasetPicker","loadDatasets","project","googleCloud_DatasetsList","ProjectsList","projects","ProjectPicker","loadProjects","googleCloud_ProjectsList","LocationsList","LocationPicker","loadLocations","googleCloud_LocationsList","DatasetSelector","unloading","onProjectSelect","onLocationSelect","onDatasetSelect","onProjectClick","onLocationClick","onDatasetClick","onDicomStoreSelect","dicomStoreJson","dicomStore","parts","wadoUriRoot","GoogleCloudApi","wadoRoot","setServers","projectBreadcrumbs","ProjectPicker_ProjectPicker","LocationPicker_LocationPicker","DatasetPicker_DatasetPicker","DicomStorePicker_DicomStorePicker","DicomStorePickerModal","handleEvent","imageRendering","thumbnailRendering","qidoSupportsIncludeField","googleCloud_DatasetSelector","ConnectedDicomStorePicker","StudyListWithData","searchData","modalComponentId","searchForStudies","defaultSearchData","modalitiesInStudy","modalities","studyDateFrom","studyDateTo","limit","rowsPerPage","offset","currentPage","searchStudies","then","_searchData$sortData","sortData","field","order","sortedStudies","isValid","fieldA","fieldB","onImport","openModal","closeModal","onSelectItem","studyInstanceUID","history","onSearch","closeModals","enableGoogleCloudAdapter","filters","healthCareApiButtons","healthCareApiWindows","googleCloud_ConnectedDicomStorePicker","ConnectedDicomFilesUploader","studyList","studyListFunctionsEnabled","pageSize","defaultSort","studyListDateFilterNumDays","defaultStudyDateFrom","subtract","toDate","defaultStudyDateTo","ConnectedStudyList","_ref4","searchParameters","entries","word","slicedToArray","toLowerCase","getFilters","studylist_ConnectedStudyList","StandaloneRouting","qs","parseQueryAndFetchStudies","src_connectedComponents_Viewer","oReq","XMLHttpRequest","responseText","dicomWeb","open","send","CallbackPage","redux_oidc","successCallback","errorCallback","NotFound","Bar","animationDuration","background","transition","boxShadow","opacity","transform","Container","isFinished","pointerEvents","reload","OHIFStandaloneViewer","isLoading","unlisten","listen","setContext","expired","setItem","react_router","exact","onEnter","render","routes_CallbackPage","signinRedirect","routes","IHEInvokeImageDisplay","StudyListRouting","currentPath","noMatchingRoutes","r","matchPath","react_nprogress","isAnimating","LoadingBar_Container","LoadingBar_Bar","unmountOnExit","onEntered","NotFound_NotFound","ConnectedOHIFStandaloneViewer","ViewerbaseDragDropContext","resetLabellingAndContextMenuAction","setToolContextMenuDataAction","getOnRightClickCallback","getOnCloseCallback","setToolContextMenuData","getOnTouchPressCallback","getResetLabellingAndContextMenu","Hammer","cornerstoneMath","init","textStyle","setFont","toolStyle","setToolWidth","toolColors","setToolColor","setActiveColor","touchProximity","initCornerstoneTools","globalToolSyncEnabled","commandsManagerConfig","getAppState","CommandsManager","HotkeysManager","ExtensionManager","toolLabellingFlowCallback","setLabellingFlowData","setLabellingFlowDataAction","editResponse","getToolLabellingFlowCallback","mouseButtonMasks","onRightClick","onTouchPress","onNewImage","onMouseClick","toolAction","setExtensionData","setupTools","registerExtensions","OHIFCornerstoneExtension","OHIFVTKExtension","OHIFDicomPDFExtension","OHIFDicomHtmlExtension","OHIFDicomMicroscopyExtension","hotkeys","setHotkeys","App","firstOpenIdClient","addServers","baseDirectory","webWorkScriptsPath","scriptsPath","protocol","host","maxWebWorkers","max","navigator","hardwareConcurrency","startWebWorkersOnDemand","webWorkerPath","taskConfiguration","decodeTask","loadCodecsOnStartup","initializeCodecsOnStartup","codecsPath","usePDFJS","strict","webWorkerManager","initialize","initWebWorkers","routerBasename","relativeWebWorkerScriptsPath","react_redux_es","es","i18n","basename","Provider","src_OHIFStandaloneViewer_0","__webpack_require__","d","__webpack_exports__","src_App","applicationProps","app","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.80e749d1.chunk.js","sourcesContent":["import OHIF from 'ohif-core';\nimport cornerstone from 'cornerstone-core';\nimport cornerstoneWADOImageLoader from 'cornerstone-wado-image-loader';\nimport dicomParser from 'dicom-parser';\nimport version from './version.js';\n\nwindow.info = {\n  version,\n  homepage: `${process.env.PUBLIC_URL}`,\n};\n\n// For debugging\n//if (process.env.node_env === 'development') {\nwindow.cornerstone = cornerstone;\nwindow.cornerstoneWADOImageLoader = cornerstoneWADOImageLoader;\n//}\n\ncornerstoneWADOImageLoader.external.cornerstone = cornerstone;\ncornerstoneWADOImageLoader.external.dicomParser = dicomParser;\n\nOHIF.user.getAccessToken = () => {\n  // TODO: Get the Redux store from somewhere else\n  const state = window.store.getState();\n  if (!state.oidc || !state.oidc.user) {\n    return;\n  }\n\n  return state.oidc.user.access_token;\n};\n\ncornerstoneWADOImageLoader.configure({\n  beforeSend: function(xhr) {\n    const headers = OHIF.DICOMWeb.getAuthorizationHeader();\n\n    if (headers.Authorization) {\n      xhr.setRequestHeader('Authorization', headers.Authorization);\n    }\n  },\n});\n","export default '0.0.21';\n","// https://github.com/maxmantz/redux-oidc/blob/master/docs/API.md\nimport { loadUser, createUserManager } from 'redux-oidc';\n\n/**\n * Creates a userManager from oidcSettings;\n * loads the user into the provided redux store\n * LINK: https://github.com/IdentityModel/oidc-client-js/wiki#configuration\n *\n * @param {*} store\n * @param {Object} oidcSettings\n * @param {string} oidcSettings.authServerUrl,\n * @param {string} oidcSettings.clientId,\n * @param {string} oidcSettings.authRedirectUri,\n * @param {string} oidcSettings.postLogoutRedirectUri,\n * @param {string} oidcSettings.responseType,\n * @param {string} oidcSettings.extraQueryParams,\n */\nexport default function(store, oidcSettings) {\n  if (!store || !oidcSettings) {\n    return;\n  }\n\n  const settings = {\n    ...oidcSettings,\n    silent_redirect_uri: '/silent-refresh.html',\n    automaticSilentRenew: true,\n    revokeAccessTokenOnSignout: true,\n    filterProtocolClaims: true,\n    loadUserInfo: true,\n  };\n\n  const userManager = createUserManager(settings);\n\n  loadUser(store, userManager);\n\n  return userManager;\n}\n","const defaultState = {\n  labelling: {},\n  contextMenu: {},\n};\n\nconst ui = (state = defaultState, action) => {\n  switch (action.type) {\n    case 'SET_LABELLING_FLOW_DATA': {\n      const labelling = Object.assign({}, action.labellingFlowData);\n\n      return Object.assign({}, state, { labelling });\n    }\n    case 'SET_TOOL_CONTEXT_MENU_DATA': {\n      const contextMenu = Object.assign({}, state.contextMenu);\n\n      contextMenu[action.viewportIndex] = Object.assign(\n        {},\n        action.toolContextMenuData\n      );\n\n      return Object.assign({}, state, { contextMenu });\n    }\n    case 'RESET_LABELLING_AND_CONTEXT_MENU':\n      return Object.assign({}, state, {\n        labelling: defaultState.labelling,\n        contextMenu: defaultState.contextMenu,\n      });\n    default:\n      return state;\n  }\n};\n\nexport default ui;\n","import { applyMiddleware, combineReducers, createStore } from 'redux';\n\n// import { createLogger } from 'redux-logger';\nimport layoutReducers from './layout/reducers.js';\nimport { reducer as oidcReducer } from 'redux-oidc';\nimport { redux } from 'ohif-core';\nimport thunkMiddleware from 'redux-thunk';\n\n// Combine our ohif-core, ui, and oidc reducers\n// Set init data, using values found in localStorage\nconst { reducers, localStorage } = redux;\n// const loggerMiddleware = createLogger();\n\nreducers.ui = layoutReducers;\nreducers.oidc = oidcReducer;\n\nconst rootReducer = combineReducers(reducers);\nconst store = createStore(\n  rootReducer,\n  localStorage.loadState(), // preloadedState\n  applyMiddleware(\n    thunkMiddleware // Lets us dispatch() functions\n    // loggerMiddleware // neat middleware that logs actions\n  )\n);\n\n// When the store's preferences change,\n// Update our cached preferences in localStorage\nstore.subscribe(() => {\n  localStorage.saveState({\n    preferences: store.getState().preferences,\n  });\n});\n\nexport default store;\n","import { redux } from 'ohif-core';\nimport store from './../../store';\nconst { setViewportActive } = redux.actions;\n\nconst actions = {\n  updateViewportDisplaySet: ({ direction }) => {\n    // TODO\n    // console.warn('updateDisplaySet: ', direction);\n  },\n  updateActiveViewport: ({ viewports, direction }) => {\n    const { viewportSpecificData, activeViewportIndex } = viewports;\n    const maxIndex = Object.keys(viewportSpecificData).length - 1;\n\n    let newIndex = activeViewportIndex + direction;\n    newIndex = newIndex > maxIndex ? 0 : newIndex;\n    newIndex = newIndex < 0 ? maxIndex : newIndex;\n\n    store.dispatch(setViewportActive(newIndex));\n  },\n};\n\nconst definitions = {\n  // Next/Previous active viewport\n  incrementActiveViewport: {\n    commandFn: actions.updateActiveViewport,\n    storeContexts: ['viewports'],\n    options: { direction: 1 },\n  },\n  decrementActiveViewport: {\n    commandFn: actions.updateActiveViewport,\n    storeContexts: ['viewports'],\n    options: { direction: -1 },\n  },\n};\n\nexport default {\n  definitions,\n  defaultContext: 'VIEWER',\n};\n","import commandsModule from './commandsModule.js';\n\nexport default {\n  id: 'generic-viewer-commands',\n  getCommandsModule() {\n    return commandsModule;\n  },\n};\n","import { measurements, utils } from 'ohif-core';\n\nconst { MeasurementApi } = measurements;\nconst { studyMetadataManager } = utils;\n\n// TODO: Move this function to OHIF itself so we can use it on the OHIF measurment table (when it is finished)\n\n/**\n * Activates a set of measurements\n *\n * @param measurementData\n * @param viewportsState\n * @param timepointManagerState\n * @param options\n */\nexport default function jumpToRowItem(\n  measurementData,\n  viewportsState,\n  timepointManagerState,\n  options = { invertViewportTimepointsOrder: false, childToolKey: null }\n) {\n  const numViewports = viewportsState.layout.viewports.length;\n  const numTimepoints = timepointManagerState.timepoints.length;\n  const { measurements, timepoints } = timepointManagerState;\n  const numViewportsToUpdate = Math.min(numTimepoints, numViewports);\n  const { toolType, measurementNumber } = measurementData;\n\n  if (options.invertViewportTimepointsOrder) {\n    timepoints.reverse();\n  }\n\n  const measurementsForToolGroup = measurements[toolType];\n\n  // Retrieve the measurements data\n  const measurementsToJumpTo = [];\n  for (let i = 0; i < numViewportsToUpdate; i++) {\n    const { timepointId } = timepoints[i];\n\n    const dataAtThisTimepoint = measurementsForToolGroup.find(entry => {\n      return (\n        entry.timepointId === timepointId &&\n        entry.measurementNumber === measurementNumber\n      );\n    });\n\n    if (!dataAtThisTimepoint) {\n      measurementsToJumpTo.push(null);\n      continue;\n    }\n\n    let measurement = dataAtThisTimepoint;\n\n    const { tool } = MeasurementApi.getToolConfiguration(toolType);\n    if (options.childToolKey) {\n      measurement = dataAtThisTimepoint[options.childToolKey];\n    } else if (Array.isArray(tool.childTools)) {\n      const key = tool.childTools.find(key => !!dataAtThisTimepoint[key]);\n      measurement = dataAtThisTimepoint[key];\n    }\n\n    measurementsToJumpTo.push(measurement);\n  }\n\n  // TODO: Add a single viewports state action which allows\n  // - viewportData to be set\n  // - layout to be set\n  // - activeViewport to be set\n\n  // Needs to update viewports.viewportData state to set image set data\n\n  const displaySetContainsSopInstance = (displaySet, sopInstanceUid) =>\n    displaySet.images.find(\n      image => image.getSOPInstanceUID() === sopInstanceUid\n    );\n\n  const viewportSpecificData = [];\n  measurementsToJumpTo.forEach((data, viewportIndex) => {\n    // Skip if there is no measurement to jump\n    if (!data) {\n      return;\n    }\n\n    const study = studyMetadataManager.get(data.studyInstanceUid);\n    if (!study) {\n      throw new Error('Study not found.');\n    }\n\n    const displaySet = study.findDisplaySet(displaySet => {\n      return displaySetContainsSopInstance(displaySet, data.sopInstanceUid);\n    });\n\n    if (!displaySet) {\n      throw new Error('Display set not found.');\n    }\n\n    displaySet.sopInstanceUid = data.sopInstanceUid;\n    if (data.frameIndex) {\n      displaySet.frameIndex = data.frameIndex;\n    }\n\n    viewportSpecificData.push({\n      viewportIndex,\n      displaySet,\n    });\n  });\n\n  return {\n    viewportSpecificData,\n    layout: [], // TODO: if we need to change layout, we should return this here\n  };\n}\n","import OHIF from 'ohif-core';\nimport cornerstone from 'cornerstone-core';\n\nexport default function updateTableWithNewMeasurementData({\n  toolType,\n  measurementNumber,\n  location,\n  description,\n}) {\n  // Update all measurements by measurement number\n  const measurementApi = OHIF.measurements.MeasurementApi.Instance;\n  const measurements = measurementApi.tools[toolType].filter(\n    m => m.measurementNumber === measurementNumber\n  );\n\n  measurements.forEach(measurement => {\n    measurement.location = location;\n    measurement.description = description;\n\n    measurementApi.updateMeasurement(measurement.toolType, measurement);\n  });\n\n  measurementApi.syncMeasurementsAndToolData();\n\n  // Update images in all active viewports\n  cornerstone.getEnabledElements().forEach(enabledElement => {\n    cornerstone.updateImage(enabledElement.element);\n  });\n}\n","import cornerstoneTools from 'cornerstone-tools';\nimport updateTableWithNewMeasurementData from './updateTableWithNewMeasurementData';\n\nexport default function getMeasurementLocationCallback(\n  eventData,\n  tool,\n  options\n) {\n  const { toolType } = tool;\n  const { element } = eventData;\n  const doneCallback = updateTableWithNewMeasurementData;\n\n  const ToolInstance = cornerstoneTools.getToolForElement(element, toolType);\n\n  if (\n    !ToolInstance ||\n    !ToolInstance.configuration ||\n    !ToolInstance.configuration.getMeasurementLocationCallback\n  ) {\n    console.warn(\n      'Tool instance configuration is missing: getMeasurementLocationCallback'\n    );\n\n    return;\n  }\n\n  ToolInstance.configuration.getMeasurementLocationCallback(\n    tool,\n    eventData,\n    doneCallback,\n    options\n  );\n}\n","import { connect } from 'react-redux';\nimport { MeasurementTable } from 'react-viewerbase';\nimport OHIF from 'ohif-core';\nimport moment from 'moment';\nimport cornerstone from 'cornerstone-core';\n\n//\nimport jumpToRowItem from './jumpToRowItem.js';\nimport getMeasurementLocationCallback from './../../lib/getMeasurementLocationCallback';\n\nconst { setViewportSpecificData } = OHIF.redux.actions;\nconst { MeasurementApi } = OHIF.measurements;\n\nfunction groupBy(list, props) {\n  return list.reduce((a, b) => {\n    (a[b[props]] = a[b[props]] || []).push(b);\n    return a;\n  }, {});\n}\n\nfunction getAllTools() {\n  const config = OHIF.measurements.MeasurementApi.getConfiguration();\n  let tools = [];\n  config.measurementTools.forEach(\n    toolGroup => (tools = tools.concat(toolGroup.childTools))\n  );\n\n  return tools;\n}\n\nfunction getMeasurementText(measurementData) {\n  const { location, description } = measurementData;\n  let text = '...';\n  if (location) {\n    text = location;\n    if (description) {\n      text += `(${description})`;\n    }\n  }\n  return text;\n}\n\nfunction getDataForEachMeasurementNumber(\n  measurementNumberList,\n  timepoints,\n  displayFunction\n) {\n  const data = [];\n  // on each measurement number we should get each measurement data by available timepoint\n  measurementNumberList.forEach(measurement => {\n    timepoints.forEach(timepoint => {\n      const eachData = {\n        displayText: '...',\n      };\n      if (measurement.timepointId === timepoint.timepointId) {\n        eachData.displayText = displayFunction(measurement);\n      }\n      data.push(eachData);\n    });\n  });\n\n  return data;\n}\n\nfunction convertMeasurementsToTableData(toolCollections, timepoints) {\n  const config = OHIF.measurements.MeasurementApi.getConfiguration();\n  const toolGroups = config.measurementTools;\n  const tools = getAllTools();\n\n  const tableMeasurements = toolGroups.map(toolGroup => {\n    return {\n      groupName: toolGroup.name,\n      groupId: toolGroup.id,\n      measurements: [],\n    };\n  });\n\n  Object.keys(toolCollections).forEach(toolId => {\n    const toolMeasurements = toolCollections[toolId];\n    const tool = tools.find(tool => tool.id === toolId);\n    const { displayFunction } = tool.options.measurementTable;\n\n    // Group by measurementNumber so we can display then all in the same line\n    const groupedMeasurements = groupBy(toolMeasurements, 'measurementNumber');\n\n    Object.keys(groupedMeasurements).forEach(groupedMeasurementsIndex => {\n      const measurementNumberList =\n        groupedMeasurements[groupedMeasurementsIndex];\n      const measurementData = measurementNumberList[0];\n      const {\n        measurementNumber,\n        lesionNamingNumber,\n        toolType,\n      } = measurementData;\n      const measurementId = measurementData._id;\n\n      //check if all measurements with same measurementNumber will have same LABEL\n      const tableMeasurement = {\n        itemNumber: lesionNamingNumber,\n        label: getMeasurementText(measurementData),\n        measurementId,\n        measurementNumber,\n        lesionNamingNumber,\n        toolType,\n        hasWarnings: false, //TODO\n        warningTitle: '', //TODO\n        isSplitLesion: false, //TODO\n        warningList: [], //TODO\n        data: getDataForEachMeasurementNumber(\n          measurementNumberList,\n          timepoints,\n          displayFunction\n        ),\n      };\n\n      // find the group object for the tool\n      const toolGroupMeasurements = tableMeasurements.find(group => {\n        return group.groupId === tool.toolGroup;\n      });\n      // inject the new measurement for this measurementNumer\n      toolGroupMeasurements.measurements.push(tableMeasurement);\n    });\n  });\n\n  // Sort measurements by lesion naming number\n  tableMeasurements.forEach(tm => {\n    tm.measurements.sort((m1, m2) =>\n      m1.lesionNamingNumber > m2.lesionNamingNumber ? 1 : -1\n    );\n  });\n\n  return tableMeasurements;\n}\n\nfunction convertTimepointsToTableData(timepoints) {\n  if (!timepoints || !timepoints.length) {\n    return [];\n  }\n\n  return [\n    {\n      label: 'Study date:',\n      key: 'StudyDate',\n      date: moment(timepoints[0].latestDate).format('DD-MMM-YY'),\n    },\n  ];\n}\n\nconst mapStateToProps = state => {\n  const { timepoints, measurements } = state.timepointManager;\n  return {\n    timepoints: convertTimepointsToTableData(timepoints),\n    measurementCollection: convertMeasurementsToTableData(\n      measurements,\n      timepoints\n    ),\n    timepointManager: state.timepointManager,\n    viewports: state.viewports,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    dispatchRelabel: (event, measurementData, viewportsState) => {\n      const activeViewportIndex =\n        (viewportsState && viewportsState.activeViewportIndex) || 0;\n\n      const enabledElements = cornerstone.getEnabledElements();\n      if (!enabledElements || enabledElements.length <= activeViewportIndex) {\n        OHIF.log.error('Failed to find the enabled element');\n        return;\n      }\n\n      const { element } = enabledElements[activeViewportIndex];\n\n      const eventData = {\n        event: {\n          clientX: event.clientX,\n          clientY: event.clientY,\n        },\n        element,\n      };\n\n      const { toolType, measurementId } = measurementData;\n      const tool = MeasurementApi.Instance.tools[toolType].find(measurement => {\n        return measurement._id === measurementId;\n      });\n\n      const options = {\n        skipAddLabelButton: true,\n        editLocation: true,\n      };\n\n      // Clone the tool not to set empty location initially\n      const toolForLocation = Object.assign({}, tool, { location: null });\n      getMeasurementLocationCallback(eventData, toolForLocation, options);\n    },\n    dispatchEditDescription: (event, measurementData, viewportsState) => {\n      const activeViewportIndex =\n        (viewportsState && viewportsState.activeViewportIndex) || 0;\n\n      const enabledElements = cornerstone.getEnabledElements();\n      if (!enabledElements || enabledElements.length <= activeViewportIndex) {\n        OHIF.log.error('Failed to find the enabled element');\n        return;\n      }\n\n      const { element } = enabledElements[activeViewportIndex];\n\n      const eventData = {\n        event: {\n          clientX: event.clientX,\n          clientY: event.clientY,\n        },\n        element,\n      };\n\n      const { toolType, measurementId } = measurementData;\n      const tool = MeasurementApi.Instance.tools[toolType].find(measurement => {\n        return measurement._id === measurementId;\n      });\n\n      const options = {\n        editDescriptionOnDialog: true,\n      };\n\n      getMeasurementLocationCallback(eventData, tool, options);\n    },\n    dispatchJumpToRowItem: (\n      measurementData,\n      viewportsState,\n      timepointManagerState,\n      options\n    ) => {\n      const actionData = jumpToRowItem(\n        measurementData,\n        viewportsState,\n        timepointManagerState,\n        dispatch,\n        options\n      );\n\n      actionData.viewportSpecificData.forEach(viewportSpecificData => {\n        const { viewportIndex, displaySet } = viewportSpecificData;\n\n        dispatch(setViewportSpecificData(viewportIndex, displaySet));\n      });\n\n      const { toolType, measurementNumber } = measurementData;\n      const measurementApi = MeasurementApi.Instance;\n\n      Object.keys(measurementApi.tools).forEach(toolType => {\n        const measurements = measurementApi.tools[toolType];\n\n        measurements.forEach(measurement => {\n          measurement.active = false;\n        });\n      });\n\n      const measurementsToActive = measurementApi.tools[toolType].filter(\n        measurement => {\n          return measurement.measurementNumber === measurementNumber;\n        }\n      );\n\n      measurementsToActive.forEach(measurementToActive => {\n        measurementToActive.active = true;\n      });\n\n      measurementApi.syncMeasurementsAndToolData();\n\n      cornerstone.getEnabledElements().forEach(enabledElement => {\n        cornerstone.updateImage(enabledElement.element);\n      });\n\n      // Needs to update viewports.layout state to set layout\n      //const layout = actionData.layout;\n      //dispatch(setLayout(layout))\n\n      // Needs to update viewports.activeViewportIndex to the first updated viewport\n      //const viewportIndex = actionData.viewportIndex;\n      //dispatch(setViewportActive(viewportIndex));\n\n      // Needs to update timepointsManager.measurements state to set active measurementId\n      // TODO: Not yet implemented\n      //dispatch(setActiveMeasurement(measurementData.measurementId))\n\n      // (later): Needs to set some property on state.extensions.cornerstone to synchronize viewport scrolling\n    },\n  };\n};\n\nconst mergeProps = (propsFromState, propsFromDispatch, ownProps) => {\n  return {\n    timepoints: propsFromState.timepoints,\n    measurementCollection: propsFromState.measurementCollection,\n    selectedMeasurementNumber: ownProps.selectedMeasurementNumber,\n    ...propsFromDispatch,\n    onItemClick: (event, measurementData) => {\n      // TODO: Add timepointId to .data for measurementData?\n      // TODO: Tooltype should be on the level below? This should\n      // provide the entire row item?\n\n      const viewportsState = propsFromState.viewports;\n      const timepointManagerState = propsFromState.timepointManager;\n\n      // TODO: invertViewportTimepointsOrder should be stored in / read from user preferences\n      // TODO: childToolKey should come from the measurement table when it supports child tools\n      const options = {\n        invertViewportTimepointsOrder: false,\n        childToolKey: null,\n      };\n\n      propsFromDispatch.dispatchJumpToRowItem(\n        measurementData,\n        viewportsState,\n        timepointManagerState,\n        options\n      );\n    },\n    onRelabelClick: (event, measurementData) => {\n      const viewportsState = propsFromState.viewports;\n      propsFromDispatch.dispatchRelabel(event, measurementData, viewportsState);\n    },\n    onEditDescriptionClick: (event, measurementData) => {\n      const viewportsState = propsFromState.viewports;\n      propsFromDispatch.dispatchEditDescription(\n        event,\n        measurementData,\n        viewportsState\n      );\n    },\n    onDeleteClick: (event, measurementData) => {\n      const { MeasurementHandlers } = OHIF.measurements;\n\n      MeasurementHandlers.onRemoved({\n        detail: {\n          toolType: measurementData.toolType,\n          measurementData: {\n            _id: measurementData.measurementId,\n            lesionNamingNumber: measurementData.lesionNamingNumber,\n            measurementNumber: measurementData.measurementNumber,\n          },\n        },\n      });\n    },\n  };\n};\n\nconst ConnectedMeasurementTable = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  mergeProps\n)(MeasurementTable);\n\nexport default ConnectedMeasurementTable;\n","import ConnectedMeasurementTable from './ConnectedMeasurementTable.js';\n\nexport default {\n  id: 'measurements-table',\n  getPanelModule() {\n    return {\n      menuOptions: [\n        {\n          icon: 'list',\n          label: 'Measurements',\n          target: 'measurement-panel',\n        },\n      ],\n      components: [\n        {\n          id: 'measurement-panel',\n          component: ConnectedMeasurementTable,\n        },\n      ],\n      defaultContext: ['VIEWER'],\n    };\n  },\n};\n","import './OHIFLogo.css';\n\nimport { Icon } from 'react-viewerbase';\nimport React from 'react';\n\nfunction OHIFLogo() {\n  return (\n    <a\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n      className=\"header-brand\"\n      href=\"http://ohif.org\"\n    >\n      <Icon name=\"ohif-logo\" className=\"header-logo-image\" />\n      <div className=\"header-logo-text\">Open Health Imaging Foundation</div>\n    </a>\n  );\n}\n\nexport default OHIFLogo;\n","import OHIFLogo from './components/OHIFLogo/OHIFLogo.js';\nimport React from 'react';\n\nconst defaultContextValues = {\n  logoComponent: OHIFLogo(),\n};\n\nconst WhiteLabellingContext = React.createContext(defaultContextValues);\n\nexport default WhiteLabellingContext;\n","import './Header.css';\nimport './Header.css';\n\nimport { Link, withRouter } from 'react-router-dom';\nimport React, { Component } from 'react';\n\nimport { Dropdown } from 'react-viewerbase';\nimport OHIFLogo from '../OHIFLogo/OHIFLogo.js';\nimport PropTypes from 'prop-types';\nimport { AboutModal } from 'react-viewerbase';\nimport { hotkeysManager } from './../../App.js';\nimport { withTranslation } from 'react-i18next';\n\nclass Header extends Component {\n  static propTypes = {\n    home: PropTypes.bool.isRequired,\n    location: PropTypes.object.isRequired,\n    children: PropTypes.node,\n    t: PropTypes.func.isRequired,\n  };\n\n  static defaultProps = {\n    home: true,\n    children: OHIFLogo(),\n  };\n\n  // onSave: data => {\n  //   const contextName = store.getState().commandContext.context;\n  //   const preferences = cloneDeep(store.getState().preferences);\n  //   preferences[contextName] = data;\n  //   dispatch(setUserPreferences(preferences));\n  //   dispatch(setUserPreferencesModalOpen(false));\n  //   OHIF.hotkeysUtil.setHotkeys(data.hotKeysData);\n  // },\n  // onResetToDefaults: () => {\n  //   dispatch(setUserPreferences());\n  //   dispatch(setUserPreferencesModalOpen(false));\n  //   OHIF.hotkeysUtil.setHotkeys();\n  // },\n\n  constructor(props) {\n    super(props);\n    this.state = { isUserPreferencesOpen: false, isOpen: false };\n\n    this.loadOptions();\n  }\n\n  loadOptions() {\n    const { t } = this.props;\n    this.options = [\n      {\n        title: t('About'),\n        icon: { name: 'info' },\n        onClick: () => {\n          this.setState({\n            isOpen: true,\n          });\n        },\n      },\n    ];\n\n    this.hotKeysData = hotkeysManager.hotkeyDefinitions;\n  }\n\n  onUserPreferencesSave({ windowLevelData, hotKeysData }) {\n    // console.log(windowLevelData);\n    // console.log(hotKeysData);\n    // TODO: Update hotkeysManager\n    // TODO: reset `this.hotKeysData`\n  }\n\n  render() {\n    const { t } = this.props;\n    const showStudyList =\n      window.config.showStudyList !== undefined\n        ? window.config.showStudyList\n        : true;\n    return (\n      <div className={`entry-header ${this.props.home ? 'header-big' : ''}`}>\n        <div className=\"header-left-box\">\n          {this.props.location && this.props.location.studyLink && (\n            <Link\n              to={this.props.location.studyLink}\n              className=\"header-btn header-viewerLink\"\n            >\n              {t('Back to Viewer')}\n            </Link>\n          )}\n\n          {this.props.children}\n\n          {showStudyList && !this.props.home && (\n            <Link\n              className=\"header-btn header-studyListLinkSection\"\n              to={{\n                pathname: '/',\n                state: { studyLink: this.props.location.pathname },\n              }}\n            >\n              {t('Study list')}\n            </Link>\n          )}\n        </div>\n\n        <div className=\"header-menu\">\n          <span className=\"research-use\">{t('INVESTIGATIONAL USE ONLY')}</span>\n          <Dropdown title={t('Options')} list={this.options} align=\"right\" />\n          <AboutModal\n            {...this.state}\n            onCancel={() =>\n              this.setState({\n                isOpen: false,\n              })\n            }\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withTranslation('Header')(withRouter(Header));\n","import Header from '../components/Header/Header.js';\nimport { connect } from 'react-redux';\n\nconst mapStateToProps = state => {\n  return {\n    isOpen: state.ui.userPreferencesModalOpen,\n  };\n};\n\nconst ConnectedHeader = connect(mapStateToProps)(Header);\n\nexport default ConnectedHeader;\n","import { connect } from 'react-redux';\nimport { CineDialog } from 'react-viewerbase';\nimport OHIF from 'ohif-core';\nimport csTools from 'cornerstone-tools';\n// Our target output kills the `as` and \"import\" throws a keyword error\n// import { import as toolImport, getToolState } from 'cornerstone-tools';\nimport cloneDeep from 'lodash.clonedeep';\n\nconst toolImport = csTools.import;\nconst scrollToIndex = toolImport('util/scrollToIndex');\nconst { setViewportSpecificData } = OHIF.redux.actions;\n\n// Why do I need or care about any of this info?\n// A dispatch action should be able to pull this at the time of an event?\n// `isPlaying` and `cineFrameRate` might matter, but I think we can prop pass for those.\nconst mapStateToProps = state => {\n  // Get activeViewport's `cine` and `stack`\n  const { viewportSpecificData, activeViewportIndex } = state.viewports;\n  const { cine, dom } = viewportSpecificData[activeViewportIndex] || {};\n\n  const cineData = cine || {\n    isPlaying: false,\n    cineFrameRate: 24,\n  };\n\n  // New props we're creating?\n  return {\n    activeEnabledElement: dom,\n    activeViewportCineData: cineData,\n    activeViewportIndex: state.viewports.activeViewportIndex,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    dispatchSetViewportSpecificData: (viewportIndex, data) => {\n      dispatch(setViewportSpecificData(viewportIndex, data));\n    },\n  };\n};\n\nconst mergeProps = (propsFromState, propsFromDispatch, ownProps) => {\n  const {\n    activeEnabledElement,\n    activeViewportCineData,\n    activeViewportIndex,\n  } = propsFromState;\n\n  return {\n    cineFrameRate: activeViewportCineData.cineFrameRate,\n    isPlaying: activeViewportCineData.isPlaying,\n    onPlayPauseChanged: isPlaying => {\n      const cine = cloneDeep(activeViewportCineData);\n      cine.isPlaying = !cine.isPlaying;\n\n      propsFromDispatch.dispatchSetViewportSpecificData(activeViewportIndex, {\n        cine,\n      });\n    },\n    onFrameRateChanged: frameRate => {\n      const cine = cloneDeep(activeViewportCineData);\n      cine.cineFrameRate = frameRate;\n\n      propsFromDispatch.dispatchSetViewportSpecificData(activeViewportIndex, {\n        cine,\n      });\n    },\n    onClickNextButton: () => {\n      const stackData = csTools.getToolState(activeEnabledElement, 'stack');\n      if (!stackData || !stackData.data || !stackData.data.length) return;\n      const { currentImageIdIndex, imageIds } = stackData.data[0];\n      if (currentImageIdIndex >= imageIds.length - 1) return;\n      scrollToIndex(activeEnabledElement, currentImageIdIndex + 1);\n    },\n    onClickBackButton: () => {\n      const stackData = csTools.getToolState(activeEnabledElement, 'stack');\n      if (!stackData || !stackData.data || !stackData.data.length) return;\n      const { currentImageIdIndex } = stackData.data[0];\n      if (currentImageIdIndex === 0) return;\n      scrollToIndex(activeEnabledElement, currentImageIdIndex - 1);\n    },\n    onClickSkipToStart: () => {\n      const stackData = csTools.getToolState(activeEnabledElement, 'stack');\n      if (!stackData || !stackData.data || !stackData.data.length) return;\n      scrollToIndex(activeEnabledElement, 0);\n    },\n    onClickSkipToEnd: () => {\n      const stackData = csTools.getToolState(activeEnabledElement, 'stack');\n      if (!stackData || !stackData.data || !stackData.data.length) return;\n      const lastIndex = stackData.data[0].imageIds.length - 1;\n      scrollToIndex(activeEnabledElement, lastIndex);\n    },\n  };\n};\n\nconst ConnectedCineDialog = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  mergeProps\n)(CineDialog);\n\nexport default ConnectedCineDialog;\n","import { LayoutButton } from 'react-viewerbase';\nimport OHIF from 'ohif-core';\nimport { connect } from 'react-redux';\n\nconst { setLayout } = OHIF.redux.actions;\n\nconst mapStateToProps = state => {\n  return {\n    currentLayout: state.viewports.layout,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    // TODO: Change if layout switched becomes more complex\n    onChange: selectedCell => {\n      let viewports = [];\n      const rows = selectedCell.row + 1;\n      const columns = selectedCell.col + 1;\n      const numViewports = rows * columns;\n      for (let i = 0; i < numViewports; i++) {\n        viewports.push({\n          height: `${100 / rows}%`,\n          width: `${100 / columns}%`,\n        });\n      }\n      const layout = {\n        viewports,\n      };\n\n      dispatch(setLayout(layout));\n    },\n  };\n};\n\nconst ConnectedLayoutButton = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LayoutButton);\n\nexport default ConnectedLayoutButton;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { ExpandableToolMenu } from 'react-viewerbase';\nimport './PluginSwitch.css';\n\nclass PluginSwitch extends Component {\n  static propTypes = {\n    buttons: PropTypes.array,\n  };\n\n  static defaultProps = {};\n\n  render() {\n    return (\n      <div className=\"PluginSwitch\">\n        <ExpandableToolMenu buttons={this.props.buttons} text={'View'} />\n      </div>\n    );\n  }\n}\n\nexport default PluginSwitch;\n","import OHIF from 'ohif-core';\nimport PluginSwitch from './PluginSwitch.js';\nimport { commandsManager } from './../App.js';\nimport { connect } from 'react-redux';\n\nconst { setLayout } = OHIF.redux.actions;\n\nconst mapStateToProps = state => {\n  const { activeViewportIndex, layout, viewportSpecificData } = state.viewports;\n\n  return {\n    activeViewportIndex,\n    viewportSpecificData,\n    layout,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setLayout: data => {\n      dispatch(setLayout(data));\n    },\n  };\n};\n\n/*function setSingleLayoutData(originalArray, viewportIndex, data) {\n  const viewports = originalArray.slice();\n  const layoutData = Object.assign({}, viewports[viewportIndex], data);\n\n  viewports[viewportIndex] = layoutData;\n\n  return viewports;\n}*/\n\nconst mergeProps = (propsFromState, propsFromDispatch, ownProps) => {\n  //const { activeViewportIndex, layout } = propsFromState;\n  //const { setLayout } = propsFromDispatch;\n\n  // TODO: Do not display certain options if the current display set\n  // cannot be displayed using these view types\n  const buttons = [\n    /*{\n      text: 'Acquired',\n      type: 'command',\n      icon: 'bars',\n      active: false,\n      onClick: () => {\n        console.warn('Original Acquisition');\n\n        const layoutData = setSingleLayoutData(\n          layout.viewports,\n          activeViewportIndex,\n          { plugin: 'cornerstone' }\n        );\n\n        setLayout({ viewports: layoutData });\n      },\n    },\n    {\n      text: 'Axial',\n      icon: 'cube',\n      active: false,\n      onClick: () => {\n        commandsManager.runCommand('axial');\n      },\n    },\n    {\n      text: 'Sagittal',\n      icon: 'cube',\n      active: false,\n      onClick: () => {\n        commandsManager.runCommand('sagittal');\n      },\n    },\n    {\n      text: 'Coronal',\n      icon: 'cube',\n      active: false,\n      onClick: () => {\n        commandsManager.runCommand('coronal');\n      },\n    },*/\n    {\n      label: '2D MPR',\n      icon: 'cube',\n      onClick: () => {\n        commandsManager.runCommand('mpr2d');\n      },\n    },\n  ];\n\n  return {\n    buttons,\n  };\n};\n\nconst ConnectedPluginSwitch = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  mergeProps\n)(PluginSwitch);\n\nexport default ConnectedPluginSwitch;\n","import './ToolbarRow.css';\n\nimport React, { Component } from 'react';\nimport {\n  ExpandableToolMenu,\n  RoundedButtonGroup,\n  ToolbarButton,\n} from 'react-viewerbase';\nimport { commandsManager, extensionManager } from './../App.js';\n\nimport ConnectedCineDialog from './ConnectedCineDialog';\nimport ConnectedLayoutButton from './ConnectedLayoutButton';\nimport ConnectedPluginSwitch from './ConnectedPluginSwitch.js';\nimport { MODULE_TYPES } from 'ohif-core';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\n\nclass ToolbarRow extends Component {\n  // TODO: Simplify these? isOpen can be computed if we say \"any\" value for selected,\n  // closed if selected is null/undefined\n  static propTypes = {\n    isLeftSidePanelOpen: PropTypes.bool.isRequired,\n    isRightSidePanelOpen: PropTypes.bool.isRequired,\n    selectedLeftSidePanel: PropTypes.string.isRequired,\n    selectedRightSidePanel: PropTypes.string.isRequired,\n    handleSidePanelChange: PropTypes.func,\n    activeContexts: PropTypes.arrayOf(PropTypes.string).isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n\n    const toolbarButtonDefinitions = _getVisibleToolbarButtons.call(this);\n    // TODO:\n    // If it's a tool that can be active... Mark it as active?\n    // - Tools that are on/off?\n    // - Tools that can be bound to multiple buttons?\n\n    // Normal ToolbarButtons...\n    // Just how high do we need to hoist this state?\n    // Why ToolbarRow instead of just Toolbar? Do we have any others?\n    this.state = {\n      toolbarButtons: toolbarButtonDefinitions,\n      activeButtons: [],\n      isCineDialogOpen: false,\n    };\n\n    this._handleBuiltIn = _handleBuiltIn.bind(this);\n\n    const panelModules = extensionManager.modules[MODULE_TYPES.PANEL];\n    this.buttonGroups = {\n      left: [\n        // TODO: This should come from extensions, instead of being baked in\n        {\n          value: 'studies',\n          icon: 'th-large',\n          bottomLabel: this.props.t('Series'),\n        },\n      ],\n      right: [],\n    };\n\n    panelModules.forEach(panelExtension => {\n      const panelModule = panelExtension.module;\n      const defaultContexts = Array.from(panelModule.defaultContext);\n\n      // MENU OPTIONS\n      panelModule.menuOptions.forEach(menuOption => {\n        const contexts = Array.from(menuOption.context || defaultContexts);\n\n        const activeContextIncludesAnyPanelContexts = this.props.activeContexts.some(\n          actx => contexts.includes(actx)\n        );\n        if (activeContextIncludesAnyPanelContexts) {\n          const menuOptionEntry = {\n            value: menuOption.target,\n            icon: menuOption.icon,\n            bottomLabel: menuOption.label,\n          };\n          const from = menuOption.from || 'right';\n\n          this.buttonGroups[from].push(menuOptionEntry);\n        }\n      });\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    const activeContextsChanged =\n      prevProps.activeContexts !== this.props.activeContexts;\n\n    if (activeContextsChanged) {\n      this.setState({\n        toolbarButtons: _getVisibleToolbarButtons.call(this),\n      });\n    }\n  }\n\n  render() {\n    const buttonComponents = _getButtonComponents.call(\n      this,\n      this.state.toolbarButtons,\n      this.state.activeButtons\n    );\n\n    const cineDialogContainerStyle = {\n      display: this.state.isCineDialogOpen ? 'block' : 'none',\n      position: 'absolute',\n      top: '82px',\n      zIndex: 999,\n    };\n\n    const onPress = (side, value) => {\n      this.props.handleSidePanelChange(side, value);\n    };\n    const onPressLeft = onPress.bind(this, 'left');\n    const onPressRight = onPress.bind(this, 'right');\n\n    return (\n      <>\n        <div className=\"ToolbarRow\">\n          <div className=\"pull-left m-t-1 p-y-1\" style={{ padding: '10px' }}>\n            <RoundedButtonGroup\n              options={this.buttonGroups.left}\n              value={this.props.selectedLeftSidePanel || ''}\n              onValueChanged={onPressLeft}\n            />\n          </div>\n          {buttonComponents}\n          <ConnectedLayoutButton />\n          <ConnectedPluginSwitch />\n          <div\n            className=\"pull-right m-t-1 rm-x-1\"\n            style={{ marginLeft: 'auto' }}\n          >\n            {this.buttonGroups.right.length && (\n              <RoundedButtonGroup\n                options={this.buttonGroups.right}\n                value={this.props.selectedRightSidePanel || ''}\n                onValueChanged={onPressRight}\n              />\n            )}\n          </div>\n        </div>\n        <div className=\"CineDialogContainer\" style={cineDialogContainerStyle}>\n          <ConnectedCineDialog />\n        </div>\n      </>\n    );\n  }\n}\n\n/**\n * Determine which extension buttons should be showing, if they're\n * active, and what their onClick behavior should be.\n */\nfunction _getButtonComponents(toolbarButtons, activeButtons) {\n  return toolbarButtons.map((button, index) => {\n    if (button.buttons && button.buttons.length) {\n      // Iterate over button definitions and update `onClick` behavior\n      const childButtons = button.buttons.map(childButton => {\n        childButton.onClick = _handleToolbarButtonClick.bind(this, childButton);\n        return childButton;\n      });\n\n      return (\n        <ExpandableToolMenu\n          key={button.id}\n          text={button.label}\n          icon={button.icon}\n          buttons={childButtons}\n        />\n      );\n    }\n    return (\n      <ToolbarButton\n        key={button.id}\n        label={button.label}\n        icon={button.icon}\n        onClick={_handleToolbarButtonClick.bind(this, button)}\n        isActive={activeButtons.includes(button.id)}\n      />\n    );\n  });\n}\n\n/**\n * A handy way for us to handle different button types. IE. firing commands for\n * buttons, or initiation built in behavior.\n *\n * @param {*} button\n * @param {*} evt\n * @param {*} props\n */\nfunction _handleToolbarButtonClick(button, evt, props) {\n  if (button.commandName) {\n    const options = Object.assign({ evt }, button.commandOptions);\n    commandsManager.runCommand(button.commandName, options);\n  }\n\n  // TODO: Use Types ENUM\n  // TODO: We can update this to be a `getter` on the extension to query\n  //       For the active tools after we apply our updates?\n  if (button.type === 'setToolActive') {\n    this.setState({\n      activeButtons: [button.id],\n    });\n  } else if (button.type === 'builtIn') {\n    this._handleBuiltIn(button.options);\n  }\n}\n\n/**\n *\n */\nfunction _getVisibleToolbarButtons() {\n  const toolbarModules = extensionManager.modules[MODULE_TYPES.TOOLBAR];\n  const toolbarButtonDefinitions = [];\n\n  toolbarModules.forEach(extension => {\n    const { definitions, defaultContext } = extension.module;\n    definitions.forEach(definition => {\n      const context = definition.context || defaultContext;\n\n      if (this.props.activeContexts.includes(context)) {\n        toolbarButtonDefinitions.push(definition);\n      }\n    });\n  });\n\n  return toolbarButtonDefinitions;\n}\n\nfunction _handleBuiltIn({ behavior } = {}) {\n  if (behavior === 'CINE') {\n    this.setState({\n      isCineDialogOpen: !this.state.isCineDialogOpen,\n    });\n  }\n}\n\nexport default withTranslation('Common')(ToolbarRow);\n","import { createSelector } from 'reselect';\n\nconst getActiveViewportIndex = state => state.viewports.activeViewportIndex;\nconst getLayoutViewports = state => state.viewports.layout.viewports;\nconst getViewportSpecificData = state => state.viewports.viewportSpecificData;\n\n/**\n * Think of this as a computed getter for our store. It lets us watch parts of\n * our redux state, and only update/recalculate when those values change.\n */\nexport const getActiveContexts = createSelector(\n  [getActiveViewportIndex, getLayoutViewports, getViewportSpecificData],\n  (activeViewportIndex, layoutViewports, viewportSpecificData) => {\n    const activeContexts = ['VIEWER'];\n    const activeLayoutViewport = layoutViewports[activeViewportIndex] || {};\n    const activeViewportSpecificData =\n      viewportSpecificData[activeViewportIndex] || {};\n    const activeViewportPluginName =\n      activeLayoutViewport.plugin || activeViewportSpecificData.plugin;\n\n    if (activeViewportPluginName) {\n      const activeViewportExtension = `ACTIVE_VIEWPORT::${activeViewportPluginName.toUpperCase()}`;\n      activeContexts.push(activeViewportExtension);\n    }\n\n    return activeContexts;\n  }\n);\n","// TODO: REPLACE THIS WITH A CONTEXT PROVIDER\n// EVERYTHING IN `VIEWER.JS` COULD USE THIS FOR APPROPRIATE CONTEXT\nimport ToolbarRow from './ToolbarRow';\nimport { connect } from 'react-redux';\nimport { getActiveContexts } from './../store/layout/selectors.js';\n\nconst mapStateToProps = state => {\n  return {\n    activeContexts: getActiveContexts(state),\n  };\n};\n\nconst ConnectedToolbarRow = connect(mapStateToProps)(ToolbarRow);\n\nexport default ConnectedToolbarRow;\n","import { Component } from 'react';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './SimpleDialog.css';\n\nclass SimpleDialog extends Component {\n  static defaultProps = {\n    componentStyle: {},\n    rootClass: '',\n  };\n\n  render() {\n    return (\n      <div\n        className={`simpleDialog ${this.props.rootClass}`}\n        ref={this.props.componentRef}\n        style={this.props.componentStyle}\n      >\n        <form>\n          <div className=\"header\">\n            <span className=\"closeBtn\" onClick={this.props.onClose}>\n              <span className=\"closeIcon\">x</span>\n            </span>\n            <h4 className=\"title\">{this.props.headerTitle}</h4>\n          </div>\n          <div className=\"content\">{this.props.children}</div>\n          <div className=\"footer\">\n            <button\n              type=\"button\"\n              className=\"btn btn-cancel\"\n              onClick={this.props.onClose}\n            >\n              Cancel\n            </button>\n            <button\n              type=\"button\"\n              className=\"btn btn-confirm\"\n              onClick={this.props.onConfirm}\n            >\n              Confirm\n            </button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nSimpleDialog.propTypes = {\n  headerTitle: PropTypes.string.isRequired,\n  onClose: PropTypes.func.isRequired,\n  onConfirm: PropTypes.func.isRequired,\n};\n\nexport default SimpleDialog;\n","export default function bounding(elementRef, currentPosition = {}) {\n  if (!elementRef.current) {\n    return;\n  }\n\n  const currentElement = elementRef.current;\n  const {\n    offsetParent,\n    offsetTop,\n    offsetHeight,\n    offsetLeft,\n    offsetWidth,\n  } = currentElement;\n  let top = currentPosition.top || offsetTop;\n  let left = currentPosition.left || offsetLeft;\n\n  if (!offsetParent) {\n    return;\n  }\n\n  let maxHeight = `${offsetParent.offsetHeight}px`;\n\n  if (offsetHeight + top > offsetParent.offsetHeight) {\n    top = top - (offsetHeight + top - offsetParent.offsetHeight);\n    if (top < 0) {\n      top = 0;\n    }\n  }\n\n  if (left + offsetWidth > offsetParent.offsetWidth) {\n    left = offsetParent.offsetWidth - offsetWidth;\n    if (left < 0) {\n      left = 0;\n    }\n  }\n\n  if (maxHeight && currentElement.style.maxHeight !== maxHeight) {\n    currentElement.style.maxHeight = maxHeight;\n  }\n  if (currentElement.style.top !== `${top}px`) {\n    currentElement.style.top = `${top}px`;\n  }\n  if (currentElement.style.left !== `${left}px`) {\n    currentElement.style.left = `${left}px`;\n  }\n}\n","import cornerstone from 'cornerstone-core';\n\nconst buttonSize = {\n  width: 96,\n  height: 28,\n};\n\nexport function getAddLabelButtonStyle(measurementData, eventData) {\n  const { start, end } = measurementData.handles;\n  const { client } = eventData.currentPoints;\n  const clientStart = cornerstone.pixelToCanvas(eventData.element, start);\n  const clientEnd = cornerstone.pixelToCanvas(eventData.element, end);\n  const canvasOffSetLeft = client.x - clientStart.x;\n  const canvasOffSetTop = client.y - clientStart.y;\n  const position = {\n    left: clientEnd.x + canvasOffSetLeft,\n    top: clientEnd.y + canvasOffSetTop,\n  };\n\n  if (start.y > end.y) {\n    position.top -= buttonSize.height;\n  }\n  if (start.x > end.x) {\n    position.left -= buttonSize.width;\n  }\n\n  return position;\n}\n\nexport function getDialogStyle(componentStyle) {\n  const style = Object.assign({}, componentStyle);\n  const dialogProps = {\n    width: 320,\n    height: 230,\n  };\n\n  // Get max values to avoid position out of the screen\n  const maxLeft = window.innerWidth - dialogProps.width;\n  const maxTop = window.innerHeight - dialogProps.height;\n\n  // Positioning the dialog with its center on the click event\n  style.left -= dialogProps.width / 2;\n  style.top -= dialogProps.height / 2;\n\n  if (style.left > maxLeft) {\n    style.left = maxLeft;\n  }\n  if (style.top > maxTop) {\n    style.top = maxTop;\n  }\n\n  return style;\n}\n","import { Component } from 'react';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport SimpleDialog from '../SimpleDialog/SimpleDialog.js';\n\nimport bounding from '../../lib/utils/bounding.js';\nimport { getDialogStyle } from './../Labelling/labellingPositionUtils.js';\n\nimport './EditDescriptionDialog.css';\n\nexport default class EditDescriptionDialog extends Component {\n  static defaultProps = {\n    componentRef: React.createRef(),\n    componentStyle: {},\n  };\n\n  static propTypes = {\n    measurementData: PropTypes.object.isRequired,\n    onCancel: PropTypes.func.isRequired,\n    componentRef: PropTypes.object,\n    componentStyle: PropTypes.object,\n    onUpdate: PropTypes.func.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      description: props.measurementData.description || '',\n    };\n\n    this.mainElement = React.createRef();\n  }\n\n  componentDidMount = () => {\n    bounding(this.mainElement);\n  };\n\n  componentDidUpdate(prevProps) {\n    if (this.props.description !== prevProps.description) {\n      this.setState({\n        description: this.props.description,\n      });\n    }\n  }\n\n  render() {\n    const style = getDialogStyle(this.props.componentStyle);\n\n    return (\n      <SimpleDialog\n        headerTitle=\"Edit Description\"\n        onClose={this.onClose}\n        onConfirm={this.onConfirm}\n        rootClass=\"editDescriptionDialog\"\n        componentRef={this.mainElement}\n        componentStyle={style}\n      >\n        <input\n          value={this.state.description}\n          className=\"simpleDialogInput\"\n          id=\"description\"\n          autoComplete=\"off\"\n          autoFocus\n          onChange={this.handleChange}\n        />\n      </SimpleDialog>\n    );\n  }\n\n  onClose = () => {\n    this.props.onCancel();\n  };\n\n  onConfirm = () => {\n    this.props.onUpdate(this.state.description);\n  };\n\n  handleChange = event => {\n    this.setState({ description: event.target.value });\n  };\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransition } from 'react-transition-group';\n\nimport './LabellingTransition.css';\n\n// If these variables changes, CSS must be updated\nconst transitionDuration = 500;\nconst transitionClassName = 'labelling';\nconst transitionOnAppear = true;\n\nexport default class LabellingTransition extends Component {\n  static propTypes = {\n    children: PropTypes.node.isRequired,\n    displayComponent: PropTypes.bool.isRequired,\n    onTransitionExit: PropTypes.func.isRequired,\n  };\n  render() {\n    return (\n      <CSSTransition\n        in={this.props.displayComponent}\n        appear={transitionOnAppear}\n        timeout={transitionDuration}\n        classNames={transitionClassName}\n        onExited={this.props.onTransitionExit}\n      >\n        {this.props.children}\n      </CSSTransition>\n    );\n  }\n}\n","const items = [\n  'Abdomen/Chest Wall',\n  'Adrenal',\n  'Bladder',\n  'Bone',\n  'Brain',\n  'Breast',\n  'Colon',\n  'Esophagus',\n  'Extremities',\n  'Gallbladder',\n  'Kidney',\n  'Liver',\n  'Lung',\n  'Lymph Node',\n  'Mediastinum/Hilum',\n  'Muscle',\n  'Neck',\n  'Other Soft Tissue',\n  'Ovary',\n  'Pancreas',\n  'Pelvis',\n  'Peritoneum/Omentum',\n  'Prostate',\n  'Retroperitoneum',\n  'Small Bowel',\n  'Spleen',\n  'Stomach',\n  'Subcutaneous',\n];\n\nconst OHIFLabellingData = items.map(item => {\n  return {\n    label: item,\n    value: item,\n  };\n});\n\nexport default OHIFLabellingData;\n","import { Icon, SelectTree } from 'react-viewerbase';\nimport React, { Component } from 'react';\n\nimport LabellingTransition from './LabellingTransition.js';\nimport OHIFLabellingData from './OHIFLabellingData.js';\nimport PropTypes from 'prop-types';\nimport bounding from '../../lib/utils/bounding.js';\nimport cloneDeep from 'lodash.clonedeep';\nimport { getAddLabelButtonStyle } from './labellingPositionUtils.js';\n\nexport default class LabellingFlow extends Component {\n  static propTypes = {\n    eventData: PropTypes.object.isRequired,\n    measurementData: PropTypes.object.isRequired,\n\n    labellingDoneCallback: PropTypes.func.isRequired,\n    updateLabelling: PropTypes.func.isRequired,\n\n    skipAddLabelButton: PropTypes.bool,\n    editLocation: PropTypes.bool,\n    editDescription: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n\n    const { location, locationLabel, description } = props.measurementData;\n\n    let style = props.componentStyle;\n    if (!props.skipAddLabelButton) {\n      style = getAddLabelButtonStyle(props.measurementData, props.eventData);\n    }\n\n    this.state = {\n      location,\n      locationLabel,\n      description,\n      skipAddLabelButton: props.skipAddLabelButton,\n      editDescription: props.editDescription,\n      editLocation: props.editLocation,\n      componentStyle: style,\n      confirmationState: false,\n      displayComponent: true,\n    };\n\n    this.mainElement = React.createRef();\n    this.descriptionInput = React.createRef();\n\n    this.initialItems = OHIFLabellingData;\n    this.currentItems = cloneDeep(this.initialItems);\n  }\n\n  componentDidUpdate = () => {\n    this.repositionComponent();\n  };\n\n  render() {\n    let mainElementClassName = 'labellingComponent';\n    if (this.state.editDescription) {\n      mainElementClassName += ' editDescription';\n    }\n\n    const style = Object.assign({}, this.state.componentStyle);\n    if (this.state.skipAddLabelButton) {\n      style.left -= 160;\n    }\n\n    return (\n      <LabellingTransition\n        displayComponent={this.state.displayComponent}\n        onTransitionExit={this.props.labellingDoneCallback}\n      >\n        <div\n          className={mainElementClassName}\n          style={style}\n          ref={this.mainElement}\n          onMouseLeave={this.fadeOutAndLeave}\n          onMouseEnter={this.clearFadeOutTimer}\n        >\n          {this.labellingStateFragment()}\n        </div>\n      </LabellingTransition>\n    );\n  }\n\n  labellingStateFragment = () => {\n    const {\n      skipAddLabelButton,\n      editLocation,\n      description,\n      locationLabel,\n    } = this.state;\n\n    if (!skipAddLabelButton) {\n      return (\n        <>\n          <button\n            type=\"button\"\n            className=\"addLabelButton\"\n            onClick={this.showLabelling}\n          >\n            {this.state.location ? 'Edit' : 'Add'} Label\n          </button>\n        </>\n      );\n    } else {\n      if (editLocation) {\n        return (\n          <SelectTree\n            items={this.currentItems}\n            columns={1}\n            onSelected={this.selectTreeSelectCalback}\n            selectTreeFirstTitle=\"Assign Label\"\n            onComponentChange={this.repositionComponent}\n          />\n        );\n      } else {\n        return (\n          <>\n            <div\n              className=\"checkIconWrapper\"\n              onClick={this.fadeOutAndLeaveFast}\n            >\n              <Icon name=\"check\" className=\"checkIcon\" />\n            </div>\n            <div className=\"locationDescriptionWrapper\">\n              <div className=\"location\">{locationLabel}</div>\n              <div className=\"description\">\n                <input\n                  id=\"descriptionInput\"\n                  ref={this.descriptionInput}\n                  defaultValue={description || ''}\n                  autoComplete=\"off\"\n                />\n              </div>\n            </div>\n            <div className=\"commonButtons\">\n              <button\n                type=\"button\"\n                className=\"commonButton left\"\n                onClick={this.relabel}\n              >\n                Relabel\n              </button>\n              <button\n                type=\"button\"\n                className=\"commonButton right\"\n                onClick={this.setDescriptionUpdateMode}\n              >\n                {description ? 'Edit ' : 'Add '}\n                Description\n              </button>\n            </div>\n            <div className=\"editDescriptionButtons\">\n              <button\n                type=\"button\"\n                className=\"commonButton left\"\n                onClick={this.descriptionCancel}\n              >\n                Cancel\n              </button>\n              <button\n                type=\"button\"\n                className=\"commonButton right\"\n                onClick={this.descriptionSave}\n              >\n                Save\n              </button>\n            </div>\n          </>\n        );\n      }\n    }\n  };\n\n  relabel = () => {\n    this.setState({\n      editLocation: true,\n    });\n  };\n\n  setDescriptionUpdateMode = () => {\n    this.descriptionInput.current.focus();\n\n    this.setState({\n      editDescription: true,\n    });\n  };\n\n  descriptionCancel = () => {\n    const { description = '' } = cloneDeep(this.state);\n    this.descriptionInput.current.value = description;\n\n    this.setState({\n      editDescription: false,\n    });\n  };\n\n  descriptionSave = () => {\n    const description = this.descriptionInput.current.value;\n    this.props.updateLabelling({ description });\n\n    this.setState({\n      description,\n      editDescription: false,\n    });\n  };\n\n  selectTreeSelectCalback = (event, itemSelected) => {\n    const location = itemSelected.value;\n    this.props.updateLabelling({ location });\n\n    const viewportTopPosition = this.mainElement.current.offsetParent.offsetTop;\n    const componentStyle = {\n      top: event.nativeEvent.y - viewportTopPosition - 25,\n      left: this.state.componentStyle.left,\n    };\n\n    this.setState({\n      editLocation: false,\n      confirmationState: true,\n      location: itemSelected.value,\n      locationLabel: itemSelected.label,\n      componentStyle,\n    });\n\n    if (this.isTouchScreen) {\n      this.setTimeout = setTimeout(() => {\n        this.setState({\n          displayComponent: false,\n        });\n      }, 2000);\n    }\n  };\n\n  showLabelling = () => {\n    this.setState({\n      skipAddLabelButton: true,\n      editLocation: false,\n    });\n  };\n\n  fadeOutAndLeave = () => {\n    // Wait for 1 sec to dismiss the labelling component\n    this.fadeOutTimer = setTimeout(() => {\n      this.setState({\n        displayComponent: false,\n      });\n    }, 1000);\n  };\n\n  fadeOutAndLeaveFast = () => {\n    this.setState({\n      displayComponent: false,\n    });\n  };\n\n  clearFadeOutTimer = () => {\n    if (!this.fadeOutTimer) {\n      return;\n    }\n\n    clearTimeout(this.fadeOutTimer);\n  };\n\n  repositionComponent = () => {\n    // SetTimeout for the css animation to end.\n    setTimeout(() => {\n      bounding(this.mainElement);\n    }, 200);\n  };\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport cloneDeep from 'lodash.clonedeep';\n\nimport EditDescriptionDialog from './../EditDescriptionDialog/EditDescriptionDialog.js';\nimport LabellingFlow from './LabellingFlow.js';\n\nimport './LabellingManager.css';\n\nexport default class LabellingManager extends Component {\n  static propTypes = {\n    eventData: PropTypes.object.isRequired,\n    measurementData: PropTypes.object.isRequired,\n\n    labellingDoneCallback: PropTypes.func.isRequired,\n    updateLabelling: PropTypes.func.isRequired,\n\n    skipAddLabelButton: PropTypes.bool,\n    editLocation: PropTypes.bool,\n    editDescription: PropTypes.bool,\n    editDescriptionOnDialog: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    skipAddLabelButton: false,\n    editLocation: false,\n    editDescription: false,\n    editDescriptionOnDialog: false,\n  };\n\n  constructor(props) {\n    super(props);\n\n    const measurementData = cloneDeep(props.measurementData);\n    this.treatMeasurementData(measurementData);\n\n    let editLocation = props.editLocation;\n    if (!props.editDescription && !props.editLocation) {\n      editLocation = true;\n    }\n\n    this.state = {\n      componentStyle: getComponentPosition(props.eventData),\n      skipAddLabelButton: props.skipAddLabelButton,\n      editLocation: editLocation,\n      editDescription: props.editDescription,\n      editDescriptionOnDialog: props.editDescriptionOnDialog,\n      measurementData: measurementData,\n    };\n  }\n\n  componentDidMount = () => {\n    document.addEventListener('touchstart', this.onTouchStart);\n  };\n\n  componentWillUnmount = () => {\n    document.removeEventListener('touchstart', this.onTouchStart);\n  };\n\n  render() {\n    return this.getRenderComponent();\n  }\n\n  getRenderComponent = () => {\n    const {\n      editLocation,\n      editDescription,\n      editDescriptionOnDialog,\n      measurementData,\n    } = this.state;\n\n    if (editDescriptionOnDialog) {\n      return (\n        <EditDescriptionDialog\n          onCancel={this.props.labellingDoneCallback}\n          onUpdate={this.descriptionDialogUpdate}\n          componentRef={this.editDescriptionDialog}\n          componentStyle={this.state.componentStyle}\n          measurementData={measurementData}\n        />\n      );\n    }\n\n    if (editLocation || editDescription) {\n      return (\n        <LabellingFlow\n          {...this.props}\n          componentStyle={this.state.componentStyle}\n        />\n      );\n    }\n  };\n\n  treatMeasurementData = measurementData => {\n    const { editDescription, editLocation } = this.props;\n\n    if (editDescription) {\n      measurementData.description = undefined;\n    }\n    if (editLocation) {\n      measurementData.location = undefined;\n    }\n  };\n\n  responseDialogUpdate = response => {\n    this.props.updateLabelling({\n      response,\n    });\n    this.props.labellingDoneCallback();\n  };\n\n  descriptionDialogUpdate = description => {\n    this.props.updateLabelling({\n      description,\n    });\n    this.props.labellingDoneCallback();\n  };\n}\n\nfunction getComponentPosition(eventData) {\n  const {\n    event: { clientX: left, clientY: top },\n  } = eventData;\n\n  return {\n    left,\n    top,\n  };\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport LabellingManager from '../components/Labelling/LabellingManager';\n\nclass LabellingOverlay extends Component {\n  static propTypes = {\n    visible: PropTypes.bool.isRequired,\n  };\n\n  static defaultProps = {\n    visible: false,\n  };\n\n  render() {\n    if (!this.props.visible) {\n      return null;\n    }\n\n    return <LabellingManager {...this.props} />;\n  }\n}\n\nexport default LabellingOverlay;\n","import { connect } from 'react-redux';\nimport LabellingOverlay from './LabellingOverlay';\n\nconst mapStateToProps = state => {\n  if (!state.ui || !state.ui.labelling) {\n    return {\n      visible: false,\n    };\n  }\n\n  const labellingFlowData = state.ui.labelling;\n\n  return {\n    visible: false,\n    ...labellingFlowData,\n  };\n};\n\nconst ConnectedLabellingOverlay = connect(\n  mapStateToProps,\n  null\n)(LabellingOverlay);\n\nexport default ConnectedLabellingOverlay;\n","import { connect } from 'react-redux';\nimport { StudyBrowser } from 'react-viewerbase';\nimport cloneDeep from 'lodash.clonedeep';\n\n// TODO\n// - Determine in which display set is active from Redux (activeViewportIndex and layout viewportData)\n// - Pass in errors and stack loading progress from Redux\nconst mapStateToProps = (state, ownProps) => {\n  // If we know that the stack loading progress details have changed,\n  // we can try to update the component state so that the thumbnail\n  // progress bar is updated\n  const stackLoadingProgressMap = state.loading.progress;\n  const studiesWithLoadingData = cloneDeep(ownProps.studies);\n\n  studiesWithLoadingData.forEach(study => {\n    study.thumbnails.forEach(data => {\n      const { displaySetInstanceUid } = data;\n      const stackId = `StackProgress:${displaySetInstanceUid}`;\n      const stackProgressData = stackLoadingProgressMap[stackId];\n\n      let stackPercentComplete = 0;\n      if (stackProgressData) {\n        stackPercentComplete = stackProgressData.percentComplete;\n      }\n\n      data.stackPercentComplete = stackPercentComplete;\n    });\n  });\n\n  return {\n    studies: studiesWithLoadingData,\n  };\n};\n\nconst ConnectedStudyBrowser = connect(\n  mapStateToProps,\n  null\n)(StudyBrowser);\n\nexport default ConnectedStudyBrowser;\n","import { LayoutManager } from 'react-viewerbase';\nimport { MODULE_TYPES } from 'ohif-core';\nimport { connect } from 'react-redux';\nimport { extensionManager } from './../App.js';\n\nconst mapStateToProps = state => {\n  const availableViewportModules = {};\n  const viewportModules = extensionManager.modules[MODULE_TYPES.VIEWPORT];\n\n  viewportModules.forEach(moduleDefinition => {\n    availableViewportModules[moduleDefinition.extensionId] =\n      moduleDefinition.module;\n  });\n\n  // TODO: Use something like state.plugins.defaultPlugin[MODULE_TYPES.VIEWPORT]\n  let defaultPlugin;\n  if (viewportModules.length) {\n    defaultPlugin = viewportModules[0].extensionId;\n  }\n\n  return {\n    layout: state.viewports.layout,\n    activeViewportIndex: state.viewports.activeViewportIndex,\n    // TODO: rename `availableViewportModules`\n    availablePlugins: availableViewportModules,\n    // TODO: rename `defaultViewportModule`\n    defaultPlugin,\n  };\n};\n\nconst ConnectedLayoutManager = connect(\n  mapStateToProps,\n  null\n)(LayoutManager);\n\nexport default ConnectedLayoutManager;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport cornerstone from 'cornerstone-core';\nimport cornerstoneTools from 'cornerstone-tools';\nimport getMeasurementLocationCallback from '../lib/getMeasurementLocationCallback';\n\nimport './ToolContextMenu.css';\n\nconst toolTypes = [\n  'Angle',\n  'Bidirectional',\n  'Length',\n  'FreehandMouse',\n  'EllipticalRoi',\n  'CircleRoi',\n  'RectangleRoi',\n];\n\nlet defaultDropdownItems = [\n  {\n    actionType: 'Delete',\n    action: ({ nearbyToolData, eventData }) => {\n      const element = eventData.element;\n\n      cornerstoneTools.removeToolState(\n        element,\n        nearbyToolData.toolType,\n        nearbyToolData.tool\n      );\n      cornerstone.updateImage(element);\n    },\n  },\n  {\n    actionType: 'setLabel',\n    action: ({ nearbyToolData, eventData }) => {\n      const { tool } = nearbyToolData;\n\n      const options = {\n        skipAddLabelButton: true,\n        editLocation: true,\n      };\n\n      getMeasurementLocationCallback(eventData, tool, options);\n    },\n  },\n  {\n    actionType: 'setDescription',\n    action: ({ nearbyToolData, eventData }) => {\n      const { tool } = nearbyToolData;\n\n      const options = {\n        editDescriptionOnDialog: true,\n      };\n\n      getMeasurementLocationCallback(eventData, tool, options);\n    },\n  },\n];\n\nfunction getNearbyToolData(element, coords, toolTypes) {\n  const nearbyTool = {};\n  let pointNearTool = false;\n\n  toolTypes.forEach(toolType => {\n    const toolData = cornerstoneTools.getToolState(element, toolType);\n    if (!toolData) {\n      return;\n    }\n\n    toolData.data.forEach(function(data, index) {\n      // TODO: Fix this, it's ugly\n      let toolInterface = cornerstoneTools.getToolForElement(element, toolType);\n      if (!toolInterface) {\n        toolInterface = cornerstoneTools.getToolForElement(\n          element,\n          `${toolType}Tool`\n        );\n      }\n\n      if (!toolInterface) {\n        throw new Error('Tool not found.');\n      }\n\n      if (toolInterface.pointNearTool(element, data, coords)) {\n        pointNearTool = true;\n        nearbyTool.tool = data;\n        nearbyTool.index = index;\n        nearbyTool.toolType = toolType;\n      }\n    });\n\n    if (pointNearTool) {\n      return false;\n    }\n  });\n\n  return pointNearTool ? nearbyTool : undefined;\n}\n\nfunction getDropdownItems(eventData, isTouchEvent = false, availableTools) {\n  const nearbyToolData = getNearbyToolData(\n    eventData.element,\n    eventData.currentPoints.canvas,\n    toolTypes,\n    availableTools\n  );\n\n  // Annotate tools for touch events already have a press handle to edit it, has a better UX for deleting it\n  if (\n    isTouchEvent &&\n    nearbyToolData &&\n    nearbyToolData.toolType === 'arrowAnnotate'\n  ) {\n    return;\n  }\n\n  let dropdownItems = [];\n  if (nearbyToolData) {\n    defaultDropdownItems.forEach(function(item) {\n      item.params = {\n        eventData,\n        nearbyToolData,\n      };\n\n      if (item.actionType === 'Delete') {\n        item.text = 'Delete measurement';\n      }\n\n      if (item.actionType === 'setLabel') {\n        item.text = 'Relabel';\n      }\n\n      if (item.actionType === 'setDescription') {\n        item.text = `${\n          nearbyToolData.tool.description ? 'Edit' : 'Add'\n        } Description`;\n      }\n\n      dropdownItems.push(item);\n    });\n  }\n\n  return dropdownItems;\n}\n\nclass ToolContextMenu extends Component {\n  static propTypes = {\n    isTouchEvent: PropTypes.bool.isRequired,\n    eventData: PropTypes.object,\n    onClose: PropTypes.func,\n    availableTools: PropTypes.array,\n    visible: PropTypes.bool.isRequired,\n  };\n\n  static defaultProps = {\n    visible: true,\n    isTouchEvent: false,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.mainElement = React.createRef();\n  }\n\n  render() {\n    if (!this.props.eventData) {\n      return null;\n    }\n\n    const { isTouchEvent, eventData, availableTools } = this.props;\n    const dropdownItems = getDropdownItems(\n      eventData,\n      isTouchEvent,\n      availableTools\n    );\n\n    // Skip if there is no dropdown item\n    if (!dropdownItems.length) {\n      return '';\n    }\n\n    const dropdownComponents = dropdownItems.map(item => {\n      const itemOnClick = event => {\n        item.action(item.params);\n        if (this.props.onClose) {\n          this.props.onClose();\n        }\n      };\n\n      return (\n        <li key={item.actionType}>\n          <button className=\"form-action\" onClick={itemOnClick}>\n            <span key={item.actionType}>{item.text}</span>\n          </button>\n        </li>\n      );\n    });\n\n    const position = {\n      top: `${eventData.currentPoints.canvas.y}px`,\n      left: `${eventData.currentPoints.canvas.x}px`,\n    };\n\n    return (\n      <div className=\"ToolContextMenu\" style={position} ref={this.mainElement}>\n        <ul className=\"bounded\">{dropdownComponents}</ul>\n      </div>\n    );\n  }\n\n  componentDidMount = () => {\n    if (this.mainElement.current) {\n      this.updateElementPosition();\n    }\n  };\n\n  componentDidUpdate = () => {\n    if (this.mainElement.current) {\n      this.updateElementPosition();\n    }\n  };\n\n  updateElementPosition = () => {\n    const {\n      offsetParent,\n      offsetTop,\n      offsetHeight,\n      offsetWidth,\n      offsetLeft,\n    } = this.mainElement.current;\n\n    const { eventData } = this.props;\n\n    if (offsetTop + offsetHeight > offsetParent.offsetHeight) {\n      const offBoundPixels =\n        offsetTop + offsetHeight - offsetParent.offsetHeight;\n      const top = eventData.currentPoints.canvas.y - offBoundPixels;\n\n      this.mainElement.current.style.top = `${top > 0 ? top : 0}px`;\n    }\n\n    if (offsetLeft + offsetWidth > offsetParent.offsetWidth) {\n      const offBoundPixels =\n        offsetLeft + offsetWidth - offsetParent.offsetWidth;\n      const left = eventData.currentPoints.canvas.x - offBoundPixels;\n\n      this.mainElement.current.style.left = `${left > 0 ? left : 0}px`;\n    }\n  };\n}\n\nexport default ToolContextMenu;\n","import { connect } from 'react-redux';\nimport ToolContextMenu from './ToolContextMenu';\n\nconst mapStateToProps = (state, ownProps) => {\n  if (!state.ui || !state.ui.contextMenu) {\n    return {\n      visible: false,\n    };\n  }\n\n  const { viewportIndex } = ownProps;\n  const toolContextMenuData = state.ui.contextMenu[viewportIndex];\n  let availableTools;\n\n  if (\n    state.extensions &&\n    state.extensions.cornerstone &&\n    state.extensions.cornerstone.availableTools\n  ) {\n    availableTools = state.extensions.cornerstone.availableTools;\n  }\n\n  return {\n    ...toolContextMenuData,\n    availableTools,\n  };\n};\n\nconst ConnectedToolContextMenu = connect(\n  mapStateToProps,\n  null\n)(ToolContextMenu);\n\nexport default ConnectedToolContextMenu;\n","import './ViewerMain.css';\n\nimport { Component } from 'react';\nimport ConnectedLayoutManager from './ConnectedLayoutManager.js';\nimport ConnectedToolContextMenu from './ConnectedToolContextMenu.js';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nclass ViewerMain extends Component {\n  static propTypes = {\n    activeViewportIndex: PropTypes.number.isRequired,\n    studies: PropTypes.array,\n    viewportSpecificData: PropTypes.object.isRequired,\n    layout: PropTypes.object.isRequired,\n    setViewportSpecificData: PropTypes.func.isRequired,\n    clearViewportSpecificData: PropTypes.func.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      displaySets: [],\n    };\n\n    this.cachedViewportData = {};\n  }\n\n  getDisplaySets(studies) {\n    const displaySets = [];\n    studies.forEach(study => {\n      study.displaySets.forEach(dSet => {\n        if (!dSet.plugin) {\n          dSet.plugin = 'cornerstone';\n        }\n        displaySets.push(dSet);\n      });\n    });\n\n    return displaySets;\n  }\n\n  findDisplaySet(studies, studyInstanceUid, displaySetInstanceUid) {\n    const study = studies.find(study => {\n      return study.studyInstanceUid === studyInstanceUid;\n    });\n\n    if (!study) {\n      return;\n    }\n\n    return study.displaySets.find(displaySet => {\n      return displaySet.displaySetInstanceUid === displaySetInstanceUid;\n    });\n  }\n\n  componentDidMount() {\n    // Add beforeUnload event handler to check for unsaved changes\n    //window.addEventListener('beforeunload', unloadHandlers.beforeUnload);\n\n    // Get all the display sets for the viewer studies\n    if (this.props.studies) {\n      const displaySets = this.getDisplaySets(this.props.studies);\n\n      this.setState({\n        displaySets,\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.studies !== prevProps.studies) {\n      const displaySets = this.getDisplaySets(this.props.studies);\n\n      this.setState({\n        displaySets,\n      });\n    }\n  }\n\n  getViewportData = () => {\n    const viewportData = [];\n    const { layout, viewportSpecificData } = this.props;\n\n    for (\n      let viewportIndex = 0;\n      viewportIndex < layout.viewports.length;\n      viewportIndex++\n    ) {\n      let displaySet = viewportSpecificData[viewportIndex];\n\n      // Use the cached display set in viewport if the new one is empty\n      if (displaySet && !displaySet.displaySetInstanceUid) {\n        displaySet = this.cachedViewportData[viewportIndex];\n      }\n\n      if (\n        displaySet &&\n        displaySet.studyInstanceUid &&\n        displaySet.displaySetInstanceUid\n      ) {\n        // Get missing fields from original display set\n        const originalDisplaySet = this.findDisplaySet(\n          this.props.studies,\n          displaySet.studyInstanceUid,\n          displaySet.displaySetInstanceUid\n        );\n        viewportData.push(Object.assign({}, originalDisplaySet, displaySet));\n      } else {\n        // If the viewport is empty, get one available in study\n        const { displaySets } = this.state;\n        displaySet = displaySets.find(\n          ds =>\n            !viewportData.some(\n              v => v.displaySetInstanceUid === ds.displaySetInstanceUid\n            )\n        );\n        viewportData.push(Object.assign({}, displaySet));\n      }\n    }\n\n    this.cachedViewportData = viewportData;\n\n    return viewportData;\n  };\n\n  setViewportData = ({ viewportIndex, item }) => {\n    const displaySet = this.findDisplaySet(\n      this.props.studies,\n      item.studyInstanceUid,\n      item.displaySetInstanceUid\n    );\n\n    this.props.setViewportSpecificData(viewportIndex, displaySet);\n  };\n\n  render() {\n    return (\n      <div className=\"ViewerMain\">\n        {this.state.displaySets.length && (\n          <ConnectedLayoutManager\n            studies={this.props.studies}\n            viewportData={this.getViewportData()}\n            setViewportData={this.setViewportData}\n          >\n            {/* Children to add to each viewport that support children */}\n            <ConnectedToolContextMenu />\n          </ConnectedLayoutManager>\n        )}\n      </div>\n    );\n  }\n\n  componentWillUnmount() {\n    // Clear the entire viewport specific data\n    const { viewportSpecificData } = this.props;\n    Object.keys(viewportSpecificData).forEach(viewportIndex => {\n      this.props.clearViewportSpecificData(viewportIndex);\n    });\n\n    // TODO: These don't have to be viewer specific?\n    // Could qualify for other routes?\n    // hotkeys.destroy();\n\n    // Remove beforeUnload event handler...\n    //window.removeEventListener('beforeunload', unloadHandlers.beforeUnload);\n    // Destroy the synchronizer used to update reference lines\n    //OHIF.viewer.updateImageSynchronizer.destroy();\n    // TODO: Instruct all plugins to clean up themselves\n    //\n    // Clear references to all stacks in the StackManager\n    //StackManager.clearStacks();\n    // @TypeSafeStudies\n    // Clears OHIF.viewer.Studies collection\n    //OHIF.viewer.Studies.removeAll();\n    // @TypeSafeStudies\n    // Clears OHIF.viewer.StudyMetadataList collection\n    //OHIF.viewer.StudyMetadataList.removeAll();\n  }\n}\n\nexport default ViewerMain;\n","import OHIF from 'ohif-core';\nimport ViewerMain from './ViewerMain';\nimport { connect } from 'react-redux';\n\nconst {\n  setViewportSpecificData,\n  clearViewportSpecificData,\n} = OHIF.redux.actions;\n\nconst mapStateToProps = state => {\n  const { activeViewportIndex, layout, viewportSpecificData } = state.viewports;\n\n  return {\n    activeViewportIndex,\n    layout,\n    viewportSpecificData,\n    viewports: state.viewports,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setViewportSpecificData: (viewportIndex, data) => {\n      dispatch(setViewportSpecificData(viewportIndex, data));\n    },\n    clearViewportSpecificData: () => {\n      dispatch(clearViewportSpecificData());\n    },\n  };\n};\n\nconst ConnectedViewerMain = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ViewerMain);\n\nexport default ConnectedViewerMain;\n","import './SidePanel.css';\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nclass SidePanel extends Component {\n  static propTypes = {\n    from: PropTypes.string.isRequired,\n    isOpen: PropTypes.bool.isRequired,\n    children: PropTypes.node,\n    width: PropTypes.string,\n  };\n\n  render() {\n    const fromSideClass =\n      this.props.from === 'right' ? 'from-right' : 'from-left';\n\n    const styles = this.props.width\n      ? {\n          maxWidth: this.props.width,\n          marginRight: this.props.isOpen\n            ? '0'\n            : Number.parseInt(this.props.width) * -1,\n        }\n      : {};\n\n    return (\n      <section\n        style={styles}\n        className={classNames('sidepanel', fromSideClass, {\n          'is-open': this.props.isOpen,\n        })}\n      >\n        {this.props.children}\n      </section>\n    );\n  }\n}\n\nexport default SidePanel;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport { MODULE_TYPES } from 'ohif-core';\nimport OHIF from 'ohif-core';\nimport moment from 'moment';\nimport WhiteLabellingContext from '../WhiteLabellingContext.js';\nimport ConnectedHeader from './ConnectedHeader.js';\nimport ConnectedToolbarRow from './ConnectedToolbarRow.js';\nimport ConnectedLabellingOverlay from './ConnectedLabellingOverlay';\nimport ConnectedStudyBrowser from './ConnectedStudyBrowser.js';\nimport ConnectedViewerMain from './ConnectedViewerMain.js';\nimport SidePanel from './../components/SidePanel.js';\nimport { extensionManager } from './../App.js';\nimport './Viewer.css';\n/**\n * Inits OHIF Hanging Protocol's onReady.\n * It waits for OHIF Hanging Protocol to be ready to instantiate the ProtocolEngine\n * Hanging Protocol will use OHIF LayoutManager to render viewports properly\n */\n/*const initHangingProtocol = () => {\n    // When Hanging Protocol is ready\n    HP.ProtocolStore.onReady(() => {\n\n        // Gets all StudyMetadata objects: necessary for Hanging Protocol to access study metadata\n        const studyMetadataList = OHIF.viewer.StudyMetadataList.all();\n\n        // Instantiate StudyMetadataSource: necessary for Hanging Protocol to get study metadata\n        const studyMetadataSource = new OHIF.studies.classes.OHIFStudyMetadataSource();\n\n        // Get prior studies map\n        const studyPriorsMap = OHIF.studylist.functions.getStudyPriorsMap(studyMetadataList);\n\n        // Creates Protocol Engine object with required arguments\n        const ProtocolEngine = new HP.ProtocolEngine(layoutManager, studyMetadataList, studyPriorsMap, studyMetadataSource);\n\n        // Sets up Hanging Protocol engine\n        HP.setEngine(ProtocolEngine);\n    });\n};*/\n\n/*const viewportUtils = OHIF.viewerbase.viewportUtils;\n\nOHIF.viewer.functionList = {\n    toggleCineDialog: viewportUtils.toggleCineDialog,\n    toggleCinePlay: viewportUtils.toggleCinePlay,\n    clearTools: viewportUtils.clearTools,\n    resetViewport: viewportUtils.resetViewport,\n    invert: viewportUtils.invert\n};*/\n\nclass Viewer extends Component {\n  static propTypes = {\n    studies: PropTypes.array,\n    studyInstanceUids: PropTypes.array,\n    onTimepointsUpdated: PropTypes.func,\n    onMeasurementsUpdated: PropTypes.func,\n    // window.store.getState().viewports.viewportSpecificData\n    viewports: PropTypes.object.isRequired,\n    // window.store.getState().viewports.activeViewportIndex\n    activeViewportIndex: PropTypes.number.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    OHIF.measurements.MeasurementApi.setConfiguration({\n      dataExchange: {\n        retrieve: this.retrieveMeasurements,\n        store: this.storeMeasurements,\n      },\n    });\n\n    OHIF.measurements.TimepointApi.setConfiguration({\n      dataExchange: {\n        retrieve: this.retrieveTimepoints,\n        store: this.storeTimepoints,\n        remove: this.removeTimepoint,\n        update: this.updateTimepoint,\n        disassociate: this.disassociateStudy,\n      },\n    });\n  }\n\n  state = {\n    isLeftSidePanelOpen: true,\n    isRightSidePanelOpen: false,\n    selectedRightSidePanel: '',\n    selectedLeftSidePanel: 'studies', // TODO: Don't hardcode this\n    thumbnails: [],\n  };\n\n  retrieveMeasurements = (patientId, timepointIds) => {\n    OHIF.log.info('retrieveMeasurements');\n    // TODO: Retrieve the measurements from the latest available SR\n    return Promise.resolve();\n  };\n\n  storeMeasurements = (measurementData, timepointIds) => {\n    OHIF.log.info('storeMeasurements');\n    // TODO: Store the measurements into a new SR sent to the active server\n    return Promise.resolve();\n  };\n\n  retrieveTimepoints = filter => {\n    OHIF.log.info('retrieveTimepoints');\n\n    // Get the earliest and latest study date\n    let earliestDate = new Date().toISOString();\n    let latestDate = new Date().toISOString();\n    if (this.props.studies) {\n      latestDate = new Date('1000-01-01').toISOString();\n      this.props.studies.forEach(study => {\n        const studyDate = moment(study.studyDate, 'YYYYMMDD').toISOString();\n        if (studyDate < earliestDate) {\n          earliestDate = studyDate;\n        }\n        if (studyDate > latestDate) {\n          latestDate = studyDate;\n        }\n      });\n    }\n\n    // Return a generic timepoint\n    return Promise.resolve([\n      {\n        timepointType: 'baseline',\n        timepointId: 'TimepointId',\n        studyInstanceUids: this.props.studyInstanceUids,\n        patientId: filter.patientId,\n        earliestDate,\n        latestDate,\n        isLocked: false,\n      },\n    ]);\n  };\n\n  storeTimepoints = timepointData => {\n    OHIF.log.info('storeTimepoints');\n    return Promise.resolve();\n  };\n\n  updateTimepoint = (timepointData, query) => {\n    OHIF.log.info('updateTimepoint');\n    return Promise.resolve();\n  };\n\n  removeTimepoint = timepointId => {\n    OHIF.log.info('removeTimepoint');\n    return Promise.resolve();\n  };\n\n  disassociateStudy = (timepointIds, studyInstanceUid) => {\n    OHIF.log.info('disassociateStudy');\n    return Promise.resolve();\n  };\n\n  onTimepointsUpdated = timepoints => {\n    if (this.props.onTimepointsUpdated) {\n      this.props.onTimepointsUpdated(timepoints);\n    }\n  };\n\n  onMeasurementsUpdated = measurements => {\n    if (this.props.onMeasurementsUpdated) {\n      this.props.onMeasurementsUpdated(measurements);\n    }\n  };\n\n  componentDidMount() {\n    const { studies } = this.props;\n    const { TimepointApi, MeasurementApi } = OHIF.measurements;\n    const currentTimepointId = 'TimepointId';\n\n    const timepointApi = new TimepointApi(currentTimepointId, {\n      onTimepointsUpdated: this.onTimepointsUpdated,\n    });\n\n    const measurementApi = new MeasurementApi(timepointApi, {\n      onMeasurementsUpdated: this.onMeasurementsUpdated,\n    });\n\n    this.currentTimepointId = currentTimepointId;\n    this.timepointApi = timepointApi;\n    this.measurementApi = measurementApi;\n\n    if (studies) {\n      const patientId = studies[0] && studies[0].patientId;\n\n      timepointApi.retrieveTimepoints({ patientId });\n      measurementApi.retrieveMeasurements(patientId, [currentTimepointId]);\n\n      this.setState({\n        thumbnails: _mapStudiesToThumbnails(studies),\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.studies !== prevProps.studies) {\n      const { studies } = this.props;\n      const patientId = studies[0] && studies[0].patientId;\n      const currentTimepointId = this.currentTimepointId;\n\n      this.timepointApi.retrieveTimepoints({ patientId });\n      this.measurementApi.retrieveMeasurements(patientId, [currentTimepointId]);\n\n      this.setState({\n        thumbnails: _mapStudiesToThumbnails(studies),\n      });\n    }\n  }\n\n  render() {\n    let VisiblePanelLeft, VisiblePanelRight;\n    const panelExtensions = extensionManager.modules[MODULE_TYPES.PANEL];\n\n    panelExtensions.forEach(panelExt => {\n      panelExt.module.components.forEach(comp => {\n        if (comp.id === this.state.selectedRightSidePanel) {\n          VisiblePanelRight = comp.component;\n        } else if (comp.id === this.state.selectedLeftSidePanel) {\n          VisiblePanelLeft = comp.component;\n        }\n      });\n    });\n\n    return (\n      <>\n        {/* HEADER */}\n        <WhiteLabellingContext.Consumer>\n          {whiteLabelling => (\n            <ConnectedHeader home={false}>\n              {whiteLabelling.logoComponent}\n            </ConnectedHeader>\n          )}\n        </WhiteLabellingContext.Consumer>\n\n        {/* TOOLBAR */}\n        <ConnectedToolbarRow\n          isLeftSidePanelOpen={this.state.isLeftSidePanelOpen}\n          isRightSidePanelOpen={this.state.isRightSidePanelOpen}\n          selectedLeftSidePanel={\n            this.state.isLeftSidePanelOpen\n              ? this.state.selectedLeftSidePanel\n              : ''\n          }\n          selectedRightSidePanel={\n            this.state.isRightSidePanelOpen\n              ? this.state.selectedRightSidePanel\n              : ''\n          }\n          handleSidePanelChange={(side, selectedPanel) => {\n            const sideClicked = side && side[0].toUpperCase() + side.slice(1);\n            const openKey = `is${sideClicked}SidePanelOpen`;\n            const selectedKey = `selected${sideClicked}SidePanel`;\n            const updatedState = Object.assign({}, this.state);\n\n            const isOpen = updatedState[openKey];\n            const prevSelectedPanel = updatedState[selectedKey];\n            // RoundedButtonGroup returns `null` if selected button is clicked\n            const isSameSelectedPanel =\n              prevSelectedPanel === selectedPanel || selectedPanel === null;\n\n            updatedState[selectedKey] = selectedPanel || prevSelectedPanel;\n\n            const isClosedOrShouldClose = !isOpen || isSameSelectedPanel;\n            if (isClosedOrShouldClose) {\n              updatedState[openKey] = !updatedState[openKey];\n            }\n\n            this.setState(updatedState);\n          }}\n        />\n\n        {/*<ConnectedStudyLoadingMonitor studies={this.props.studies} />*/}\n        {/*<StudyPrefetcher studies={this.props.studies} />*/}\n\n        {/* VIEWPORTS + SIDEPANELS */}\n        <div className=\"FlexboxLayout\">\n          {/* LEFT */}\n          <SidePanel from=\"left\" isOpen={this.state.isLeftSidePanelOpen}>\n            {VisiblePanelLeft ? (\n              <VisiblePanelLeft\n                viewports={this.props.viewports}\n                activeIndex={this.props.activeViewportIndex}\n              />\n            ) : (\n              <ConnectedStudyBrowser studies={this.state.thumbnails} />\n            )}\n          </SidePanel>\n\n          {/* MAIN */}\n          <div className={classNames('main-content')}>\n            <ConnectedViewerMain studies={this.props.studies} />\n          </div>\n\n          {/* RIGHT */}\n          <SidePanel from=\"right\" isOpen={this.state.isRightSidePanelOpen}>\n            {VisiblePanelRight && (\n              <VisiblePanelRight\n                viewports={this.props.viewports}\n                activeIndex={this.props.activeViewportIndex}\n              />\n            )}\n          </SidePanel>\n        </div>\n        <ConnectedLabellingOverlay />\n      </>\n    );\n  }\n}\n\nexport default Viewer;\n\n/**\n * What types are these? Why do we have \"mapping\" dropped in here instead of in\n * a mapping layer?\n *\n * TODO[react]:\n * - Add sorting of display sets\n * - Add useMiddleSeriesInstanceAsThumbnail\n * - Add showStackLoadingProgressBar option\n *\n * @param {Study[]} studies\n * @param {DisplaySet[]} studies[].displaySets\n */\nconst _mapStudiesToThumbnails = function(studies) {\n  return studies.map(study => {\n    const { studyInstanceUid } = study;\n\n    const thumbnails = study.displaySets.map(displaySet => {\n      const {\n        displaySetInstanceUid,\n        seriesDescription,\n        seriesNumber,\n        instanceNumber,\n        numImageFrames,\n      } = displaySet;\n\n      let imageId;\n      let altImageText = ' '; // modality\n\n      if (displaySet.images && displaySet.images.length) {\n        imageId = displaySet.images[0].getImageId();\n      } else {\n        altImageText = 'SR';\n      }\n\n      return {\n        imageId,\n        altImageText,\n        displaySetInstanceUid,\n        seriesDescription,\n        seriesNumber,\n        instanceNumber,\n        numImageFrames,\n      };\n    });\n\n    return {\n      studyInstanceUid,\n      thumbnails,\n    };\n  });\n};\n","import { connect } from 'react-redux';\nimport Viewer from './Viewer.js';\nimport OHIF from 'ohif-core';\n\nconst { setTimepoints, setMeasurements } = OHIF.redux.actions;\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    viewports: state.viewports.viewportSpecificData,\n    activeViewportIndex: state.viewports.activeViewportIndex,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTimepointsUpdated: timepoints => {\n      dispatch(setTimepoints(timepoints));\n    },\n    onMeasurementsUpdated: measurements => {\n      dispatch(setMeasurements(measurements));\n    },\n  };\n};\n\nconst ConnectedViewer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Viewer);\n\nexport default ConnectedViewer;\n","import React, { Component } from 'react';\nimport { metadata, studies, utils } from 'ohif-core';\n\nimport ConnectedViewer from './ConnectedViewer.js';\nimport PropTypes from 'prop-types';\nimport { extensionManager } from './../App.js';\n\nconst { OHIFStudyMetadata } = metadata;\nconst { retrieveStudiesMetadata } = studies;\nconst { studyMetadataManager, updateMetaDataManager } = utils;\n\nclass ViewerRetrieveStudyData extends Component {\n  static propTypes = {\n    studyInstanceUids: PropTypes.array.isRequired,\n    seriesInstanceUids: PropTypes.array,\n    server: PropTypes.object,\n  };\n\n  state = {\n    studies: null,\n    error: null,\n  };\n\n  async componentDidMount() {\n    // TODO: Avoid using timepoints here\n    //const params = { studyInstanceUids, seriesInstanceUids, timepointId, timepointsFilter={} };\n    const { studyInstanceUids, seriesInstanceUids, server } = this.props;\n\n    try {\n      const studies = await retrieveStudiesMetadata(\n        server,\n        studyInstanceUids,\n        seriesInstanceUids\n      );\n\n      // Render the viewer when the data is ready\n      // TODO: CLEAR THIS SOMEWHERE ELSE\n      studyMetadataManager.purge();\n\n      // Map studies to new format, update metadata manager?\n      const updatedStudies = studies.map(study => {\n        const studyMetadata = new OHIFStudyMetadata(\n          study,\n          study.studyInstanceUid\n        );\n        const sopClassHandlerModules =\n          extensionManager.modules['sopClassHandlerModule'];\n\n        study.displaySets =\n          study.displaySets ||\n          studyMetadata.createDisplaySets(sopClassHandlerModules);\n        studyMetadata.setDisplaySets(study.displaySets);\n\n        // Updates WADO-RS metaDataManager\n        updateMetaDataManager(study);\n\n        studyMetadataManager.add(studyMetadata);\n\n        return study;\n      });\n\n      this.setState({\n        studies: updatedStudies,\n      });\n    } catch (err) {\n      this.setState({\n        error: true,\n      });\n\n      // TODO: Handle gracefully instead of throwing?\n      throw new Error(err);\n    }\n  }\n\n  render() {\n    if (this.state.error) {\n      return <div>Error: {JSON.stringify(this.state.error)}</div>;\n    }\n\n    return (\n      <ConnectedViewer\n        studies={this.state.studies}\n        studyInstanceUids={this.props.studyInstanceUids}\n      />\n    );\n  }\n}\n\nexport default ViewerRetrieveStudyData;\n","import { connect } from 'react-redux';\nimport ViewerRetrieveStudyData from './ViewerRetrieveStudyData.js';\n\nconst isActive = a => a.active === true;\n\nconst mapStateToProps = state => {\n  const activeServer = state.servers.servers.find(isActive);\n\n  return {\n    server: activeServer,\n  };\n};\n\nconst ConnectedViewerRetrieveStudyData = connect(\n  mapStateToProps,\n  null\n)(ViewerRetrieveStudyData);\n\nexport default ConnectedViewerRetrieveStudyData;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport queryString from 'query-string';\nimport ConnectedViewerRetrieveStudyData from '../connectedComponents/ConnectedViewerRetrieveStudyData.js';\n\nfunction decodeStudyUids(studyUids) {\n  const decodedData = window.atob(studyUids);\n\n  return decodedData.split(';');\n}\n\nfunction getQueryParameters(location) {\n  if (location) {\n    return queryString.parse(location.search);\n  }\n\n  return {};\n}\n\nfunction IHEInvokeImageDisplay({ location }) {\n  const {\n    // patientID,\n    requestType,\n    studyUID,\n  } = getQueryParameters(location);\n\n  switch (requestType) {\n    case 'STUDY':\n      return (\n        <ConnectedViewerRetrieveStudyData\n          studyInstanceUids={studyUID.split(';')}\n        />\n      );\n\n    case 'STUDYBASE64':\n      return (\n        <ConnectedViewerRetrieveStudyData\n          studyInstanceUids={decodeStudyUids(studyUID)}\n        />\n      );\n\n    case 'PATIENT':\n      // TODO: connect this to the StudyList when we have the filter parameters set up\n      // return <StudyList patientUids={patientID.split(';')} />;\n      return '';\n\n    default:\n      // TODO: Figure out what to do here, this won't work because StudyList expects studies\n      // return <StudyList />;\n      return '';\n  }\n}\n\nIHEInvokeImageDisplay.propTypes = {\n  location: PropTypes.shape({\n    search: PropTypes.string,\n  }).isRequired,\n};\n\nexport default withRouter(IHEInvokeImageDisplay);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ConnectedViewerRetrieveStudyData from '../connectedComponents/ConnectedViewerRetrieveStudyData';\n\nfunction ViewerRouting({ match }) {\n  const { studyInstanceUids, seriesInstanceUids } = match.params;\n\n  let studyUIDs;\n  let seriesUIDs;\n\n  if (studyInstanceUids && !seriesInstanceUids) {\n    studyUIDs = studyInstanceUids.split(';');\n  } else if (studyInstanceUids && seriesInstanceUids) {\n    studyUIDs = [studyInstanceUids];\n    seriesUIDs = match.params.seriesInstanceUids.split(';');\n  }\n\n  return (\n    <ConnectedViewerRetrieveStudyData\n      studyInstanceUids={studyUIDs}\n      seriesInstanceUids={seriesUIDs}\n    />\n  );\n}\n\nViewerRouting.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      studyInstanceUids: PropTypes.string.isRequired,\n      seriesInstanceUids: PropTypes.string,\n    }),\n  }),\n};\n\nexport default ViewerRouting;\n","import cornerstone from 'cornerstone-core';\nimport cornerstoneWADOImageLoader from 'cornerstone-wado-image-loader';\nimport * as dcmjs from 'dcmjs';\n\nfunction datasetsToStudies(datasets) {\n  const StudyInstanceUIDs = new Set();\n  datasets.forEach(ds => {\n    StudyInstanceUIDs.add(ds.StudyInstanceUID);\n  });\n\n  const studies = [];\n  Array.from(StudyInstanceUIDs).forEach(studyInstanceUid => {\n    const studyDatasets = datasets.filter(\n      ds => ds.StudyInstanceUID === studyInstanceUid\n    );\n    const firstDataset = studyDatasets[0];\n    const study = {\n      studyInstanceUid: firstDataset.StudyInstanceUID,\n      studyDate: firstDataset.StudyDate,\n      studyTime: firstDataset.StudyTime,\n      accessionNumber: firstDataset.AccessionNumber,\n      referringPhysicianName: firstDataset.ReferringPhysicianName,\n      patientName: firstDataset.PatientName,\n      patientId: firstDataset.PatientID,\n      patientBirthdate: firstDataset.PatientBirthDate,\n      patientSex: firstDataset.PatientSex,\n      studyId: firstDataset.StudyID,\n      studyDescription: firstDataset.StudyDescription,\n      //numberOfStudyRelatedSeries: DICOMWeb.getString(study['00201206']),\n      //numberOfStudyRelatedInstances: DICOMWeb.getString(study['00201208']),\n      // modality: DICOMWeb.getString(study['00080060']),\n      // modalitiesInStudy: DICOMWeb.getString(study['00080061']),\n      //modalities:\n      seriesList: [],\n    };\n\n    const SeriesInstanceUIDs = new Set();\n    studyDatasets.forEach(ds => {\n      SeriesInstanceUIDs.add(ds.SeriesInstanceUID);\n    });\n\n    Array.from(SeriesInstanceUIDs).forEach(seriesInstanceUid => {\n      const seriesDatasets = studyDatasets.filter(\n        ds => ds.SeriesInstanceUID === seriesInstanceUid\n      );\n\n      const SOPInstanceUIDs = new Set();\n      seriesDatasets.forEach(ds => {\n        SOPInstanceUIDs.add(ds.SOPInstanceUID);\n\n        study.seriesList.push({\n          seriesInstanceUid: ds.SeriesInstanceUID,\n          seriesDescription: ds.SeriesDescription,\n          seriesNumber: ds.SeriesNumber,\n          instances: [],\n        });\n      });\n\n      Array.from(SOPInstanceUIDs).forEach(sopInstanceUid => {\n        const instance = seriesDatasets.find(\n          a => a.SOPInstanceUID === sopInstanceUid\n        );\n        const series = study.seriesList.find(\n          a => a.seriesInstanceUid === seriesInstanceUid\n        );\n\n        series.instances.push({\n          sopInstanceUid: instance.SOPInstanceUID,\n          sopClassUid: instance.SOPClassUID,\n          rows: instance.Rows,\n          columns: instance.Columns,\n          numberOfFrames: instance.NumberOfFrames,\n          instanceNumber: instance.InstanceNumber,\n          getImageId: () => instance.imageId, // TODO: Change getImageId to check for instance.imageId property first.\n          /*imageType: DICOMWeb.getString(instance['00080008']),\n          modality: DICOMWeb.getString(instance['00080060']),\n          instanceNumber: DICOMWeb.getNumber(instance['00200013']),\n          imagePositionPatient: DICOMWeb.getString(instance['00200032']),\n          imageOrientationPatient: DICOMWeb.getString(instance['00200037']),\n          frameOfReferenceUID: DICOMWeb.getString(instance['00200052']),\n          sliceLocation: DICOMWeb.getNumber(instance['00201041']),\n          samplesPerPixel: DICOMWeb.getNumber(instance['00280002']),\n          photometricInterpretation: DICOMWeb.getString(instance['00280004']),\n          planarConfiguration: DICOMWeb.getNumber(instance['00280006']),\n          pixelSpacing: DICOMWeb.getString(instance['00280030']),\n          pixelAspectRatio: DICOMWeb.getString(instance['00280034']),\n          bitsAllocated: DICOMWeb.getNumber(instance['00280100']),\n          bitsStored: DICOMWeb.getNumber(instance['00280101']),\n          highBit: DICOMWeb.getNumber(instance['00280102']),\n          pixelRepresentation: DICOMWeb.getNumber(instance['00280103']),\n          smallestPixelValue: DICOMWeb.getNumber(instance['00280106']),\n          largestPixelValue: DICOMWeb.getNumber(instance['00280107']),\n          windowCenter: DICOMWeb.getString(instance['00281050']),\n          windowWidth: DICOMWeb.getString(instance['00281051']),\n          rescaleIntercept: DICOMWeb.getNumber(instance['00281052']),\n          rescaleSlope: DICOMWeb.getNumber(instance['00281053']),\n          rescaleType: DICOMWeb.getNumber(instance['00281054']),\n          sourceImageInstanceUid: getSourceImageInstanceUid(instance),\n          laterality: DICOMWeb.getString(instance['00200062']),\n          viewPosition: DICOMWeb.getString(instance['00185101']),\n          acquisitionDateTime: DICOMWeb.getString(instance['0008002A']),\n          frameIncrementPointer: getFrameIncrementPointer(instance['00280009']),\n          frameTime: DICOMWeb.getNumber(instance['00181063']),\n          frameTimeVector: parseFloatArray(\n            DICOMWeb.getString(instance['00181065'])\n          ),\n          sliceThickness: DICOMWeb.getNumber(instance['00180050']),\n          spacingBetweenSlices: DICOMWeb.getString(instance['00180088']),\n          lossyImageCompression: DICOMWeb.getString(instance['00282110']),\n          derivationDescription: DICOMWeb.getString(instance['00282111']),\n          lossyImageCompressionRatio: DICOMWeb.getString(instance['00282112']),\n          lossyImageCompressionMethod: DICOMWeb.getString(instance['00282114']),\n          echoNumber: DICOMWeb.getString(instance['00180086']),\n          contrastBolusAgent: DICOMWeb.getString(instance['00180010']),\n          radiopharmaceuticalInfo: getRadiopharmaceuticalInfo(instance),\n          wadouri: WADOProxy.convertURL(wadouri, server),\n          wadorsuri: WADOProxy.convertURL(wadorsuri, server),*/\n        });\n      });\n    });\n\n    studies.push(study);\n  });\n\n  console.warn(studies);\n\n  return studies;\n}\n\nexport default async function filesToStudies(files) {\n  const imagePromises = files.map(file => {\n    const imageId = cornerstoneWADOImageLoader.wadouri.fileManager.add(file);\n    return cornerstone\n      .loadAndCacheImage(imageId)\n      .catch(error => console.warn(error));\n  });\n\n  const images = await Promise.all(imagePromises);\n  const datasets = [];\n\n  images.forEach(image => {\n    if (!image || !image.data) {\n      return;\n    }\n\n    const arrayBuffer = image.data.byteArray.buffer;\n    const dicomData = dcmjs.data.DicomMessage.readFile(arrayBuffer);\n    const dataset = dcmjs.data.DicomMetaDictionary.naturalizeDataset(\n      dicomData.dict\n    );\n    dataset._meta = dcmjs.data.DicomMetaDictionary.namifyDataset(\n      dicomData.meta\n    );\n    dataset.imageId = image.imageId;\n\n    datasets.push(dataset);\n  });\n\n  return datasetsToStudies(datasets);\n}\n","import React, { Component } from 'react';\nimport { metadata, utils } from 'ohif-core';\n\nimport ConnectedViewer from './ConnectedViewer.js';\nimport PropTypes from 'prop-types';\nimport { extensionManager } from './../App.js';\nimport Dropzone from 'react-dropzone';\nimport filesToStudies from '../lib/filesToStudies';\nimport './ViewerLocalFileData.css';\nimport { withTranslation } from 'react-i18next';\n\nconst { OHIFStudyMetadata } = metadata;\nconst { studyMetadataManager, updateMetaDataManager } = utils;\n\nclass ViewerLocalFileData extends Component {\n  static propTypes = {\n    studies: PropTypes.array,\n  };\n\n  state = {\n    studies: null,\n    loading: false,\n    error: null,\n  };\n\n  updateStudies = studies => {\n    // Render the viewer when the data is ready\n    studyMetadataManager.purge();\n\n    // Map studies to new format, update metadata manager?\n    const updatedStudies = studies.map(study => {\n      const studyMetadata = new OHIFStudyMetadata(\n        study,\n        study.studyInstanceUid\n      );\n      const sopClassHandlerModules =\n        extensionManager.modules['sopClassHandlerModule'];\n\n      study.displaySets =\n        study.displaySets ||\n        studyMetadata.createDisplaySets(sopClassHandlerModules);\n      studyMetadata.setDisplaySets(study.displaySets);\n\n      // Updates WADO-RS metaDataManager\n      updateMetaDataManager(study);\n\n      studyMetadataManager.add(studyMetadata);\n\n      return study;\n    });\n\n    this.setState({\n      studies: updatedStudies,\n    });\n  };\n\n  render() {\n    const onDrop = async acceptedFiles => {\n      this.setState({ loading: true });\n\n      const studies = await filesToStudies(acceptedFiles);\n      const updatedStudies = this.updateStudies(studies);\n\n      if (!updatedStudies) {\n        return;\n      }\n\n      this.setState({ studies: updatedStudies, loading: false });\n    };\n\n    if (this.state.error) {\n      return <div>Error: {JSON.stringify(this.state.error)}</div>;\n    }\n\n    return (\n      <Dropzone onDrop={onDrop}>\n        {({ getRootProps, getInputProps }) => (\n          <div {...getRootProps()} style={{ width: '100%', height: '100%' }}>\n            {this.state.studies ? (\n              <ConnectedViewer\n                studies={this.state.studies}\n                studyInstanceUids={\n                  this.state.studies &&\n                  this.state.studies.map(a => a.studyInstanceUid)\n                }\n              />\n            ) : (\n              <div className={'drag-drop-instructions'}>\n                <div className={'drag-drop-contents'}>\n                  {this.state.loading ? (\n                    <h3>{this.props.t('Loading...')}</h3>\n                  ) : (\n                    <>\n                      <h3>\n                        {this.props.t(\n                          'Drag and Drop DICOM files here to load them in the Viewer'\n                        )}\n                      </h3>\n                      <h4>\n                        {this.props.t(\n                          \"Or click to load the browser's file selector\"\n                        )}\n                      </h4>\n                    </>\n                  )}\n                </div>\n                <input {...getInputProps()} style={{ display: 'none' }} />\n              </div>\n            )}\n          </div>\n        )}\n      </Dropzone>\n    );\n  }\n}\n\nexport default withTranslation('Common')(ViewerLocalFileData);\n","export function formatFileSize(size) {\n  if (size === 0) return '0 B';\n  const n = Math.floor(Math.log(size) / Math.log(1024));\n  return (\n    (size / Math.pow(1024, n)).toFixed(2) * 1 +\n    ' ' +\n    ['B', 'kB', 'MB', 'GB', 'TB'][n]\n  );\n}\n\nexport function httpErrorToStr(error) {\n  if (!error) return 'Unknown error';\n  if (error.response) {\n    try {\n      const jsonResponse = JSON.parse(error.response);\n      if (\n        jsonResponse.error &&\n        jsonResponse.error.code &&\n        jsonResponse.error.message\n      )\n        return jsonResponse.error.code + ' - ' + jsonResponse.error.message;\n    } catch (err) {\n      return error.response;\n    }\n  }\n  return error.message || 'Unknown error.';\n}\n\nexport function getOidcToken(oidcStorageKey) {\n  const oidcConfigStr = sessionStorage.getItem(oidcStorageKey);\n  if (oidcConfigStr) return JSON.parse(oidcConfigStr).access_token;\n}\n\n/* eslint-disable */\nexport function checkDicomFile(arrayBuffer) {\n  if (arrayBuffer.length <= 132) return false;\n  const arr = new Uint8Array(arrayBuffer.slice(128, 132));\n  // bytes from 128 to 132 must be \"DICM\"\n  return Array.from('DICM').every((char, i) => char.charCodeAt(0) === arr[i]);\n}\n","export default class CancellationToken {\n  constructor() {\n    this.cancelled = false;\n  }\n\n  get() {\n    return this.cancelled;\n  }\n\n  set(value) {\n    this.cancelled = value;\n  }\n}\n","import { httpErrorToStr, getOidcToken, checkDicomFile } from '../utils/helpers';\nimport { api } from 'dicomweb-client';\n\nclass DicomUploadService {\n  setOidcStorageKey(oidcStorageKey) {\n    /* eslint-disable */\n    if (!oidcStorageKey) console.error('OIDC storage key is empty');\n    this.oidcStorageKey = oidcStorageKey;\n  }\n\n  async smartUpload(files, url, authToken, uploadCallback, cancellationToken) {\n    /* eslint-disable */\n    const CHUNK_SIZE = 1; // Only one file per request is supported so far\n    const MAX_PARALLEL_JOBS = 50; // FIXME: tune MAX_PARALLEL_JOBS number\n    //\n    let filesArray = Array.from(files);\n    if (filesArray.length === 0) {\n      console.warn('No files are supplied for uploading');\n      return;\n    }\n    let parallelJobsCount = Math.min(filesArray.length, MAX_PARALLEL_JOBS);\n    let completed = false;\n\n    const processJob = async (resolve, reject) => {\n      while (filesArray.length > 0) {\n        if (cancellationToken.get()) return;\n        let chunk = filesArray.slice(0, CHUNK_SIZE);\n        filesArray = filesArray.slice(CHUNK_SIZE);\n        let error = null;\n        try {\n          if (chunk.length > 1) throw new Error('Not implemented');\n          if (chunk.length === 1)\n            await this.simpleUpload(chunk[0], url, authToken);\n        } catch (err) {\n          // It looks like a stupid bug of Babel that err is not an actual Exception object\n          error = httpErrorToStr(err);\n        }\n        chunk.forEach(file => uploadCallback(file.fileId, error));\n        if (!completed && filesArray.length === 0) {\n          completed = true;\n          resolve();\n          return;\n        }\n      }\n    };\n\n    await new Promise(resolve => {\n      for (let i = 0; i < parallelJobsCount; i++) {\n        processJob(resolve);\n      }\n    });\n  }\n\n  async simpleUpload(file, url, authToken) {\n    /* eslint-disable */\n    const client = this.getClient(url);\n    const loadedFile = await this.readFile(file);\n    const content = loadedFile.content;\n    if (!checkDicomFile(content))\n      throw new Error('The file has a wrong DICOM header');\n    await client.storeInstances({ datasets: [content] });\n  }\n\n  readFile(file) {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.onload = () => {\n        resolve({\n          name: file.name,\n          size: file.size,\n          type: file.type,\n          content: reader.result,\n        });\n      };\n      reader.onerror = error => reject(error);\n      reader.readAsArrayBuffer(file);\n    });\n  }\n\n  getClient(url) {\n    if (!this.oidcStorageKey) throw new Error('OIDC storage key is not set');\n    const accessToken = getOidcToken(this.oidcStorageKey);\n    if (!accessToken) throw new Error('OIDC access_token is not set');\n    return new api.DICOMwebClient({\n      url,\n      headers: { Authorization: 'Bearer ' + accessToken },\n    });\n  }\n}\n\nexport default new DicomUploadService();\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { formatFileSize } from './utils/helpers';\nimport CancellationToken from './utils/CancellationToken';\nimport dicomUploader from './api/DicomUploadService';\nimport './googleCloud.css';\n\nexport default class DicomUploader extends Component {\n  state = {\n    status: 'Upload',\n    isCancelled: false,\n    errorsCount: 0,\n    files: null,\n    uploadedVolume: null,\n    wholeVolumeStr: null,\n    isFilesListHidden: true,\n    timeLeft: null,\n    uploadedList: null,\n    totalCount: 0,\n    successfullyUploadedCount: 0,\n    lastFile: '',\n    uploadContext: null, // this is probably not needed, but we use this variable to distinguish between different downloads\n  };\n\n  static propTypes = {\n    id: PropTypes.string,\n    event: PropTypes.string,\n    url: PropTypes.string,\n    oidcKey: PropTypes.string,\n  };\n\n  filesLeft() {\n    return (\n      this.state.uploadedList.length + ' of ' + this.state.totalCount + ' files'\n    );\n  }\n\n  volumeLeft() {\n    let left = formatFileSize(this.state.uploadedVolume);\n    return left + ' of ' + this.state.wholeVolumeStr;\n  }\n\n  percents() {\n    return parseInt(\n      (100 * this.state.uploadedList.length) /\n        Object.keys(this.state.files).length\n    );\n  }\n\n  isFinished() {\n    return (\n      this.state.isCancelled ||\n      Object.keys(this.state.files).length === this.state.uploadedList.length\n    );\n  }\n\n  errorsMessage() {\n    const errors = this.state.errorsCount === 1 ? ' error' : ' errors';\n    return (\n      this.state.errorsCount + errors + ' while uploading, click for more info'\n    );\n  }\n\n  uploadFiles = files => {\n    const filesArray = Array.from(files.target.files);\n    const filesDict = {};\n    filesArray.forEach((file, i) => {\n      const fileDesc = {\n        id: i,\n        name: file.name,\n        path: file.webkitRelativePath || file.name,\n        size: file.size,\n        error: null,\n        processed: false,\n        processedInUI: false,\n      };\n      filesDict[i] = fileDesc;\n      file.fileId = i;\n    });\n    const wholeVolume = filesArray.map(f => f.size).reduce((a, b) => a + b);\n    const uploadContext = Math.random();\n    this.setState({\n      status: 'Uploading...',\n      files: filesDict,\n      uploadedList: [],\n      uploadedVolume: 0,\n      lastFile: filesArray[0].name,\n      totalCount: filesArray.length,\n      wholeVolumeStr: formatFileSize(wholeVolume),\n      uploadContext: uploadContext,\n      cancellationToken: new CancellationToken(),\n    });\n    const cancellationToken = new CancellationToken();\n    const uploadCallback = (fileId, error) =>\n      uploadContext === this.state.uploadContext &&\n      this.uploadCallback.call(this, fileId, error);\n    dicomUploader.setOidcStorageKey(this.props.oidcKey);\n    dicomUploader.smartUpload(\n      files.target.files,\n      this.props.url,\n      this.props.oidcKey,\n      uploadCallback,\n      cancellationToken\n    );\n  };\n\n  uploadCallback(fileId, error) {\n    const file = this.state.files[fileId];\n    file.processed = true;\n    if (!error) {\n      let uploadedVolume = this.state.uploadedVolume + file.size;\n      this.setState({ uploadedVolume });\n    } else {\n      file.error = error;\n      this.setState({ errorsCount: this.state.errorsCount + 1 });\n    }\n    this.setState({ lastFile: file.name });\n    let uploadedList = this.state.uploadedList;\n    uploadedList.push(file);\n    this.setState({ uploadedList });\n  }\n\n  renderTableRow = file => {\n    let error = null;\n    if (file.error !== null) {\n      error = <p style={{ color: 'red' }}>{file.error}</p>;\n    }\n    return (\n      <tr key={file.id}>\n        <td className=\"project\">\n          {file.name} {error}\n        </td>\n      </tr>\n    );\n  };\n\n  render() {\n    if (this.state.files === null) {\n      return (\n        <div className=\"gcp-dicom-uploader\">\n          <div className=\"button\">\n            <label htmlFor=\"file\">\n              <img src=\"./assets/Button_File.svg\" alt=\"upload file\"></img>\n            </label>\n            <input\n              className=\"gcp-invisible-input\"\n              accept=\".dcm\"\n              onChange={this.uploadFiles}\n              type=\"file\"\n              id=\"file\"\n              multiple\n            />\n          </div>\n\n          <div className=\"button\">\n            <label htmlFor=\"folder\">\n              <img src=\"./assets/Button_Folder.svg\" alt=\"upload folder\"></img>\n            </label>\n            <input\n              className=\"gcp-invisible-input\"\n              type=\"file\"\n              onChange={this.uploadFiles}\n              id=\"folder\"\n              webkitdirectory=\"true\"\n              mozdirectory=\"true\"\n              multiple\n            />\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <table id=\"tblProjectList\" className=\"table noselect\">\n        <thead>\n          <tr>\n            <th className=\"gcp-picker--path\">\n              {this.percents()}% {this.filesLeft()}\n            </th>\n          </tr>\n        </thead>\n        <tbody id=\"ProjectList\">\n          {this.state.uploadedList.map(this.renderTableRow)}\n        </tbody>\n      </table>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Modal from 'react-bootstrap-modal';\nimport DicomUploader from './DicomUploader';\nimport { withTranslation } from 'react-i18next';\n\nclass DicomFileUploaderModal extends Component {\n  static propTypes = {\n    url: PropTypes.string,\n    oidcStorageKey: PropTypes.string.isRequired,\n    onClose: PropTypes.func,\n  };\n\n  state = {\n    uploaded: false,\n  };\n\n  render() {\n    if (!this.props.url) {\n      return null;\n    }\n\n    return (\n      <Modal\n        show={this.props.isOpen}\n        onHide={this.props.onClose}\n        aria-labelledby=\"ModalHeader\"\n        className=\"modal fade themed in\"\n        backdrop={false}\n        size={'md'}\n        keyboard={true}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>\n            {this.props.t('Google Cloud Healthcare API - DICOM Upload')}\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <DicomUploader\n            url={this.props.url}\n            oidcKey={this.props.oidcStorageKey}\n          />\n        </Modal.Body>\n      </Modal>\n    );\n  }\n}\n\nexport default withTranslation('Common')(DicomFileUploaderModal);\n","import { connect } from 'react-redux';\nimport DicomFileUploaderModal from './DicomFileUploaderModal.js';\n\nconst isActive = a => a.active === true;\n\nconst mapStateToProps = state => {\n  const activeServer = state.servers.servers.find(isActive);\n  const { authority, client_id } = window.config.oidc[0];\n  const oidcStorageKey = `oidc.user:${authority}:${client_id}`;\n\n  return {\n    oidcStorageKey,\n    url: activeServer && activeServer.qidoRoot,\n  };\n};\n\nconst ConnectedDicomFileUploader = connect(\n  mapStateToProps,\n  null\n)(DicomFileUploaderModal);\n\nexport default ConnectedDicomFileUploader;\n","import { getOidcToken } from '../utils/helpers';\n\nclass GoogleCloudApi {\n  setOidcStorageKey(oidcStorageKey) {\n    if (!oidcStorageKey) console.error('OIDC storage key is empty');\n    this.oidcStorageKey = oidcStorageKey;\n  }\n\n  get fetchConfig() {\n    if (!this.oidcStorageKey) throw new Error('OIDC storage key is not set');\n    const accessToken = getOidcToken(this.oidcStorageKey);\n    if (!accessToken) throw new Error('OIDC access_token is not set');\n    return {\n      method: 'GET',\n      headers: {\n        Authorization: 'Bearer ' + accessToken,\n      },\n    };\n  }\n\n  get urlBase() {\n    return `https://healthcare.googleapis.com/v1beta1`;\n  }\n\n  get urlBaseProject() {\n    return this.urlBase + `/projects`;\n  }\n\n  async doRequest(urlStr, config = {}, params = {}) {\n    const url = new URL(urlStr);\n    let data = null;\n    url.search = new URLSearchParams(params);\n\n    try {\n      const response = await fetch(url, { ...this.fetchConfig, config });\n      try {\n        data = await response.json();\n      } catch (err) {}\n      if (response.status >= 200 && response.status < 300 && data != null) {\n        if (data.nextPageToken != null) {\n          params.pageToken = data.nextPageToken;\n          let subPage = await this.doRequest(urlStr, config, params);\n          for (let key in data) {\n            if (data.hasOwnProperty(key)) {\n              data[key] = data[key].concat(subPage.data[key]);\n            }\n          }\n        }\n        return {\n          isError: false,\n          status: response.status,\n          data,\n        };\n      } else {\n        return {\n          isError: true,\n          status: response.status,\n          message:\n            (data && data.error && data.error.message) || 'Unknown error',\n        };\n      }\n    } catch (err) {\n      if (data && data.error) {\n        return {\n          isError: true,\n          status: err.status,\n          message: err.response.data.error.message || 'Unspecified error',\n        };\n      }\n      return {\n        isError: true,\n        message: (err && err.message) || 'Oops! Something went wrong',\n      };\n    }\n  }\n\n  async loadProjects() {\n    return this.doRequest(\n      'https://cloudresourcemanager.googleapis.com/v1/projects'\n    );\n  }\n\n  async loadLocations(projectId) {\n    return this.doRequest(`${this.urlBaseProject}/${projectId}/locations`);\n  }\n\n  async loadDatasets(projectId, locationId) {\n    return this.doRequest(\n      `${this.urlBaseProject}/${projectId}/locations/${locationId}/datasets`\n    );\n  }\n\n  async loadDicomStores(dataset) {\n    return this.doRequest(`${this.urlBase}/${dataset}/dicomStores`);\n  }\n}\n\nexport default new GoogleCloudApi();\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './googleCloud.css';\nimport { withTranslation } from 'react-i18next';\nimport { Icon } from 'react-viewerbase';\n\nclass DicomStoreList extends Component {\n  state = {\n    search: '',\n  };\n\n  static propTypes = {\n    stores: PropTypes.array,\n    loading: PropTypes.bool.isRequired,\n    error: PropTypes.string,\n    onSelect: PropTypes.func,\n  };\n\n  static defaultProps = {\n    loading: true,\n  };\n\n  renderTableRow = store => {\n    return (\n      <tr\n        key={store.name}\n        className={\n          this.state.highlightedItem === store.name\n            ? 'noselect active'\n            : 'noselect'\n        }\n        onMouseEnter={() => {\n          this.onHighlightItem(store.name);\n        }}\n        onClick={() => {\n          this.props.onSelect(store);\n        }}\n      >\n        <td className=\"project\">{store.name.split('/')[7]}</td>\n      </tr>\n    );\n  };\n\n  onHighlightItem(store) {\n    this.setState({ highlightedItem: store });\n  }\n\n  render() {\n    if (this.props.error) {\n      return <p>{this.props.error}</p>;\n    }\n\n    const loadingIcon = (\n      <Icon name=\"circle-notch\" className=\"loading-icon-spin loading-icon\" />\n    );\n\n    if (this.props.loading) {\n      return loadingIcon;\n    }\n\n    const body = (\n      <tbody id=\"StoreList\">{this.props.stores.map(this.renderTableRow)}</tbody>\n    );\n\n    return (\n      <table id=\"tblStoreList\" className=\"gcp-table table noselect\">\n        <thead>\n          <tr>\n            <th>{this.props.t('DICOM Store')}</th>\n          </tr>\n        </thead>\n        {this.props.stores && body}\n      </table>\n    );\n  }\n}\n\nexport default withTranslation('Common')(DicomStoreList);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport api from './api/GoogleCloudApi';\nimport DicomStoreList from './DicomStoreList';\nimport './googleCloud.css';\n\nexport default class DicomStorePicker extends Component {\n  state = {\n    error: null,\n    loading: true,\n    stores: [],\n    locations: [],\n  };\n\n  static propTypes = {\n    dataset: PropTypes.object,\n    onSelect: PropTypes.func,\n  };\n\n  async componentDidMount() {\n    const { authority, client_id } = window.config.oidc[0];\n    const oidcStorageKey = `oidc.user:${authority}:${client_id}`;\n    api.setOidcStorageKey(oidcStorageKey);\n    const response = await api.loadDicomStores(this.props.dataset.name);\n\n    if (response.isError) {\n      this.setState({\n        error: response.message,\n      });\n\n      return;\n    }\n\n    this.setState({\n      stores: response.data.dicomStores || [],\n      loading: false,\n    });\n  }\n\n  render() {\n    const { stores, loading, error } = this.state;\n    const { onSelect } = this.props;\n\n    return (\n      <DicomStoreList\n        stores={stores}\n        loading={loading}\n        error={error}\n        onSelect={onSelect}\n      />\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './googleCloud.css';\nimport { withTranslation } from 'react-i18next';\nimport { Icon } from 'react-viewerbase';\n\nclass DatasetsList extends Component {\n  state = {\n    search: '',\n  };\n\n  static propTypes = {\n    datasets: PropTypes.array,\n    loading: PropTypes.bool,\n    error: PropTypes.string,\n    onSelect: PropTypes.func,\n  };\n\n  static defaultProps = {\n    loading: true,\n  };\n\n  renderTableRow = dataset => {\n    return (\n      <tr\n        key={dataset.name}\n        className={\n          this.state.highlightedItem === dataset.name\n            ? 'noselect active'\n            : 'noselect'\n        }\n        onMouseEnter={() => {\n          this.onHighlightItem(dataset.name);\n        }}\n        onClick={() => {\n          this.props.onSelect(dataset);\n        }}\n      >\n        <td>{dataset.name.split('/')[5]}</td>\n      </tr>\n    );\n  };\n\n  onHighlightItem(dataset) {\n    this.setState({ highlightedItem: dataset });\n  }\n\n  render() {\n    if (this.props.error) {\n      return <p>{this.props.error}</p>;\n    }\n\n    const loadingIcon = (\n      <Icon name=\"circle-notch\" className=\"loading-icon-spin loading-icon\" />\n    );\n\n    if (this.props.loading) {\n      return loadingIcon;\n    }\n\n    const body = (\n      <tbody id=\"DatasetList\">\n        {this.props.datasets.map(this.renderTableRow)}\n      </tbody>\n    );\n\n    return (\n      <table id=\"tblDatasetList\" className=\"gcp-table table noselect\">\n        <thead>\n          <tr>\n            <th>{this.props.t('Dataset')}</th>\n          </tr>\n        </thead>\n        {this.props.datasets && body}\n      </table>\n    );\n  }\n}\n\nexport default withTranslation('Common')(DatasetsList);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport api from './api/GoogleCloudApi';\nimport DatasetsList from './DatasetsList';\nimport './googleCloud.css';\n\nexport default class DatasetPicker extends Component {\n  state = {\n    error: null,\n    loading: true,\n    datasets: [],\n  };\n\n  static propTypes = {\n    project: PropTypes.object,\n    location: PropTypes.object,\n    onSelect: PropTypes.func,\n    oidcKey: PropTypes.string,\n  };\n\n  async componentDidMount() {\n    api.setOidcStorageKey(this.props.oidcKey);\n\n    const response = await api.loadDatasets(\n      this.props.project.projectId,\n      this.props.location.locationId\n    );\n\n    if (response.isError) {\n      this.setState({\n        error: response.message,\n      });\n\n      return;\n    }\n\n    this.setState({\n      datasets: response.data.datasets || [],\n      loading: false,\n    });\n  }\n\n  render() {\n    const { datasets, loading, error } = this.state;\n    const { onSelect } = this.props;\n    return (\n      <DatasetsList\n        datasets={datasets}\n        loading={loading}\n        error={error}\n        onSelect={onSelect}\n      />\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './googleCloud.css';\nimport { withTranslation } from 'react-i18next';\nimport { Icon } from 'react-viewerbase';\n\nclass ProjectsList extends Component {\n  state = {\n    search: '',\n    highlightedItem: null,\n  };\n\n  static propTypes = {\n    projects: PropTypes.array,\n    loading: PropTypes.bool.isRequired,\n    error: PropTypes.string,\n    onSelect: PropTypes.func.isRequired,\n    t: PropTypes.func,\n  };\n\n  static defaultProps = {\n    loading: true,\n  };\n\n  renderTableRow = project => {\n    return (\n      <tr\n        key={project.projectId}\n        className={\n          this.state.highlightedItem === project.projectId\n            ? 'noselect active'\n            : 'noselect'\n        }\n        onMouseEnter={() => {\n          this.onHighlightItem(project.projectId);\n        }}\n        onClick={() => {\n          this.onHighlightItem(project.projectId);\n          this.props.onSelect(project);\n        }}\n      >\n        <td>{project.name}</td>\n        <td>{project.projectId}</td>\n      </tr>\n    );\n  };\n\n  onHighlightItem(project) {\n    this.setState({ highlightedItem: project });\n  }\n\n  render() {\n    if (this.props.error) {\n      return <p>{this.props.error}</p>;\n    }\n\n    const loadingIcon = (\n      <Icon name=\"circle-notch\" className=\"loading-icon-spin loading-icon\" />\n    );\n\n    if (this.props.loading) {\n      return loadingIcon;\n    }\n\n    const body = (\n      <tbody id=\"ProjectList\">\n        {this.props.projects.map(this.renderTableRow)}\n      </tbody>\n    );\n\n    return (\n      <table id=\"tblProjectList\" className=\"gcp-table table noselect\">\n        <thead>\n          <tr>\n            <th>{this.props.t('Project')}</th>\n            <th>{this.props.t('ID')}</th>\n          </tr>\n        </thead>\n        {this.props.projects && body}\n      </table>\n    );\n  }\n}\n\nexport default withTranslation('Common')(ProjectsList);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport api from './api/GoogleCloudApi';\nimport ProjectsList from './ProjectsList';\nimport './googleCloud.css';\n\nexport default class ProjectPicker extends Component {\n  state = {\n    error: null,\n    loading: true,\n    projects: [],\n  };\n\n  static propTypes = {\n    onSelect: PropTypes.func,\n    oidcKey: PropTypes.string,\n  };\n\n  async componentDidMount() {\n    api.setOidcStorageKey(this.props.oidcKey);\n    const response = await api.loadProjects();\n\n    if (response.isError) {\n      this.setState({\n        error: response.message,\n      });\n\n      return;\n    }\n\n    this.setState({\n      projects: response.data.projects || [],\n      loading: false,\n    });\n  }\n\n  render() {\n    const { projects, loading, error } = this.state;\n    const { onSelect } = this.props;\n    return (\n      <ProjectsList\n        projects={projects}\n        loading={loading}\n        error={error}\n        onSelect={onSelect}\n      />\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './googleCloud.css';\nimport { withTranslation } from 'react-i18next';\nimport { Icon } from 'react-viewerbase';\n\nclass LocationsList extends Component {\n  state = {\n    search: '',\n  };\n\n  static propTypes = {\n    locations: PropTypes.array,\n    loading: PropTypes.bool.isRequired,\n    error: PropTypes.string,\n    onSelect: PropTypes.func,\n  };\n\n  static defaultProps = {\n    loading: true,\n  };\n\n  renderTableRow = location => {\n    return (\n      <tr\n        key={location.locationId}\n        className={\n          this.state.highlightedItem === location.locationId\n            ? 'noselect active'\n            : 'noselect'\n        }\n        onMouseEnter={() => {\n          this.onHighlightItem(location.locationId);\n        }}\n        onClick={() => {\n          this.props.onSelect(location);\n        }}\n      >\n        <td>{location.name.split('/')[3]}</td>\n      </tr>\n    );\n  };\n\n  onHighlightItem(locationId) {\n    this.setState({ highlightedItem: locationId });\n  }\n\n  render() {\n    if (this.props.error) {\n      return <p>{this.props.error}</p>;\n    }\n\n    const loadingIcon = (\n      <Icon name=\"circle-notch\" className=\"loading-icon-spin loading-icon\" />\n    );\n\n    if (this.props.loading) {\n      return loadingIcon;\n    }\n\n    const body = (\n      <tbody id=\"LocationList\">\n        {this.props.locations.map(this.renderTableRow)}\n      </tbody>\n    );\n\n    return (\n      <table id=\"tblLocationList\" className=\"gcp-table table noselect\">\n        <thead>\n          <tr>\n            <th>{this.props.t('Location')}</th>\n          </tr>\n        </thead>\n        {this.props.locations && body}\n      </table>\n    );\n  }\n}\n\nexport default withTranslation('Common')(LocationsList);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport api from './api/GoogleCloudApi';\nimport LocationsList from './LocationsList';\nimport './googleCloud.css';\n\nexport default class LocationPicker extends Component {\n  state = {\n    error: null,\n    loading: true,\n    locations: [],\n  };\n\n  static propTypes = {\n    project: PropTypes.object,\n    onSelect: PropTypes.func,\n    oidcKey: PropTypes.string,\n  };\n\n  async componentDidMount() {\n    api.setOidcStorageKey(this.props.oidcKey);\n\n    const response = await api.loadLocations(this.props.project.projectId);\n\n    if (response.isError) {\n      this.setState({\n        error: response.message,\n      });\n\n      return;\n    }\n\n    this.setState({\n      locations: response.data.locations || [],\n      loading: false,\n    });\n  }\n\n  render() {\n    const { locations, loading, error } = this.state;\n    const { onSelect } = this.props;\n    return (\n      <LocationsList\n        locations={locations}\n        loading={loading}\n        error={error}\n        onSelect={onSelect}\n      />\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DicomStorePicker from './DicomStorePicker';\nimport DatasetPicker from './DatasetPicker';\nimport ProjectPicker from './ProjectPicker';\nimport LocationPicker from './LocationPicker';\nimport GoogleCloudApi from './api/GoogleCloudApi';\nimport './googleCloud.css';\n\nclass DatasetSelector extends Component {\n  state = {\n    project: null,\n    location: null,\n    dataset: null,\n    unloading: false,\n  };\n\n  static propTypes = {\n    id: PropTypes.string,\n    event: PropTypes.string,\n    oidcKey: PropTypes.string,\n    canClose: PropTypes.string,\n    setServers: PropTypes.func.isRequired,\n  };\n\n  onProjectSelect = project => {\n    this.setState({\n      project,\n    });\n  };\n\n  onLocationSelect = location => {\n    this.setState({\n      location,\n    });\n  };\n\n  onDatasetSelect = dataset => {\n    this.setState({\n      dataset,\n    });\n  };\n\n  onProjectClick = () => {\n    this.setState({\n      dataset: null,\n      location: null,\n      project: null,\n    });\n  };\n\n  onLocationClick = () => {\n    this.setState({\n      dataset: null,\n      location: null,\n    });\n  };\n\n  onDatasetClick = () => {\n    this.setState({\n      dataset: null,\n    });\n  };\n\n  onDicomStoreSelect = dicomStoreJson => {\n    const dicomStore = dicomStoreJson.name;\n    const parts = dicomStore.split('/');\n    const result = {\n      wadoUriRoot: GoogleCloudApi.urlBase + `/${dicomStore}/dicomWeb`,\n      qidoRoot: GoogleCloudApi.urlBase + `/${dicomStore}/dicomWeb`,\n      wadoRoot: GoogleCloudApi.urlBase + `/${dicomStore}/dicomWeb`,\n      project: parts[1],\n      location: parts[3],\n      dataset: parts[5],\n      dicomStore: parts[7],\n    };\n    this.props.setServers(result);\n  };\n\n  render() {\n    const { project, location, dataset } = this.state;\n    const {\n      onProjectClick,\n      onLocationClick,\n      onDatasetClick,\n      onProjectSelect,\n      onLocationSelect,\n      onDatasetSelect,\n      onDicomStoreSelect,\n    } = this;\n\n    let projectBreadcrumbs = (\n      <div className=\"gcp-picker--path\">\n        <span>{this.props.t('Select a Project')}</span>\n      </div>\n    );\n\n    if (project) {\n      projectBreadcrumbs = (\n        <div className=\"gcp-picker--path\">\n          <span onClick={onProjectClick}>{project.name}</span>\n          {project && location && (\n            <span onClick={onLocationClick}>\n              {' '}\n              -> {location.name.split('/')[3]}\n            </span>\n          )}\n          {project && location && dataset && (\n            <span onClick={onDatasetClick}>\n              {' '}\n              -> {dataset.name.split('/')[5]}\n            </span>\n          )}\n        </div>\n      );\n    }\n\n    return (\n      <>\n        {projectBreadcrumbs}\n        {!project && (\n          <ProjectPicker\n            oidcKey={this.props.oidcKey}\n            onSelect={onProjectSelect}\n          />\n        )}\n\n        {project && !location && (\n          <LocationPicker\n            oidcKey={this.props.oidcKey}\n            project={project}\n            onSelect={onLocationSelect}\n          />\n        )}\n        {project && location && !dataset && (\n          <DatasetPicker\n            oidcKey={this.props.oidcKey}\n            project={project}\n            location={location}\n            onSelect={onDatasetSelect}\n          />\n        )}\n        {project && location && dataset && (\n          <DicomStorePicker\n            oidcKey={this.props.oidcKey}\n            dataset={dataset}\n            onSelect={onDicomStoreSelect}\n          />\n        )}\n      </>\n    );\n  }\n}\n\nexport default withTranslation('Common')(DatasetSelector);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Modal from 'react-bootstrap-modal';\nimport DatasetSelector from './DatasetSelector';\nimport './googleCloud.css';\nimport { withTranslation } from 'react-i18next';\n\nclass DicomStorePickerModal extends Component {\n  static propTypes = {\n    url: PropTypes.string,\n    oidcStorageKey: PropTypes.string.isRequired,\n    setServers: PropTypes.func.isRequired,\n    isOpen: PropTypes.bool.isRequired,\n    onClose: PropTypes.func,\n  };\n\n  static defaultProps = {\n    isOpen: false,\n  };\n\n  handleEvent = data => {\n    const servers = [\n      {\n        name: data.dicomStore,\n        imageRendering: 'wadors',\n        thumbnailRendering: 'wadors',\n        qidoSupportsIncludeField: false,\n        type: 'dicomWeb',\n        qidoRoot: data.qidoRoot,\n        wadoRoot: data.wadoRoot,\n        wadoUriRoot: data.wadoUriRoot,\n        active: true,\n      },\n    ];\n\n    this.props.setServers(servers);\n  };\n\n  render() {\n    return (\n      <Modal\n        show={this.props.isOpen}\n        onHide={this.props.onClose}\n        aria-labelledby=\"ModalHeader\"\n        className=\"modal fade themed in\"\n        backdrop={false}\n        size={'md'}\n        keyboard={true}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>\n            {this.props.t('Google Cloud Healthcare API')}\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <DatasetSelector\n            setServers={this.handleEvent}\n            oidcKey={this.props.oidcStorageKey}\n            url={this.props.url}\n          />\n        </Modal.Body>\n      </Modal>\n    );\n  }\n}\n\nexport default withTranslation('Common')(DicomStorePickerModal);\n","import { connect } from 'react-redux';\nimport DicomStorePickerModal from './DicomStorePickerModal.js';\n\nconst isActive = a => a.active === true;\n\nconst mapStateToProps = state => {\n  const activeServer = state.servers.servers.find(isActive);\n  const { authority, client_id } = window.config.oidc[0];\n  const oidcStorageKey = `oidc.user:${authority}:${client_id}`;\n\n  return {\n    oidcStorageKey,\n    url: activeServer && activeServer.qidoRoot,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setServers: servers => {\n      const action = {\n        type: 'SET_SERVERS',\n        servers,\n      };\n      dispatch(action);\n    },\n  };\n};\n\nconst ConnectedDicomStorePicker = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DicomStorePickerModal);\n\nexport default ConnectedDicomStorePicker;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Dropzone from 'react-dropzone';\nimport OHIF from 'ohif-core';\nimport { withRouter } from 'react-router-dom';\nimport { withTranslation } from 'react-i18next';\nimport { StudyList } from 'react-viewerbase';\nimport ConnectedHeader from '../connectedComponents/ConnectedHeader.js';\nimport moment from 'moment';\nimport ConnectedDicomFilesUploader from '../googleCloud/ConnectedDicomFilesUploader';\nimport ConnectedDicomStorePicker from '../googleCloud/ConnectedDicomStorePicker';\nimport filesToStudies from '../lib/filesToStudies.js';\n\nclass StudyListWithData extends Component {\n  state = {\n    searchData: {},\n    studies: [],\n    error: null,\n    modalComponentId: null,\n  };\n\n  static propTypes = {\n    filters: PropTypes.object,\n    patientId: PropTypes.string,\n    server: PropTypes.object,\n    user: PropTypes.object,\n    history: PropTypes.object,\n  };\n\n  static rowsPerPage = 25;\n  static defaultSort = { field: 'patientName', order: 'desc' };\n\n  static studyListDateFilterNumDays = 25000; // TODO: put this in the settings\n  static defaultStudyDateFrom = moment()\n    .subtract(StudyListWithData.studyListDateFilterNumDays, 'days')\n    .toDate();\n  static defaultStudyDateTo = new Date();\n  static defaultSearchData = {\n    currentPage: 0,\n    rowsPerPage: StudyListWithData.rowsPerPage,\n    studyDateFrom: StudyListWithData.defaultStudyDateFrom,\n    studyDateTo: StudyListWithData.defaultStudyDateTo,\n    sortData: StudyListWithData.defaultSort,\n  };\n\n  componentDidMount() {\n    // TODO: Avoid using timepoints here\n    //const params = { studyInstanceUids, seriesInstanceUids, timepointId, timepointsFilter={} };\n    if (!this.props.server && window.config.enableGoogleCloudAdapter) {\n      this.setState({\n        modalComponentId: 'DicomStorePicker',\n      });\n    } else {\n      this.searchForStudies({\n        ...StudyListWithData.defaultSearchData,\n        ...(this.props.filters || {}),\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (!this.state.searchData && !this.state.studies) {\n      this.searchForStudies();\n    }\n    if (this.props.server !== prevProps.server) {\n      this.setState({\n        modalComponentId: null,\n        searchData: null,\n        studies: null,\n      });\n    }\n  }\n\n  searchForStudies = (searchData = StudyListWithData.defaultSearchData) => {\n    const { server } = this.props;\n    const filter = {\n      patientId: searchData.patientId,\n      patientName: searchData.patientName,\n      accessionNumber: searchData.accessionNumber,\n      studyDescription: searchData.studyDescription,\n      modalitiesInStudy: searchData.modalities,\n      studyDateFrom: searchData.studyDateFrom,\n      studyDateTo: searchData.studyDateTo,\n      limit: searchData.rowsPerPage,\n      offset: searchData.currentPage * searchData.rowsPerPage,\n    };\n\n    // TODO: add sorting\n    const promise = OHIF.studies.searchStudies(server, filter);\n\n    // Render the viewer when the data is ready\n    promise\n      .then(studies => {\n        if (!studies) {\n          studies = [];\n        }\n\n        const { field, order } = searchData.sortData;\n        let sortedStudies = studies.map(study => {\n          if (!moment(study.studyDate, 'MMM DD, YYYY', true).isValid()) {\n            study.studyDate = moment(study.studyDate, 'YYYYMMDD').format(\n              'MMM DD, YYYY'\n            );\n          }\n          return study;\n        });\n\n        sortedStudies.sort(function(a, b) {\n          let fieldA = a[field];\n          let fieldB = b[field];\n          if (field === 'studyDate') {\n            fieldA = moment(fieldA).toISOString();\n            fieldB = moment(fieldB).toISOString();\n          }\n          if (order === 'desc') {\n            if (fieldA < fieldB) {\n              return -1;\n            }\n            if (fieldA > fieldB) {\n              return 1;\n            }\n            return 0;\n          } else {\n            if (fieldA > fieldB) {\n              return -1;\n            }\n            if (fieldA < fieldB) {\n              return 1;\n            }\n            return 0;\n          }\n        });\n\n        this.setState({\n          studies: sortedStudies,\n        });\n      })\n      .catch(error => {\n        this.setState({\n          error: true,\n        });\n\n        throw new Error(error);\n      });\n  };\n\n  onImport = () => {\n    //console.log('onImport');\n  };\n\n  openModal = modalComponentId => {\n    this.setState({\n      modalComponentId,\n    });\n  };\n\n  closeModal = () => {\n    this.setState({ modalComponentId: null });\n  };\n\n  onSelectItem = studyInstanceUID => {\n    this.props.history.push(`/viewer/${studyInstanceUID}`);\n  };\n\n  onSearch = searchData => {\n    this.searchForStudies(searchData);\n  };\n\n  closeModals = () => {\n    this.setState({\n      modalComponentId: null,\n    });\n  };\n\n  render() {\n    const onDrop = async acceptedFiles => {\n      // Do something with the files\n      console.warn(acceptedFiles);\n\n      try {\n        const studies = await filesToStudies(acceptedFiles);\n\n        this.setState({ studies });\n      } catch (error) {\n        this.setState({ error });\n      }\n    };\n\n    if (this.state.error) {\n      return <div>Error: {JSON.stringify(this.state.error)}</div>;\n    } else if (this.state.studies === null && !this.state.modalComponentId) {\n      return <div>Loading...</div>;\n    }\n\n    let healthCareApiButtons = null;\n    let healthCareApiWindows = null;\n\n    // TODO: This should probably be a prop\n    if (window.config.enableGoogleCloudAdapter) {\n      healthCareApiWindows = (\n        <>\n          <ConnectedDicomStorePicker\n            isOpen={this.state.modalComponentId === 'DicomStorePicker'}\n            onClose={this.closeModals}\n          />\n          <ConnectedDicomFilesUploader\n            isOpen={this.state.modalComponentId === 'DicomFilesUploader'}\n            onClose={this.closeModals}\n          />\n        </>\n      );\n\n      healthCareApiButtons = (\n        <div\n          className=\"form-inline btn-group pull-right\"\n          style={{ padding: '20px' }}\n        >\n          <button\n            className=\"btn btn-primary\"\n            onClick={() => this.openModal('DicomStorePicker')}\n          >\n            {this.props.t('Change DICOM Store')}\n          </button>\n          <button\n            className=\"btn btn-primary\"\n            onClick={() => this.openModal('DicomFilesUploader')}\n          >\n            {this.props.t('Upload Studies')}\n          </button>\n        </div>\n      );\n    }\n\n    console.warn(this.state.studies);\n\n    const studyList = (\n      <Dropzone onDrop={onDrop}>\n        {({ getRootProps, getInputProps }) => (\n          <div {...getRootProps()} className=\"paginationArea\">\n            {this.state.studies ? (\n              <StudyList\n                studies={this.state.studies}\n                studyListFunctionsEnabled={false}\n                onImport={this.onImport}\n                onSelectItem={this.onSelectItem}\n                pageSize={this.rowsPerPage}\n                defaultSort={StudyListWithData.defaultSort}\n                studyListDateFilterNumDays={\n                  StudyListWithData.studyListDateFilterNumDays\n                }\n                onSearch={this.onSearch}\n              >\n                {healthCareApiButtons}\n                {healthCareApiWindows}\n              </StudyList>\n            ) : (\n              <div className={'drag-drop-instructions'}>\n                <h3>\n                  {this.props.t(\n                    'Drag and Drop DICOM files here to load them in the Viewer'\n                  )}\n                </h3>\n                <h4>\n                  {this.props.t(\"Or click to load the browser's file selector\")}\n                </h4>\n                <input {...getInputProps()} style={{ display: 'none' }} />\n              </div>\n            )}\n          </div>\n        )}\n      </Dropzone>\n    );\n    return (\n      <>\n        <ConnectedHeader home={true} user={this.props.user} />\n        {studyList}\n      </>\n    );\n  }\n}\n\nexport default withRouter(withTranslation('Common')(StudyListWithData));\n","import { connect } from 'react-redux';\n\nimport StudyListWithData from './StudyListWithData.js';\n\nconst isActive = a => a.active === true;\n\nconst mapStateToProps = state => {\n  const activeServer = state.servers.servers.find(isActive);\n\n  return {\n    server: activeServer,\n    user: state.oidc.user,\n  };\n};\n\nconst ConnectedStudyList = connect(\n  mapStateToProps,\n  null\n)(StudyListWithData);\n\nexport default ConnectedStudyList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport queryString from 'query-string';\nimport ConnectedStudyList from './ConnectedStudyList';\n\n// TODO: Move to react-viewerbase\n\nfunction toLowerCaseFirstLetter(word) {\n  return word[0].toLowerCase() + word.slice(1);\n}\n\nfunction getFilters({ search }) {\n  const searchParameters = queryString.parse(search);\n  const filters = {};\n\n  Object.entries(searchParameters).forEach(([key, value]) => {\n    filters[toLowerCaseFirstLetter(key)] = value;\n  });\n\n  return filters;\n}\n\nfunction StudyListRouting({ location }) {\n  const filters = location ? getFilters(location) : undefined;\n\n  return <ConnectedStudyList filters={filters} />;\n}\n\nStudyListRouting.propTypes = {\n  location: PropTypes.shape({\n    search: PropTypes.string,\n  }).isRequired,\n};\n\nexport default withRouter(StudyListRouting);\n","import React, { Component } from 'react';\nimport { log, metadata, studies, utils } from 'ohif-core';\n\nimport PropTypes from 'prop-types';\nimport Viewer from '../connectedComponents/Viewer';\nimport { extensionManager } from './../App.js';\nimport qs from 'querystring';\n\nconst { OHIFStudyMetadata } = metadata;\nconst { retrieveStudiesMetadata } = studies;\nconst { studyMetadataManager, updateMetaDataManager } = utils;\n\nclass StandaloneRouting extends Component {\n  state = {\n    studies: null,\n    error: null,\n  };\n\n  static propTypes = {\n    location: PropTypes.object,\n    store: PropTypes.object,\n  };\n\n  static parseQueryAndFetchStudies(query) {\n    return new Promise((resolve, reject) => {\n      const url = query.url;\n\n      if (!url) {\n        reject(new Error('No URL was specified. Use ?url=$yourURL'));\n      }\n\n      // Define a request to the server to retrieve the study data\n      // as JSON, given a URL that was in the Route\n      const oReq = new XMLHttpRequest();\n\n      // Add event listeners for request failure\n      oReq.addEventListener('error', error => {\n        log.warn('An error occurred while retrieving the JSON data');\n        reject(error);\n      });\n\n      // When the JSON has been returned, parse it into a JavaScript Object\n      // and render the OHIF Viewer with this data\n      oReq.addEventListener('load', () => {\n        // Parse the response content\n        // https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/responseText\n        if (!oReq.responseText) {\n          log.warn('Response was undefined');\n          reject(new Error('Response was undefined'));\n        }\n\n        log.info(JSON.stringify(oReq.responseText, null, 2));\n\n        const data = JSON.parse(oReq.responseText);\n        if (data.servers && query.studyInstanceUids) {\n          const server = data.servers.dicomWeb[0];\n          server.type = 'dicomWeb';\n\n          const studyInstanceUids = query.studyInstanceUids.split(';');\n          const seriesInstanceUids = [];\n\n          retrieveStudiesMetadata(\n            server,\n            studyInstanceUids,\n            seriesInstanceUids\n          ).then(\n            studies => {\n              resolve(studies);\n            },\n            error => {\n              reject(error);\n            }\n          );\n        } else {\n          resolve(data.studies);\n        }\n      });\n\n      // Open the Request to the server for the JSON data\n      // In this case we have a server-side route called /api/\n      // which responds to GET requests with the study data\n      log.info(`Sending Request to: ${url}`);\n      oReq.open('GET', url);\n      oReq.setRequestHeader('Accept', 'application/json');\n\n      // Fire the request to the server\n      oReq.send();\n    });\n  }\n\n  async componentDidMount() {\n    try {\n      const query = qs.parse(this.props.location.search);\n      const studies = await StandaloneRouting.parseQueryAndFetchStudies(query);\n\n      studyMetadataManager.purge();\n\n      // Map studies to new format, update metadata manager?\n      const updatedStudies = studies.map(study => {\n        const studyMetadata = new OHIFStudyMetadata(\n          study,\n          study.studyInstanceUid\n        );\n        const sopClassHandlerModules =\n          extensionManager.modules['sopClassHandlerModule'];\n\n        study.displaySets =\n          study.displaySets ||\n          studyMetadata.createDisplaySets(sopClassHandlerModules);\n        studyMetadata.setDisplaySets(study.displaySets);\n\n        // Updates WADO-RS metaDataManager\n        updateMetaDataManager(study);\n\n        studyMetadataManager.add(studyMetadata);\n\n        return study;\n      });\n\n      this.setState({ studies: updatedStudies });\n    } catch (error) {\n      this.setState({ error });\n    }\n  }\n\n  render() {\n    if (this.state.error) {\n      return <div>Error: {JSON.stringify(this.state.error)}</div>;\n    } else if (!this.state.studies) {\n      return <div>Loading...</div>;\n    }\n\n    return <Viewer studies={this.state.studies} />;\n  }\n}\n\nexport default StandaloneRouting;\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { CallbackComponent } from 'redux-oidc';\n\nclass CallbackPage extends Component {\n  static propTypes = {\n    userManager: PropTypes.object.isRequired,\n    history: PropTypes.object.isRequired,\n  };\n\n  render() {\n    return (\n      <CallbackComponent\n        userManager={this.props.userManager}\n        successCallback={() => {\n          const pathname = sessionStorage.getItem('ohif-redirect-to');\n\n          this.props.history.push(pathname);\n        }}\n        errorCallback={error => {\n          //this.props.history.push(\"/\");\n          throw new Error(error);\n        }}\n      >\n        <div>Redirecting...</div>\n      </CallbackComponent>\n    );\n  }\n}\n\nexport default withRouter(CallbackPage);\n","import React from 'react';\nimport './NotFound.css';\nimport { Link } from 'react-router-dom';\n\nexport default function NotFound() {\n  return (\n    <div className={'not-found'}>\n      <div>\n        <h4>Sorry, this page does not exist.</h4>\n        <h5>\n          <Link to={'/'}>Go back to the Study List</Link>\n        </h5>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\n\nconst Bar = ({ progress, animationDuration }) => (\n  <div\n    style={{\n      background: '#29d',\n      height: 2,\n      left: 0,\n      marginLeft: `${(-1 + progress) * 100}%`,\n      position: 'fixed',\n      top: 0,\n      transition: `margin-left ${animationDuration}ms linear`,\n      width: '100%',\n      zIndex: 1031,\n    }}\n  >\n    <div\n      style={{\n        boxShadow: '0 0 10px #29d, 0 0 5px #29d',\n        display: 'block',\n        height: '100%',\n        opacity: 1,\n        position: 'absolute',\n        right: 0,\n        transform: 'rotate(3deg) translate(0px, -4px)',\n        width: 100,\n      }}\n    />\n  </div>\n);\n\nexport default Bar;\n","import React from 'react';\n\nconst Container = ({ children, isFinished, animationDuration }) => (\n  <div\n    style={{\n      opacity: isFinished ? 0 : 1,\n      pointerEvents: 'none',\n      transition: `opacity ${animationDuration}ms linear`,\n    }}\n  >\n    {children}\n  </div>\n);\n\nexport default Container;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter, matchPath } from 'react-router';\nimport { Route, Switch } from 'react-router-dom';\nimport { NProgress } from '@tanem/react-nprogress';\nimport { CSSTransition } from 'react-transition-group';\nimport { connect } from 'react-redux';\nimport { ViewerbaseDragDropContext } from 'react-viewerbase';\n// import asyncComponent from './components/AsyncComponent.js'\nimport IHEInvokeImageDisplay from './routes/IHEInvokeImageDisplay.js';\nimport ViewerRouting from './routes/ViewerRouting.js';\nimport ViewerLocalFileData from './connectedComponents/ViewerLocalFileData.js';\nimport StudyListRouting from './studylist/StudyListRouting.js';\nimport StandaloneRouting from './routes/StandaloneRouting.js';\nimport CallbackPage from './routes/CallbackPage.js';\nimport NotFound from './routes/NotFound.js';\nimport { Bar, Container } from './components/LoadingBar/';\nimport './OHIFStandaloneViewer.css';\nimport './variables.css';\nimport './theme-tide.css';\n\n// Dynamic Import Routes (CodeSplitting)\n// const IHEInvokeImageDisplay = asyncComponent(() =>\n//   import('./routes/IHEInvokeImageDisplay.js')\n// )\n// const ViewerRouting = asyncComponent(() => import('./routes/ViewerRouting.js'))\n// const StudyListRouting = asyncComponent(() =>\n//   import('./studylist/StudyListRouting.js')\n// )\n// const StandaloneRouting = asyncComponent(() =>\n//   import('./routes/StandaloneRouting.js')\n// )\n// const CallbackPage = asyncComponent(() => import('./CallbackPage.js'))\n//\n\nconst reload = () => window.location.reload();\n\nclass OHIFStandaloneViewer extends Component {\n  state = {\n    isLoading: false,\n  };\n\n  static propTypes = {\n    history: PropTypes.object.isRequired,\n    user: PropTypes.object,\n    setContext: PropTypes.func,\n    userManager: PropTypes.object,\n    location: PropTypes.object,\n  };\n\n  componentDidMount() {\n    this.unlisten = this.props.history.listen((location, action) => {\n      if (this.props.setContext) {\n        this.props.setContext(window.location.pathname);\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.unlisten();\n  }\n\n  render() {\n    const { user, userManager } = this.props;\n\n    const userNotLoggedIn = userManager && (!user || user.expired);\n    if (userNotLoggedIn) {\n      const pathname = this.props.location.pathname;\n\n      if (pathname !== '/callback') {\n        sessionStorage.setItem('ohif-redirect-to', pathname);\n      }\n\n      return (\n        <Switch>\n          <Route exact path=\"/silent-refresh.html\" onEnter={reload} />\n          <Route exact path=\"/logout-redirect.html\" onEnter={reload} />\n          <Route\n            path=\"/callback\"\n            render={() => <CallbackPage userManager={userManager} />}\n          />\n          <Route\n            component={() => {\n              userManager.signinRedirect();\n\n              return null;\n            }}\n          />\n        </Switch>\n      );\n    }\n\n    /**\n     * Note: this approach for routing is caused by the conflict between\n     * react-transition-group and react-router's <Switch> component.\n     *\n     * See http://reactcommunity.org/react-transition-group/with-react-router/\n     */\n    const routes = [\n      {\n        path: '/local',\n        Component: ViewerLocalFileData,\n      },\n      {\n        path: '/viewer',\n        Component: StandaloneRouting,\n      },\n      {\n        path: '/viewer/:studyInstanceUids',\n        Component: ViewerRouting,\n      },\n      {\n        path: '/study/:studyInstanceUids/series/:seriesInstanceUids',\n        Component: ViewerRouting,\n      },\n      {\n        path: '/IHEInvokeImageDisplay',\n        Component: IHEInvokeImageDisplay,\n      },\n    ];\n\n    const showStudyList =\n      window.config.showStudyList !== undefined\n        ? window.config.showStudyList\n        : true;\n    if (showStudyList) {\n      routes.push({\n        path: '/studylist',\n        Component: StudyListRouting,\n      });\n      routes.push({\n        path: '/',\n        Component: StudyListRouting,\n      });\n    }\n\n    const currentPath = this.props.location.pathname;\n    const noMatchingRoutes = !routes.find(r =>\n      matchPath(currentPath, {\n        path: r.path,\n        exact: true,\n      })\n    );\n\n    return (\n      <>\n        <NProgress isAnimating={this.state.isLoading}>\n          {({ isFinished, progress, animationDuration }) => (\n            <Container\n              isFinished={isFinished}\n              animationDuration={animationDuration}\n            >\n              <Bar progress={progress} animationDuration={animationDuration} />\n            </Container>\n          )}\n        </NProgress>\n        <Route exact path=\"/silent-refresh.html\" onEnter={reload} />\n        <Route exact path=\"/logout-redirect.html\" onEnter={reload} />\n        {!noMatchingRoutes &&\n          routes.map(({ path, Component }) => (\n            <Route key={path} exact path={path}>\n              {({ match }) => (\n                <CSSTransition\n                  in={match !== null}\n                  timeout={300}\n                  classNames=\"fade\"\n                  unmountOnExit\n                  onEnter={() => {\n                    this.setState({ isLoading: true });\n                  }}\n                  onEntered={() => {\n                    this.setState({ isLoading: false });\n                  }}\n                >\n                  {match === null ? <></> : <Component match={match} />}\n                </CSSTransition>\n              )}\n            </Route>\n          ))}\n        {noMatchingRoutes && <NotFound />}\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.oidc.user,\n  };\n};\n\nconst ConnectedOHIFStandaloneViewer = connect(\n  mapStateToProps,\n  null\n)(OHIFStandaloneViewer);\n\nexport default ViewerbaseDragDropContext(\n  withRouter(ConnectedOHIFStandaloneViewer)\n);\n","import OHIF from 'ohif-core';\nimport updateTableWithNewMeasurementData from './lib/updateTableWithNewMeasurementData';\n\nfunction getToolLabellingFlowCallback(store) {\n  const setLabellingFlowDataAction = labellingFlowData => ({\n    type: 'SET_LABELLING_FLOW_DATA',\n    labellingFlowData,\n  });\n\n  const setLabellingFlowData = labellingFlowData => {\n    store.dispatch(setLabellingFlowDataAction(labellingFlowData));\n  };\n\n  return function toolLabellingFlowCallback(\n    measurementData,\n    eventData,\n    doneCallback,\n    options = {}\n  ) {\n    const updateLabelling = ({ location, response, description }) => {\n      // Update the measurement data with the labelling parameters\n\n      if (location) {\n        measurementData.location = location;\n      }\n      if (description) {\n        measurementData.description = description;\n      }\n      if (response) {\n        measurementData.response = response;\n      }\n\n      updateTableWithNewMeasurementData(measurementData);\n    };\n\n    const labellingDoneCallback = () => {\n      setLabellingFlowData({ visible: false });\n    };\n\n    const labellingFlowData = {\n      visible: true,\n      eventData,\n      measurementData,\n      skipAddLabelButton: options.skipAddLabelButton,\n      editLocation: options.editLocation,\n      editDescription: options.editDescription,\n      editResponse: options.editResponse,\n      editDescriptionOnDialog: options.editDescriptionOnDialog,\n      labellingDoneCallback,\n      updateLabelling,\n    };\n\n    setLabellingFlowData(labellingFlowData);\n  };\n}\n\nconst resetLabellingAndContextMenuAction = state => ({\n  type: 'RESET_LABELLING_AND_CONTEXT_MENU',\n  state,\n});\n\nconst setToolContextMenuDataAction = (viewportIndex, toolContextMenuData) => ({\n  type: 'SET_TOOL_CONTEXT_MENU_DATA',\n  viewportIndex,\n  toolContextMenuData,\n});\n\nfunction getOnRightClickCallback(store) {\n  const setToolContextMenuData = (viewportIndex, toolContextMenuData) => {\n    store.dispatch(resetLabellingAndContextMenuAction());\n    store.dispatch(\n      setToolContextMenuDataAction(viewportIndex, toolContextMenuData)\n    );\n  };\n\n  const getOnCloseCallback = viewportIndex => {\n    return function onClose() {\n      const toolContextMenuData = {\n        visible: false,\n      };\n\n      store.dispatch(\n        setToolContextMenuDataAction(viewportIndex, toolContextMenuData)\n      );\n    };\n  };\n\n  return function onRightClick(event) {\n    const eventData = event.detail;\n    const viewportIndex = parseInt(eventData.element.dataset.viewportIndex, 10);\n\n    const toolContextMenuData = {\n      eventData,\n      isTouchEvent: false,\n      onClose: getOnCloseCallback(viewportIndex),\n    };\n\n    setToolContextMenuData(viewportIndex, toolContextMenuData);\n  };\n}\n\nfunction getOnTouchPressCallback(store) {\n  const setToolContextMenuData = (viewportIndex, toolContextMenuData) => {\n    store.dispatch(resetLabellingAndContextMenuAction());\n    store.dispatch(\n      setToolContextMenuDataAction(viewportIndex, toolContextMenuData)\n    );\n  };\n\n  const getOnCloseCallback = viewportIndex => {\n    return function onClose() {\n      const toolContextMenuData = {\n        visible: false,\n      };\n\n      store.dispatch(\n        setToolContextMenuDataAction(viewportIndex, toolContextMenuData)\n      );\n    };\n  };\n\n  return function onTouchPress(event) {\n    const eventData = event.detail;\n    const viewportIndex = parseInt(eventData.element.dataset.viewportIndex, 10);\n\n    const toolContextMenuData = {\n      eventData,\n      isTouchEvent: true,\n      onClose: getOnCloseCallback(viewportIndex),\n    };\n\n    setToolContextMenuData(viewportIndex, toolContextMenuData);\n  };\n}\n\nfunction getResetLabellingAndContextMenu(store) {\n  return function resetLabellingAndContextMenu() {\n    store.dispatch(resetLabellingAndContextMenuAction());\n  };\n}\n\nexport default function setupTools(store) {\n  const toolLabellingFlowCallback = getToolLabellingFlowCallback(store);\n  const availableTools = [\n    { name: 'Pan', mouseButtonMasks: [1, 4] },\n    { name: 'Zoom', mouseButtonMasks: [1, 2] },\n    { name: 'Wwwc', mouseButtonMasks: [1] },\n    { name: 'Magnify', mouseButtonMasks: [1] },\n    { name: 'WwwcRegion', mouseButtonMasks: [1] },\n    {\n      name: 'Bidirectional',\n      props: {\n        configuration: {\n          getMeasurementLocationCallback: toolLabellingFlowCallback,\n        },\n      },\n      mouseButtonMasks: [1],\n    },\n    {\n      name: 'Length',\n      props: {\n        configuration: {\n          getMeasurementLocationCallback: toolLabellingFlowCallback,\n        },\n      },\n      mouseButtonMasks: [1],\n    },\n    {\n      name: 'Angle',\n      props: {\n        configuration: {\n          getMeasurementLocationCallback: toolLabellingFlowCallback,\n        },\n      },\n      mouseButtonMasks: [1],\n    },\n    { name: 'StackScroll', mouseButtonMasks: [1] },\n    { name: 'Brush', mouseButtonMasks: [1] },\n    {\n      name: 'FreehandMouse',\n      props: {\n        configuration: {\n          getMeasurementLocationCallback: toolLabellingFlowCallback,\n        },\n      },\n      mouseButtonMasks: [1],\n    },\n    {\n      name: 'EllipticalRoi',\n      props: {\n        configuration: {\n          getMeasurementLocationCallback: toolLabellingFlowCallback,\n        },\n      },\n      mouseButtonMasks: [1],\n    },\n    {\n      name: 'CircleRoi',\n      props: {\n        configuration: {\n          getMeasurementLocationCallback: toolLabellingFlowCallback,\n        },\n      },\n      mouseButtonMasks: [1],\n    },\n    {\n      name: 'RectangleRoi',\n      props: {\n        configuration: {\n          getMeasurementLocationCallback: toolLabellingFlowCallback,\n        },\n      },\n      mouseButtonMasks: [1],\n    },\n    { name: 'DragProbe', mouseButtonMasks: [1] },\n    { name: 'PanMultiTouch' },\n    { name: 'ZoomTouchPinch' },\n    { name: 'StackScrollMouseWheel' },\n    { name: 'StackScrollMultiTouch' },\n  ];\n\n  const onRightClick = getOnRightClickCallback(store);\n  const onTouchPress = getOnTouchPressCallback(store);\n  const onNewImage = getResetLabellingAndContextMenu(store);\n  const onMouseClick = getResetLabellingAndContextMenu(store);\n  const onTouchStart = getResetLabellingAndContextMenu(store);\n  const toolAction = OHIF.redux.actions.setExtensionData('cornerstone', {\n    availableTools,\n    onNewImage,\n    onRightClick,\n    onTouchPress,\n    onTouchStart,\n    onMouseClick,\n  });\n\n  store.dispatch(toolAction);\n}\n","import Hammer from 'hammerjs';\nimport cornerstone from 'cornerstone-core';\nimport cornerstoneMath from 'cornerstone-math';\nimport cornerstoneTools from 'cornerstone-tools';\n\nexport default function(configuration = {}) {\n  // For debugging\n  window.cornerstoneTools = cornerstoneTools;\n\n  cornerstoneTools.external.cornerstone = cornerstone;\n  cornerstoneTools.external.Hammer = Hammer;\n  cornerstoneTools.external.cornerstoneMath = cornerstoneMath;\n  cornerstoneTools.init(configuration);\n\n  // Set the tool font and font size\n  // context.font = \"[style] [variant] [weight] [size]/[line height] [font family]\";\n  const fontFamily =\n    'Roboto, OpenSans, HelveticaNeue-Light, Helvetica Neue Light, Helvetica Neue, Helvetica, Arial, Lucida Grande, sans-serif';\n  cornerstoneTools.textStyle.setFont(`16px ${fontFamily}`);\n\n  // Tool styles/colors\n  cornerstoneTools.toolStyle.setToolWidth(2);\n  cornerstoneTools.toolColors.setToolColor('rgb(255, 255, 0)');\n  cornerstoneTools.toolColors.setActiveColor('rgb(0, 255, 0)');\n\n  cornerstoneTools.store.state.touchProximity = 40;\n}\n","import './config';\n// Imported flat feature since is not transpiled for old browser versions\nimport 'core-js/features/array/flat';\nimport 'core-js/stable';\nimport 'regenerator-runtime/runtime';\n\nimport {\n  CommandsManager,\n  ExtensionManager,\n  HotkeysManager,\n  utils,\n} from 'ohif-core';\nimport React, { Component } from 'react';\nimport {\n  getUserManagerForOpenIdConnectClient,\n  initWebWorkers,\n} from './utils/index.js';\n\nimport { I18nextProvider } from 'react-i18next';\nimport initCornerstoneTools from './initCornerstoneTools.js';\n\n// ~~ EXTENSIONS\nimport { GenericViewerCommands, MeasurementsPanel } from './appExtensions';\nimport OHIFCornerstoneExtension from '@ohif/extension-cornerstone';\nimport OHIFDicomHtmlExtension from '@ohif/extension-dicom-html';\nimport OHIFDicomMicroscopyExtension from '@ohif/extension-dicom-microscopy';\nimport OHIFDicomPDFExtension from '@ohif/extension-dicom-pdf';\nimport OHIFStandaloneViewer from './OHIFStandaloneViewer';\nimport OHIFVTKExtension from '@ohif/extension-vtk';\n// ~~ EXTENSIONS\nimport { OidcProvider } from 'redux-oidc';\nimport PropTypes from 'prop-types';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport WhiteLabellingContext from './WhiteLabellingContext';\nimport { getActiveContexts } from './store/layout/selectors.js';\nimport i18n from '@ohif/i18n';\nimport setupTools from './setupTools.js';\nimport store from './store';\n\n// ~~~~ APP SETUP\ninitCornerstoneTools({\n  globalToolSyncEnabled: true,\n});\n\nconst commandsManagerConfig = {\n  getAppState: () => store.getState(),\n  getActiveContexts: () => getActiveContexts(store.getState()),\n};\n\nconst commandsManager = new CommandsManager(commandsManagerConfig);\nconst hotkeysManager = new HotkeysManager(commandsManager);\nconst extensionManager = new ExtensionManager({ commandsManager });\n\n// CornerstoneTools and labeling/measurements?\nsetupTools(store);\n// ~~~~ END APP SETUP\n\n/** TODO: extensions should be passed in as prop as soon as we have the extensions as separate packages and then registered by ExtensionsManager */\nextensionManager.registerExtensions([\n  // Core\n  GenericViewerCommands,\n  MeasurementsPanel,\n  //\n  OHIFCornerstoneExtension,\n  OHIFVTKExtension,\n  OHIFDicomPDFExtension,\n  OHIFDicomHtmlExtension,\n  OHIFDicomMicroscopyExtension,\n]);\n\n// Must run after extension commands are registered\nif (window.config.hotkeys) {\n  hotkeysManager.setHotkeys(window.config.hotkeys, true);\n}\n\n// TODO[react] Use a provider when the whole tree is React\nwindow.store = store;\n\nfunction handleServers(servers) {\n  if (servers) {\n    utils.addServers(servers, store);\n  }\n}\n\nclass App extends Component {\n  static propTypes = {\n    routerBasename: PropTypes.string.isRequired,\n    relativeWebWorkerScriptsPath: PropTypes.string.isRequired,\n    servers: PropTypes.object.isRequired,\n    oidc: PropTypes.array,\n    whiteLabelling: PropTypes.object,\n  };\n\n  static defaultProps = {\n    whiteLabelling: {},\n    oidc: [],\n  };\n\n  constructor(props) {\n    super(props);\n\n    if (this.props.oidc.length) {\n      const firstOpenIdClient = this.props.oidc[0];\n\n      this.userManager = getUserManagerForOpenIdConnectClient(\n        store,\n        firstOpenIdClient\n      );\n    }\n    handleServers(this.props.servers);\n    initWebWorkers(\n      this.props.routerBasename,\n      this.props.relativeWebWorkerScriptsPath\n    );\n  }\n\n  render() {\n    const userManager = this.userManager;\n\n    if (userManager) {\n      return (\n        <Provider store={store}>\n          <I18nextProvider i18n={i18n}>\n            <OidcProvider store={store} userManager={userManager}>\n              <Router basename={this.props.routerBasename}>\n                <WhiteLabellingContext.Provider\n                  value={this.props.whiteLabelling}\n                >\n                  <OHIFStandaloneViewer userManager={userManager} />\n                </WhiteLabellingContext.Provider>\n              </Router>\n            </OidcProvider>\n          </I18nextProvider>\n        </Provider>\n      );\n    }\n\n    return (\n      <Provider store={store}>\n        <I18nextProvider i18n={i18n}>\n          <Router basename={this.props.routerBasename}>\n            <WhiteLabellingContext.Provider value={this.props.whiteLabelling}>\n              <OHIFStandaloneViewer />\n            </WhiteLabellingContext.Provider>\n          </Router>\n        </I18nextProvider>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n\n// Make our managers accessible\nexport { commandsManager, extensionManager, hotkeysManager };\n","import cornerstoneWADOImageLoader from 'cornerstone-wado-image-loader';\n\n/**\n *\n * @param {String} baseDirectory\n * @param {String} webWorkScriptsPath\n */\nexport default function initWebWorkers(\n  baseDirectory = '/',\n  webWorkScriptsPath = ''\n) {\n  let scriptsPath = `${window.location.protocol}//${\n    window.location.host\n  }${baseDirectory}${webWorkScriptsPath}`;\n\n  // Ensure the last character is a slash\n  if (scriptsPath[scriptsPath.length - 1] !== '/') {\n    scriptsPath += '/';\n  }\n  \n  const config = {\n    maxWebWorkers: Math.max(navigator.hardwareConcurrency - 1, 1),\n    startWebWorkersOnDemand: true,\n    webWorkerPath: `${scriptsPath}cornerstoneWADOImageLoaderWebWorker.min.js`,\n    taskConfiguration: {\n      decodeTask: {\n        loadCodecsOnStartup: true,\n        initializeCodecsOnStartup: false,\n        codecsPath: `${scriptsPath}cornerstoneWADOImageLoaderCodecs.min.js`,\n        usePDFJS: false,\n        strict: false,\n      },\n    },\n  };\n\n  cornerstoneWADOImageLoader.webWorkerManager.initialize(config);\n}\n","/**\n * Entry point for development and production PWA builds.\n * Packaged (NPM) builds go through `index_publish.js`\n */\nimport App from './App.js';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nexport { App };\n\nwindow.config = window.config || {};\nconst applicationDefaults = {\n  routerBasename: '/',\n  relativeWebWorkerScriptsPath: '',\n};\nconst applicationProps = Object.assign({}, applicationDefaults, window.config);\nconst app = React.createElement(App, applicationProps, null);\n\nReactDOM.render(app, document.getElementById('root'));\n\n/*\nExample config with OIDC\n*/\n// Uncomment the next two blocks, comment out the config without OIDC\n// Try going to:\n// http://localhost:5000/viewer/1.2.276.0.7230010.3.1.2.0.94237.1537373823.634387 //PDF\n// http://localhost:5000/viewer/1.3.6.1.4.1.25403.345050719074.3824.20170126082328.1\n// http://ohif-viewer-react.s3-website-us-east-1.amazonaws.com/viewer/1.3.6.1.4.1.25403.345050719074.3824.20170126082328.1\n/*props.servers = {\n  dicomWeb: [\n    {\n      name: 'DCM4CHEE',\n      wadoUriRoot:\n        'https://cancer.crowds-cure.org/dcm4chee-arc/aets/DCM4CHEE/wado',\n      qidoRoot: 'https://cancer.crowds-cure.org/dcm4chee-arc/aets/DCM4CHEE/rs',\n      wadoRoot: 'https://cancer.crowds-cure.org/dcm4chee-arc/aets/DCM4CHEE/rs',\n      qidoSupportsIncludeField: true,\n      imageRendering: 'wadors',\n      thumbnailRendering: 'wadors',\n      requestOptions: {\n        requestFromBrowser: true\n      }\n    }\n  ]\n};\n\nprops.oidc = [\n  {\n    authServerUrl: 'https://cancer.crowds-cure.org/auth/realms/dcm4che',\n    authRedirectUri: rootUrl + '/callback',\n    postLogoutRedirectUri: rootUrl + '/logout-redirect.html',\n    clientId: 'crowds-cure-cancer',\n    responseType: 'id_token token',\n    scope: 'email profile openid',\n    revokeAccessTokenOnSignout: true,\n    extraQueryParams: {\n      kc_idp_hint: 'crowds-cure-cancer-auth0-oidc',\n      client_id: 'crowds-cure-cancer'\n    }\n  }\n];*/\n\n/* props.servers = {\n  dicomWeb: [\n    {\n      name: 'DCM4CHEE',\n      wadoUriRoot:\n        'https://k8s-testing.ohif.org/dcm4chee-arc/aets/DCM4CHEE/wado',\n      qidoRoot: 'https://k8s-testing.ohif.org/dcm4chee-arc/aets/DCM4CHEE/rs',\n      wadoRoot: 'https://k8s-testing.ohif.org/dcm4chee-arc/aets/DCM4CHEE/rs',\n      qidoSupportsIncludeField: true,\n      imageRendering: 'wadors',\n      thumbnailRendering: 'wadors',\n      requestOptions: {\n        requestFromBrowser: true\n      }\n    }\n  ]\n};\n\nprops.oidc = [\n  {\n    authServerUrl: 'https://k8s-testing.ohif.org/auth/realms/dcm4che',\n    authRedirectUri: rootUrl + '/callback',\n    postLogoutRedirectUri: rootUrl + '/logout-redirect.html',\n    clientId: 'ohif-viewer',\n    responseType: 'id_token token',\n    scope: 'email profile openid',\n    revokeAccessTokenOnSignout: true\n  }\n]; */\n\n/*props.servers = {\n  \"dicomWeb\": [\n    {\n      \"name\": \"DCM4CHEE\",\n      \"wadoUriRoot\": \"http://localhost:8080/dcm4chee-arc/aets/DCM4CHEE/wado\",\n      \"qidoRoot\": \"http://localhost:8080/dcm4chee-arc/aets/DCM4CHEE/rs\",\n      \"wadoRoot\": \"http://localhost:8080/dcm4chee-arc/aets/DCM4CHEE/rs\",\n      \"qidoSupportsIncludeField\": true,\n      \"imageRendering\": \"wadors\",\n      \"thumbnailRendering\": \"wadors\",\n      \"requestOptions\": {\n        \"requestFromBrowser\": true,\n        \"auth\": \"admin:admin\"\n      }\n    }\n  ]\n};*/\n\n/*\n/*\"PUBLIC_SETTINGS\": {\n    \"ui\": {\n      \"studyListFunctionsEnabled\": true,\n      \"displaySetNavigationLoopOverSeries\": false,\n      \"displaySetNavigationMultipleViewports\": true,\n      \"autoPositionMeasurementsTextCallOuts\": \"TRLB\"\n    },\n    \"prefetch\": {\n      \"order\": \"topdown\",\n      \"displaySetCount\": 1\n    }\n */\n"],"sourceRoot":""}