/*! cornerstone-tools - 3.16.0 - 2019-07-18 | (c) 2017 Chris Hafey | https://github.com/cornerstonejs/cornerstoneTools */
!function (e, t) { "object" == typeof exports && "object" == typeof module ? module.exports = t() : "function" == typeof define && define.amd ? define("cornerstone-tools", [], t) : "object" == typeof exports ? exports["cornerstone-tools"] = t() : e.cornerstoneTools = t() }(window, function () { return function (e) { var t = {}; function n(a) { if (t[a]) return t[a].exports; var o = t[a] = { i: a, l: !1, exports: {} }; return e[a].call(o.exports, o, o.exports, n), o.l = !0, o.exports } return n.m = e, n.c = t, n.d = function (e, t, a) { n.o(e, t) || Object.defineProperty(e, t, { configurable: !1, enumerable: !0, get: a }) }, n.r = function (e) { Object.defineProperty(e, "__esModule", { value: !0 }) }, n.n = function (e) { var t = e && e.__esModule ? function () { return e.default } : function () { return e }; return n.d(t, "a", t), t }, n.o = function (e, t) { return Object.prototype.hasOwnProperty.call(e, t) }, n.p = "", n(n.s = 11) }([function (e, t) { e.exports = function (e, t) { if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function") } }, function (e, t) { e.exports = function (e) { if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return e } }, function (e, t) { function n(e, t) { for (var n = 0; n < t.length; n++) { var a = t[n]; a.enumerable = a.enumerable || !1, a.configurable = !0, "value" in a && (a.writable = !0), Object.defineProperty(e, a.key, a) } } e.exports = function (e, t, a) { return t && n(e.prototype, t), a && n(e, a), e } }, function (e, t, n) { var a = n(20); e.exports = function (e, t) { if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function"); e.prototype = Object.create(t && t.prototype, { constructor: { value: e, writable: !0, configurable: !0 } }), t && a(e, t) } }, function (e, t) { function n(t) { return e.exports = n = Object.setPrototypeOf ? Object.getPrototypeOf : function (e) { return e.__proto__ || Object.getPrototypeOf(e) }, n(t) } e.exports = n }, function (e, t, n) { var a = n(6), o = n(1); e.exports = function (e, t) { return !t || "object" !== a(t) && "function" != typeof t ? o(e) : t } }, function (e, t) { function n(e) { return (n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (e) { return typeof e } : function (e) { return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e })(e) } function a(t) { return "function" == typeof Symbol && "symbol" === n(Symbol.iterator) ? e.exports = a = function (e) { return n(e) } : e.exports = a = function (e) { return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : n(e) }, a(t) } e.exports = a }, function (e, t, n) { var a = n(16), o = n(15), i = n(14); e.exports = function (e) { return a(e) || o(e) || i() } }, function (e, t, n) { (function (a) { t.log = function (...e) { return "object" == typeof console && console.log && console.log(...e) }, t.formatArgs = function (t) { if (t[0] = (this.useColors ? "%c" : "") + this.namespace + (this.useColors ? " %c" : " ") + t[0] + (this.useColors ? "%c " : " ") + "+" + e.exports.humanize(this.diff), !this.useColors) return; const n = "color: " + this.color; t.splice(1, 0, n, "color: inherit"); let a = 0, o = 0; t[0].replace(/%[a-zA-Z%]/g, e => { "%%" !== e && "%c" === e && (o = ++a) }), t.splice(o, 0, n) }, t.save = function (e) { try { e ? t.storage.setItem("debug", e) : t.storage.removeItem("debug") } catch (e) { } }, t.load = function () { let e; try { e = t.storage.getItem("debug") } catch (e) { } !e && void 0 !== a && "env" in a && (e = a.env.DEBUG); return e }, t.useColors = function () { if ("undefined" != typeof window && window.process && ("renderer" === window.process.type || window.process.__nwjs)) return !0; if ("undefined" != typeof navigator && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/)) return !1; return "undefined" != typeof document && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || "undefined" != typeof window && window.console && (window.console.firebug || window.console.exception && window.console.table) || "undefined" != typeof navigator && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31 || "undefined" != typeof navigator && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/) }, t.storage = function () { try { return localStorage } catch (e) { } }(), t.colors = ["#0000CC", "#0000FF", "#0033CC", "#0033FF", "#0066CC", "#0066FF", "#0099CC", "#0099FF", "#00CC00", "#00CC33", "#00CC66", "#00CC99", "#00CCCC", "#00CCFF", "#3300CC", "#3300FF", "#3333CC", "#3333FF", "#3366CC", "#3366FF", "#3399CC", "#3399FF", "#33CC00", "#33CC33", "#33CC66", "#33CC99", "#33CCCC", "#33CCFF", "#6600CC", "#6600FF", "#6633CC", "#6633FF", "#66CC00", "#66CC33", "#9900CC", "#9900FF", "#9933CC", "#9933FF", "#99CC00", "#99CC33", "#CC0000", "#CC0033", "#CC0066", "#CC0099", "#CC00CC", "#CC00FF", "#CC3300", "#CC3333", "#CC3366", "#CC3399", "#CC33CC", "#CC33FF", "#CC6600", "#CC6633", "#CC9900", "#CC9933", "#CCCC00", "#CCCC33", "#FF0000", "#FF0033", "#FF0066", "#FF0099", "#FF00CC", "#FF00FF", "#FF3300", "#FF3333", "#FF3366", "#FF3399", "#FF33CC", "#FF33FF", "#FF6600", "#FF6633", "#FF9900", "#FF9933", "#FFCC00", "#FFCC33"], e.exports = n(18)(t); const { formatters: o } = e.exports; o.j = function (e) { try { return JSON.stringify(e) } catch (e) { return "[UnexpectedJSONParseError]: " + e.message } } }).call(this, n(19)) }, function (e, t, n) { e.exports = n(13) }, function (e, t) { function n(e, t, n, a, o, i, r) { try { var s = e[i](r), l = s.value } catch (e) { return void n(e) } s.done ? t(l) : Promise.resolve(l).then(a, o) } e.exports = function (e) { return function () { var t = this, a = arguments; return new Promise(function (o, i) { var r = e.apply(t, a); function s(e) { n(r, o, i, s, l, "next", e) } function l(e) { n(r, o, i, s, l, "throw", e) } s(void 0) }) } } }, function (e, t, n) { "use strict"; n.r(t); var a = {}; n.d(a, "angleCursor", function () { return Vt }), n.d(a, "arrowAnnotateCursor", function () { return qt }), n.d(a, "bidirectionalCursor", function () { return zt }), n.d(a, "cobbAngleCursor", function () { return jt }), n.d(a, "circleRoiCursor", function () { return Wt }), n.d(a, "ellipticalRoiCursor", function () { return Gt }), n.d(a, "freehandMouseCursor", function () { return Yt }), n.d(a, "freehandSculpterMouseCursor", function () { return Xt }), n.d(a, "lengthCursor", function () { return Kt }), n.d(a, "probeCursor", function () { return Zt }), n.d(a, "rectangleRoiCursor", function () { return $t }), n.d(a, "textMarkerCursor", function () { return Jt }), n.d(a, "crosshairsCursor", function () { return Qt }), n.d(a, "eraserCursor", function () { return en }), n.d(a, "magnifyCursor", function () { return tn }), n.d(a, "panCursor", function () { return nn }), n.d(a, "rotateCursor", function () { return an }), n.d(a, "stackScrollCursor", function () { return on }), n.d(a, "wwwcRegionCursor", function () { return rn }), n.d(a, "wwwcCursor", function () { return sn }), n.d(a, "zoomCursor", function () { return ln }); var o = n(0), i = n.n(o), r = n(2), s = n.n(r), l = n(5), c = n.n(l), u = n(4), d = n.n(u), h = n(3), v = n.n(h), g = window.cornerstone, f = window.cornerstoneMath, m = window.Hammer, p = { set cornerstone(e) { g = e }, get cornerstone() { return g }, set cornerstoneMath(e) { f = e }, get cornerstoneMath() { return f }, set Hammer(e) { m = e }, get Hammer() { return m } }, y = n(6), x = n.n(y), T = { MOUSE_DOWN: "cornerstonetoolsmousedown", MOUSE_UP: "cornerstonetoolsmouseup", MOUSE_DOWN_ACTIVATE: "cornerstonetoolsmousedownactivate", MOUSE_DRAG: "cornerstonetoolsmousedrag", MOUSE_MOVE: "cornerstonetoolsmousemove", MOUSE_CLICK: "cornerstonetoolsmouseclick", MOUSE_DOUBLE_CLICK: "cornerstonetoolsmousedoubleclick", MOUSE_WHEEL: "cornerstonetoolsmousewheel", TOUCH_START: "cornerstonetoolstouchstart", TOUCH_START_ACTIVE: "cornerstonetoolstouchstartactive", TOUCH_END: "cornerstonetoolstouchend", TOUCH_DRAG: "cornerstonetoolstouchdrag", TOUCH_DRAG_END: "cornerstonetoolstouchdragend", TOUCH_PINCH: "cornerstonetoolstouchpinch", TOUCH_ROTATE: "cornerstonetoolstouchrotate", TOUCH_PRESS: "cornerstonetoolstouchpress", TAP: "cornerstonetoolstap", DOUBLE_TAP: "cornerstonetoolsdoubletap", MULTI_TOUCH_START: "cornerstonetoolsmultitouchstart", MULTI_TOUCH_START_ACTIVE: "cornerstonetoolsmultitouchstartactive", MULTI_TOUCH_DRAG: "cornerstonetoolsmultitouchdrag", KEY_DOWN: "cornerstonetoolskeydown", KEY_UP: "cornerstonetoolskeyup", KEY_PRESS: "cornerstonetoolskeypress", MEASUREMENT_ADDED: "cornerstonetoolsmeasurementadded", MEASUREMENT_MODIFIED: "cornerstonetoolsmeasurementmodified", MEASUREMENT_COMPLETED: "cornerstonetoolsmeasurementcompleted", MEASUREMENT_REMOVED: "cornerstonetoolsmeasurementremoved", TOOL_DEACTIVATED: "cornerstonetoolstooldeactivated", CLIP_STOPPED: "cornerstonetoolsclipstopped", STACK_SCROLL: "cornerstonetoolsstackscroll" }; function C(e, t) { var n, a = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null; return "function" == typeof window.CustomEvent ? n = new CustomEvent(t, { detail: a, cancelable: !0 }) : (n = document.createEvent("CustomEvent")).initCustomEvent(t, !0, !0, a), e.dispatchEvent(n) } var b = { drawColorId: 0, radius: 10, minRadius: 1, maxRadius: 50, alpha: .4, renderBrushIfHiddenButActive: !0, hiddenButActiveAlpha: .2, colorMapId: "BrushColorMap", visibleSegmentations: {}, imageBitmapCache: {}, segmentationMetadata: {} }, E = { radius: function (e) { b.radius = Math.min(Math.max(e, b.minRadius), b.maxRadius) }, brushColorMap: function (e) { var t = p.cornerstone.colors.getColormap(b.colorMapId); t.setNumberOfColors(e.length); for (var n = 0; n < e.length; n++)t.setColor(n, e[n]) }, elementVisible: function (e) { if (p.cornerstone) { var t = p.cornerstone.getEnabledElement(e).uuid, n = p.cornerstone.colors.getColormap(b.colorMapId).getNumberOfColors(); b.visibleSegmentations[t] = []; for (var a = 0; a < n; a++)b.visibleSegmentations[t].push(!0) } }, brushVisibilityForElement: function (e, t) { var n = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2]; b.visibleSegmentations[e] || (b.imageBitmapCache[e] = []), b.visibleSegmentations[e][t] = n }, imageBitmapCacheForElement: function (e, t, n) { b.imageBitmapCache[e] || (b.imageBitmapCache[e] = []), b.imageBitmapCache[e][t] = n }, clearImageBitmapCacheForElement: function (e) { b.imageBitmapCache[e] = [] }, metadata: function (e, t, n) { b.segmentationMetadata[e] || (b.segmentationMetadata[e] = []), b.segmentationMetadata[e][t] = n } }; var M = { state: b, onRegisterCallback: function () { !function () { var e = p.cornerstone.colors.getColormap(b.colorMapId); e.setNumberOfColors(19); for (var t = 0; t < 19; t++)t < w.length ? e.setColor(t, w[t]) : e.setColor(t, k()) }() }, enabledElementCallback: function (e) { E.elementVisible(e) }, getters: { imageBitmapCacheForElement: function (e) { return b.imageBitmapCache[e] ? b.imageBitmapCache[e] : null }, visibleSegmentationsForElement: function (e) { return b.visibleSegmentations[e] ? b.visibleSegmentations[e] : null }, metadata: function (e, t) { if (b.segmentationMetadata[e]) return void 0 !== t ? b.segmentationMetadata[e][t] : b.segmentationMetadata[e] } }, setters: E }, w = [[230, 25, 75, 255], [60, 180, 175, 255], [255, 225, 25, 255], [0, 130, 200, 255], [245, 130, 48, 255], [145, 30, 180, 255], [70, 240, 240, 255], [240, 50, 230, 255], [210, 245, 60, 255], [250, 190, 190, 255], [0, 128, 128, 255], [230, 190, 255, 255], [170, 110, 40, 255], [255, 250, 200, 255], [128, 0, 0, 255], [170, 255, 195, 255], [128, 128, 0, 255], [255, 215, 180, 255], [0, 0, 128, 255]], S = 0; function k() { for (var e = function () { var e = [S]; S < w.length - 1 ? (S++ , e.push(S)) : (S = 0, e.push(S)); return e }(), t = Math.random(), n = [], a = 0; a < 4; a++)n.push(Math.floor(t * w[e[0]][a] + (1 - t) * w[e[1]][a])); return n } var I = { iconSize: 16, viewBox: { x: 16, y: 16 }, mousePoint: { x: 8, y: 8 }, mousePointerGroupString: '\n    <path stroke="ACTIVE_COLOR" d="M8 16L8 0"></path>\n    <path stroke="ACTIVE_COLOR" d="M16 8L0 8"></path>\n  ' }, _ = { globalTools: {}, globalToolChangeHistory: [], enabledElements: [], tools: [], isToolLocked: !1, activeMultiPartTool: null, mousePositionImage: {}, clickProximity: 6, touchProximity: 10, handleRadius: 6, deleteIfHandleOutsideImage: !0, preventHandleOutsideImage: !1, svgCursorUrl: null }, P = { mouseTools: function () { return _.tools.filter(function (e) { return e.supportedInteractionTypes.includes("Mouse") }) }, touchTools: function () { return _.tools.filter(function (e) { return e.supportedInteractionTypes.includes("Touch") }) }, enabledElementByUID: function (e) { return _.enabledElements.find(function (t) { return p.cornerstone.getEnabledElement(t).uuid === e }) } }, O = { brush: M, cursor: { getters: { defaultOptions: function () { return I } }, setters: { defaultOptions: function (e) { Object.assign(I, e) } } }, globalConfiguration: { state: { mouseEnabled: !0, touchEnabled: !0, globalToolSyncEnabled: !1, showSVGCursors: !1 }, setters: {} } }, D = { modules: O, state: _, getters: P }, L = function (e, t) { return _.tools.find(function (n) { return n.element === e && n.name === t }) }, A = O.globalConfiguration; function R(e, t) { if (A.state.showSVGCursors) { var n = t.getIconWithPointerSVG(), a = t.mousePoint, o = window.URL.createObjectURL(n); e.style.cursor = "url('".concat(o, "') ").concat(a, ", auto"), _.svgCursorUrl = o } } function H(e) { A.state.showSVGCursors && U(e, "none") } function U(e, t) { _.svgCursorUrl && window.URL.revokeObjectURL(_.svgCursorUrl), _.svgCursorUrl = null, e.style.cursor = t } var N = n(8), B = n.n(N), F = B()("cornerstoneTools"); var V = function (e) { var t = F.extend(e); return { log: t, warn: t, error: console.error.bind(console) } }, q = function () { var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "".concat("cornerstoneTools", ":*"); return B.a.enable(e) }, z = function () { return B.a.disable() }, j = D.modules.globalConfiguration, W = V("store:setToolMode"), G = function (e, t, n, a) { void 0 === a && Array.isArray(n) && (a = n, n = null); var o = L(e, t); o && (function (e, t, n, a) { t.supportedInteractionTypes.forEach(function (o) { if (void 0 === a || a.includes(o)) { var i = oe[o]; i ? i(t, e, n) : W.warn("Unable to resolve input conflicts for type %s", o) } }), D.state.tools.filter(function (t) { return t.element === e && "active" === t.mode && t.supportedInteractionTypes.length > 0 }).forEach(function (t) { var n = !1; t.supportedInteractionTypes.forEach(function (e) { t.options["is".concat(e, "Active")] && (n = !0) }), n || (W.log("Setting tool %s's to PASSIVE", t.name), J(e, t.name)) }) }(e, o, n, a), o.supportedInteractionTypes.forEach(function (e) { void 0 === a || a.includes(e) ? n["is".concat(e, "Active")] = !0 : n["is".concat(e, "Active")] = !1 }), j.state.showSVGCursors && o.supportedInteractionTypes.includes("Mouse") && function (e, t, n) { var a; a = "number" == typeof t ? [t] : t.mouseButtonMask; a.includes(1) && (n.svgCursor ? R(n.element, n.svgCursor) : n.hideDefaultCursor ? H(e) : function (e) { U(e, "initial") }(e)) }(e, n, o)), ee("active", null, e, t, n) }; var Y = function (e, t, n) { ae("active", e, t, n), D.state.enabledElements.forEach(function (a) { G(a, e, t, n) }) }, X = ee.bind(null, "disabled", null), K = te.bind(null, "disabled", null), Z = ee.bind(null, "enabled", null), $ = te.bind(null, "enabled", null), J = ee.bind(null, "passive", T.TOOL_DEACTIVATED), Q = te.bind(null, "passive", T.TOOL_DEACTIVATED); function ee(e, t, n, a, o) { var i, r, s = L(n, a); s ? (o = ie(o), Array.isArray(o.mouseButtonMask) && 0 !== o.mouseButtonMask.length && Array.isArray(s.options.mouseButtonMask) && (o.mouseButtonMask = (i = o.mouseButtonMask, r = s.options.mouseButtonMask, i.concat(r).reduce(function (e, t) { return -1 === e.indexOf(t) && e.push(t), e }, []))), s.mode = e, s.mergeOptions(o), s["".concat(e, "Callback")] && s["".concat(e, "Callback")](n, o), t && C(n, t, { options: o, toolName: a, type: t })) : W.warn('Unable to find tool "%s" for enabledElement', a) } function te(e, t, n, a) { ae(e, n, a), D.state.enabledElements.forEach(function (o) { ee(e, t, o, n, a) }) } function ne(e, t, n, a) { var o = "is".concat(e, "Active"), i = D.state.tools.find(function (e) { return e.element === n && "active" === e.mode && !0 === e.options[o] }); i && (W.log("Setting tool %s's %s to false", i.name, o), i.options[o] = !1) } function ae(e, t, n, a) { if (D.modules.globalConfiguration.state.globalToolSyncEnabled) { var o = { mode: e, args: [t, n] }; a && o.push(a), D.state.globalToolChangeHistory.push(o); D.state.globalToolChangeHistory.length > 50 && D.state.globalToolChangeHistory.shift(); var i = D.state.globalTools[t]; if (i) if ("active" === e) { var r = function (e, t, n) { void 0 === n && Array.isArray(t) && (n = t, t = null); var a = [], o = D.state.globalTools[e]; if (o) { var i = new o.tool(o.props); i.supportedInteractionTypes.forEach(function (e) { if (void 0 === n || n.includes(e)) if ("Mouse" === e) { var o = ie(t).mouseButtonMask; Array.isArray(o) && o.length > 0 ? o.forEach(function (t) { return a.push("".concat(e, "-").concat(t)) }) : Array.isArray(o) && 0 === o.length && a.push("".concat(e, "-DELETE")) } else "MultiTouch" === e ? a.push("".concat(e, "-").concat(i.configuration.touchPointers)) : a.push(e) }) } return a }(t, n, a); Object.keys(D.state.globalTools).forEach(function (e) { var t = D.state.globalTools[e]; t.activeBindings = t.activeBindings.filter(function (e) { return !r.includes(e) }) }), r.some(function (e) { return e.includes("Mouse-DELETE") }) && (i.activeBindings = i.activeBindings.filter(function (e) { return !e.includes("Mouse") }), r = r.filter(function (e) { return !e.includes("Mouse") })), i.activeBindings = i.activeBindings.concat(r) } else i.activeBindings = []; else W.warn("setToolMode call for tool that's not available globally: ".concat(t)) } } var oe = { Mouse: function (e, t, n) { var a = ie(n).mouseButtonMask; if (Array.isArray(a) && a.length > 0) { var o = D.state.tools.find(function (e) { return e.element === t && "active" === e.mode && !0 === e.options.isMouseActive && Array.isArray(e.options.mouseButtonMask) && e.options.mouseButtonMask.some(function (e) { return a.includes(e) }) }); o && (o.options.mouseButtonMask = o.options.mouseButtonMask.filter(function (e) { return !a.includes(e) }), 0 === o.options.mouseButtonMask.length && (o.options.isMouseActive = !1)) } }, MouseWheel: ne.bind(void 0, "MouseWheel"), Touch: function (e, t, n) { var a = D.state.tools.find(function (e) { return e.element === t && "active" === e.mode && !0 === e.options.isTouchActive }), o = D.state.tools.find(function (e) { return e.element === t && "active" === e.mode && !0 === e.options.isMultiTouchActive && 1 === e.configuration.touchPointers }); a && (W.log("Setting tool %s's isTouchActive to false", a.name), a.options.isTouchActive = !1), o && (W.log("Setting tool %s's isTouchActive to false", o.name), o.options.isMultiTouchActive = !1) }, TouchPinch: ne.bind(void 0, "TouchPinch"), TouchRotate: ne.bind(void 0, "TouchRotate"), DoubleTap: ne.bind(void 0, "DoubleTap"), MultiTouch: function (e, t, n) { var a, o = D.state.tools.find(function (n) { return n.element === t && "active" === n.mode && !0 === n.options.isMultiTouchActive && n.configuration.touchPointers === e.configuration.touchPointers }); 1 === e.configuration.touchPointers && (a = D.state.tools.find(function (e) { return e.element === t && "active" === e.mode && !0 === e.options.isTouchActive })), o && (W.log("Setting tool %s's isMultiTouchActive to false", o.name), o.options.isMultiTouchActive = !1), a && (W.log("Setting tool %s's isTouchActive to false", a.name), a.options.isTouchActive = !1) } }; function ie(e) { return Array.isArray(e) ? e = { mouseButtonMask: e } : e !== Object(e) && (e = { mouseButtonMask: [e] }), e.hasOwnProperty("mouseButtonMask") || (e.mouseButtonMask = []), Array.isArray(e.mouseButtonMask) || (e.mouseButtonMask = [e.mouseButtonMask]), e.mouseButtonMask = e.mouseButtonMask.filter(function (e) { return "number" == typeof e && 0 !== e }), e } var re = { activeOrDisabledBinaryTool: { passiveCallback: function (e) { X(e, this.name) }, enabledCallback: function (e) { G(e, this.name) } }, enabledOrDisabledBinaryTool: { passiveCallback: function (e) { X(e, this.name) }, activeCallback: function (e) { Z(e, this.name) } } }, se = function (e) { return e && "object" === x()(e) && "[object RegExp]" !== Object.prototype.toString.call(e) && "[object Date]" !== Object.prototype.toString.call(e) }, le = function (e, t) { var n; return t && !0 === t.clone && se(e) ? de((n = e, Array.isArray(n) ? [] : {}), e, t) : e }, ce = function (e, t, n) { var a = e.slice(); return t.forEach(function (t, o) { void 0 === a[o] ? a[o] = le(t, n) : se(t) ? a[o] = de(e[o], t, n) : -1 === e.indexOf(t) && a.push(le(t, n)) }), a }, ue = function (e, t, n) { var a = {}; return se(e) && Object.keys(e).forEach(function (t) { a[t] = le(e[t], n) }), Object.keys(t).forEach(function (o) { se(t[o]) && e[o] ? a[o] = de(e[o], t[o], n) : a[o] = le(t[o], n) }), a }, de = function () { var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}, n = arguments.length > 2 ? arguments[2] : void 0, a = Array.isArray(t), o = (n || { arrayMerge: ce }).arrayMerge || ce; return a ? Array.isArray(e) ? o(e, t, n) : le(t, n) : ue(e, t, n) }, he = de, ve = V("tools:base:BaseTool"), ge = function () { function e(t, n) { i()(this, e), this.initialConfiguration = he(n, t); var a = this.initialConfiguration, o = a.name, r = a.strategies, s = a.defaultStrategy, l = a.configuration, c = a.supportedInteractionTypes, u = a.mixins, d = a.svgCursor; this.name = o, this.mode = "disabled", this.element = void 0, this.supportedInteractionTypes = c || [], this.strategies = r || {}, this.defaultStrategy = s || Object.keys(this.strategies)[0] || void 0, this.activeStrategy = this.defaultStrategy, d && (this.svgCursor = d), this._options = {}, this._configuration = Object.assign({}, l), this.updateOnMouseMove = !1, this.hideDefaultCursor = !1, u && u.length && this._applyMixins(u) } return s()(e, [{ key: "mergeOptions", value: function (e) { this._options = Object.assign({}, this._options, e) } }, { key: "clearOptions", value: function () { this._options = {} } }, { key: "applyActiveStrategy", value: function (e) { return this.strategies[this.activeStrategy](e, this.configuration) } }, { key: "_applyMixins", value: function (e) { for (var t = 0; t < e.length; t++) { var n = re["".concat(e[t])]; "object" === x()(n) ? Object.assign(this, n) : ve.warn("".concat(this.name, ": mixin ").concat(re[t], " does not exist.")) } } }, { key: "configuration", get: function () { return this._configuration }, set: function (e) { this._configuration = e } }, { key: "options", get: function () { return this._options } }], [{ key: "configuration", get: function () { } }]), e }(); function fe() { var e = {}; return { get: function (t, n) { var a = p.cornerstone.getEnabledElement(t); if (a.image && !1 !== e.hasOwnProperty(a.image.imageId)) { var o = e[a.image.imageId]; if (!1 !== o.hasOwnProperty(n)) return o[n] } }, add: function (t, n, a) { var o = p.cornerstone.getEnabledElement(t); if (o.image) { !1 === e.hasOwnProperty(o.image.imageId) && (e[o.image.imageId] = {}); var i = e[o.image.imageId]; !1 === i.hasOwnProperty(n) && (i[n] = { data: [] }), i[n].data.push(a) } }, clear: function (t) { var n = p.cornerstone.getEnabledElement(t); n.image && !1 !== e.hasOwnProperty(n.image.imageId) && delete e[n.image.imageId] }, saveImageIdToolState: function (t) { return e[t] }, restoreImageIdToolState: function (t, n) { e[t] = n }, saveToolState: function () { return e }, restoreToolState: function (t) { e = t }, toolState: e } } var me = fe(); function pe(e) { var t = p.cornerstone.getEnabledElement(e); return void 0 === t.toolStateManager && (t.toolStateManager = me), t.toolStateManager } function ye(e, t, n) { pe(e).add(e, t, n), C(e, T.MEASUREMENT_ADDED, { toolType: t, element: e, measurementData: n }) } function xe(e, t) { return pe(e).get(e, t) } function Te(e, t, n) { for (var a = pe(e).get(e, t), o = -1, i = 0; i < a.data.length; i++)a.data[i] === n && (o = i); -1 !== o && (a.data.splice(o, 1), C(e, T.MEASUREMENT_REMOVED, { toolType: t, element: e, measurementData: n })) } function Ce(e, t) { var n = pe(e).get(e, t); void 0 !== n && (n.data = []) } function be(e, t) { p.cornerstone.getEnabledElement(e).toolStateManager = t } var Ee = function (e, t) { if (e.boundingBox) return p.cornerstoneMath.point.insideRect(t, e.boundingBox) }, Me = function (e, t, n, a) { if (e.hasOwnProperty("pointNearHandle")) { if (e.pointNearHandle(t, e, n)) return !0 } else if (!0 === e.hasBoundingBox) { if (Ee(e, n)) return !0 } else { var o = p.cornerstone.pixelToCanvas(t, e); if (p.cornerstoneMath.point.distance(o, n) <= a) return !0 } return !1 }, we = function e(t, n, a, o) { var i; if (n) { if (Array.isArray(n)) for (var r = Object.keys(n), s = 0; s < r.length; s++) { var l = n[r[s]]; if (l.hasOwnProperty("x") && l.hasOwnProperty("y") && Me(l, t, a, o)) { i = l; break } } else if ("object" === x()(n)) for (var c = Object.keys(n), u = 0; u < c.length; u++) { var d = c[u]; if (Array.isArray(n[d])) { if (i = e(t, n[d], a, o)) break } else { var h = n[d]; if (Me(h, t, a, o)) { i = h; break } } } return i } }, Se = function (e, t, n, a) { a || (a = 6); var o = function (e) { var t; return Object.keys(e).forEach(function (n) { var a = e[n]; !0 !== a.active || (t = a) }), t }(t), i = we(e, t, n, a); return o !== i && (void 0 !== i && (i.active = !0), void 0 !== o && (o.active = !1), !0) }; var ke = function (e, t) { var n = e.image, a = { left: 0, top: 0, width: n.width, height: n.height }, o = !1; return Object.keys(t).forEach(function (e) { var n = t[e]; !0 !== n.allowedOutsideImage && !1 === p.cornerstoneMath.point.insideRect(n, a) && (o = !0) }), o }; function Ie(e, t, n) { return Math.min(Math.max(t, e), n) } function _e(e, t) { e.x = Ie(e.x, 0, t.width), e.y = Ie(e.y, 0, t.height) } var Pe = function (e, t, n) { return t.filter(function (t) { return t.element === e && "active" === t.mode && (void 0 === n || t.options["is".concat(n, "Active")]) }) }, Oe = n(1), De = n.n(Oe), Le = (V("baseBrushTool"), D.modules.brush), Ae = Le.state, Re = Le.setters, He = function (e) { function t(e) { var n, a = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}; return i()(this, t), a.configuration || (a.configuration = {}), a.configuration.referencedToolData = "brush", (n = c()(this, d()(t).call(this, e, a))).updateOnMouseMove = !0, n.hideDefaultCursor = !0, n._drawing = !1, n._drawingMouseUpCallback = n._drawingMouseUpCallback.bind(De()(n)), n } return v()(t, e), s()(t, [{ key: "renderBrush", value: function (e) { throw new Error("Method renderBrush not implemented for ".concat(this.name, ".")) } }, { key: "_paint", value: function (e) { throw new Error("Method _paint not implemented for ".concat(this.name, ".")) } }, { key: "mouseDragCallback", value: function (e) { this._startPainting(e) } }, { key: "preMouseDownCallback", value: function (e) { return this._startPainting(e), !0 } }, { key: "_startPainting", value: function (e) { var t = e.detail, n = t.element; this._paint(e), this._drawing = !0, this._startListeningForMouseUp(n), this._lastImageCoords = t.currentPoints.image } }, { key: "mouseMoveCallback", value: function (e) { var t = e.detail.currentPoints; this._lastImageCoords = t.image } }, { key: "passiveCallback", value: function (e) { try { p.cornerstone.updateImage(this.element) } catch (e) { return } } }, { key: "renderToolData", value: function (e) { (function (e, t) { return "active" === L(e, t).mode })(e.detail.element, this.name) && this.renderBrush(e) } }, { key: "_getBrushColor", value: function (e) { var t = p.cornerstone.colors.getColormap(Ae.colorMapId).getColor(e); return this._drawing ? "rgba(".concat(t[[0]], ", ").concat(t[[1]], ", ").concat(t[[2]], ", 1.0 )") : "rgba(".concat(t[[0]], ", ").concat(t[[1]], ", ").concat(t[[2]], ", 0.8 )") } }, { key: "_drawingMouseUpCallback", value: function (e) { var t = e.detail.element; this._drawing = !1, this._mouseUpRender = !0; var n = null, a = D.modules.brush, o = xe(t, this.name) || xe(t, "brush"), i = a.state.drawColorId; o.data && o.data.length > i && (n = o.data[i]); var r = { toolName: this.name, element: t, measurementData: n, evtDetail: e.detail }; C(t, T.MEASUREMENT_COMPLETED, r), this._stopListeningForMouseUp(t) } }, { key: "_startListeningForMouseUp", value: function (e) { e.removeEventListener(T.MOUSE_UP, this._drawingMouseUpCallback), e.removeEventListener(T.MOUSE_CLICK, this._drawingMouseUpCallback), e.addEventListener(T.MOUSE_UP, this._drawingMouseUpCallback), e.addEventListener(T.MOUSE_CLICK, this._drawingMouseUpCallback), p.cornerstone.updateImage(e) } }, { key: "_stopListeningForMouseUp", value: function (e) { e.removeEventListener(T.MOUSE_UP, this._drawingMouseUpCallback), e.removeEventListener(T.MOUSE_CLICK, this._drawingMouseUpCallback), p.cornerstone.updateImage(e) } }, { key: "nextSegmentation", value: function () { var e = this.constructor.getNumberOfColors(), t = Ae.drawColorId + 1; t === e && (t = 0), Ae.drawColorId = t } }, { key: "previousSegmentation", value: function () { var e = this.constructor.getNumberOfColors(), t = Ae.drawColorId - 1; t < 0 && (t = e - 1), Ae.drawColorId = t } }, { key: "increaseBrushSize", value: function () { var e = Ae.radius, t = Math.floor(1.2 * e); t === e && (t += 1), Re.radius(t) } }, { key: "decreaseBrushSize", value: function () { var e = Ae.radius, t = Math.floor(.8 * e); Re.radius(t) } }, { key: "showSegmentationOnElement", value: function (e) { var t = this._getEnabledElement(), n = t.uuid; Re.brushVisibilityForElement(n, e, !0), p.cornerstone.updateImage(t.element) } }, { key: "hideSegmentationOnElement", value: function (e) { var t = this._getEnabledElement(), n = t.uuid; Re.brushVisibilityForElement(n, e, !1), p.cornerstone.updateImage(t.element) } }, { key: "showAllSegmentationsOnElement", value: function () { for (var e = this._getEnabledElement(), t = e.uuid, n = p.cornerstone.colors.getColormap(Ae.colorMapId).getNumberOfColors(), a = 0; a < n; a++)Re.brushVisibilityForElement(t, a, !0); p.cornerstone.updateImage(e.element) } }, { key: "hideAllSegmentationsOnElement", value: function () { for (var e = this._getEnabledElement(), t = e.uuid, n = p.cornerstone.colors.getColormap(Ae.colorMapId).getNumberOfColors(), a = 0; a < n; a++)Re.brushVisibilityForElement(t, a, !1); p.cornerstone.updateImage(e.element) } }, { key: "_getEnabledElement", value: function () { return p.cornerstone.getEnabledElement(this.element) } }, { key: "alpha", get: function () { return Ae.alpha }, set: function (e) { var t = this._getEnabledElement(); Ae.alpha = e, p.cornerstone.updateImage(t.element) } }, { key: "hiddenButActiveAlpha", get: function () { return Ae.hiddenButActiveAlpha }, set: function (e) { var t = this._getEnabledElement(); Ae.hiddenButActiveAlpha = e, p.cornerstone.updateImage(t.element) } }], [{ key: "getNumberOfColors", value: function () { return p.cornerstone.colors.getColormap(Ae.colorMapId).getNumberOfColors() } }, { key: "getReferencedToolDataName", value: function () { return "brush" } }, { key: "invalidateBrushOnEnabledElement", value: function (e) { var t = D.getters.enabledElementByUID(e), n = xe(t, "stack"); if (n) { for (var a = n.data[0].imageIds, o = me.saveToolState(), i = 0; i < a.length; i++) { var r = a[i]; if (o[r] && o[r].brush) for (var s = o[r].brush.data, l = 0; l < s.length; l++)s[l].pixelData && (s[l].invalidated = !0) } p.cornerstone.updateImage(t, !0) } } }, { key: "getDataAsVolume", value: function (e) { var t = D.getters.enabledElementByUID(e), n = xe(t, "stack"); if (n) for (var a = n.data[0].imageIds, o = p.cornerstone.getEnabledElement(t).image, i = { xy: o.columns * o.rows, z: o.rows, xyz: o.columns * o.rows * a.length }, r = me.saveToolState(), s = new ArrayBuffer(i.xyz), l = (new Uint8Array(s), 0); l < a.length; l++) { var c = a[l]; r[c] && r[c].brush && r[c].brush.data[0].pixelData } } }]), t }(ge), Ue = function (e) { return e.filter(function (e) { return !(e.isMultiPartTool || e instanceof et || e instanceof He) }) }; function Ne(e, t) { var n; if ("touch" === (arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : "mouse") ? n = (n = Pe(e, P.touchTools())).filter(function (e) { return e.options.isTouchActive }) : (n = (n = Pe(e, P.mouseTools())).filter(function (e) { return Array.isArray(e.options.mouseButtonMask) && t && e.options.mouseButtonMask.includes(t) && e.options.isMouseActive }), _.isMultiPartToolActive && (n = Ue(n))), 0 !== n.length) return n[0] } var Be = { mouse: [T.MOUSE_DRAG], touch: [T.TOUCH_DRAG] }, Fe = { mouse: [T.MOUSE_UP, T.MOUSE_CLICK], touch: [T.TOUCH_END, T.TOUCH_DRAG_END, T.TOUCH_PINCH, T.TOUCH_PRESS, T.TAP] }, Ve = function (e, t, n, a) { var o = e.element, i = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : {}, r = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : "mouse"; i = Object.assign({ deleteIfHandleOutsideImage: _.deleteIfHandleOutsideImage, preventHandleOutsideImage: _.preventHandleOutsideImage }, i); var s = function (e, t) { var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {}, a = arguments.length > 3 ? arguments[3] : void 0, o = arguments.length > 4 ? arguments[4] : void 0, i = o.detail, r = i.element, s = i.image, l = i.buttons, c = o.detail.deltaPoints.image, u = c.x, d = c.y; t.active = !0, t.invalidated = !0; for (var h = Object.keys(t.handles), v = 0; v < h.length; v++) { var g = h[v], f = t.handles[g]; !0 !== f.movesIndependently && f.hasOwnProperty("x") && f.hasOwnProperty("y") && (f.x += u, f.y += d, n.preventHandleOutsideImage && _e(f, s)) } p.cornerstone.updateImage(r); var m = Ne(r, l, a); m instanceof et && m.updateCachedStats(s, r, t); var y = T.MEASUREMENT_MODIFIED; C(r, y, { toolName: e, element: r, measurementData: t }), o.preventDefault(), o.stopPropagation() }.bind(this, t, n, i, r), l = function e(a) { !function (e, t) { var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {}, a = arguments.length > 3 ? arguments[3] : void 0, o = arguments.length > 4 ? arguments[4] : void 0, i = o.dragHandler, r = o.upOrEndHandler, s = arguments.length > 5 ? arguments[5] : void 0, l = s.detail, c = s.detail.element; t.active = !1, t.invalidated = !0, _.isToolLocked = !1, Be[a].forEach(function (e) { c.removeEventListener(e, i) }), Fe[a].forEach(function (e) { c.removeEventListener(e, r) }), n.deleteIfHandleOutsideImage && ke(l, t.handles) && Te(c, e, t); "function" == typeof n.doneMovingCallback && n.doneMovingCallback(); p.cornerstone.updateImage(c) }(t, n, i, r, { dragHandler: s, upOrEndHandler: e }, a) }; n.active = !0, _.isToolLocked = !0, Be[r].forEach(function (e) { o.addEventListener(e, s) }), Fe[r].forEach(function (e) { o.addEventListener(e, l) }) }; var qe = { value: !1 }, ze = { mouse: [T.MOUSE_DRAG], touch: [T.TOUCH_DRAG] }, je = { mouse: [T.MOUSE_UP, T.MOUSE_CLICK], touch: [T.TOUCH_END, T.TOUCH_DRAG_END, T.TOUCH_PINCH, T.TOUCH_PRESS, T.TAP] }, We = function (e, t, n, a) { var o = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : {}, i = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : "mouse"; o = Object.assign({ deleteIfHandleOutsideImage: _.deleteIfHandleOutsideImage, preventHandleOutsideImage: _.preventHandleOutsideImage }, o); var r = e.element, s = function (e, t, n, a, o, i) { var r = i.detail, s = r.image, l = r.currentPoints, c = r.element, u = r.buttons, d = l.page, h = p.cornerstone.pageToPixel(c, d.x, "touch" === o ? d.y + -57 : d.y); qe.value = !1, n.active = !0, n.hasMoved = !0, n.x = h.x, n.y = h.y, t.invalidated = !0, a.preventHandleOutsideImage && _e(n, s); p.cornerstone.updateImage(c); var v = Ne(c, u, o); v instanceof et && v.updateCachedStats(s, c, t); var g = T.MEASUREMENT_MODIFIED; C(c, g, { toolName: e, element: c, measurementData: t }) }.bind(this, t, n, a, o, i), l = function r(l) { !function (e, t, n, a) { var o = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : {}, i = arguments.length > 5 ? arguments[5] : void 0, r = arguments.length > 6 ? arguments[6] : void 0, s = r.dragHandler, l = r.upOrEndHandler, c = arguments.length > 7 ? arguments[7] : void 0, u = t.currentPoints.image, d = c.detail.element; a.active = !1, n.active = !1, n.invalidated = !0, _.isToolLocked = !1, qe.value = !1, ze[i].forEach(function (e) { d.removeEventListener(e, s) }), je[i].forEach(function (e) { d.removeEventListener(e, l) }), o.deleteIfHandleOutsideImage && ke(t, n.handles) && Te(d, e, n); c.type === T.TOUCH_PRESS && (c.detail.handlePressed = n, a.x = u.x, a.y = u.y); "function" == typeof o.doneMovingCallback && o.doneMovingCallback(); p.cornerstone.updateImage(d) }(t, e, n, a, o, i, { dragHandler: s, upOrEndHandler: r }, l) }; if (a.active = !0, n.active = !0, _.isToolLocked = !0, ze[i].forEach(function (e) { r.addEventListener(e, s) }), je[i].forEach(function (e) { r.addEventListener(e, l) }), "touch" === i) { qe.value = !0; var c = p.cornerstone.getEnabledElement(r), u = { x: e.currentPoints.page.x, y: e.currentPoints.page.y + -57 }, d = p.cornerstone.pageToPixel(r, u.x, u.y); !function e(t, n, a, o) { if (!n.value) return; var i = Math.abs(t.y - o.y); var r = i / 10; if (i < 1) return t.y = o.y, void (n.value = !1); t.y > o.y ? t.y -= r : t.y < o.y && (t.y += r); p.cornerstone.updateImage(a.element); p.cornerstone.requestAnimationFrame(function () { e(t, n, a, o) }) }(a, qe, c, d) } }; var Ge = { mouse: [T.MOUSE_MOVE, T.MOUSE_DRAG], touch: [T.TOUCH_DRAG] }, Ye = { mouse: [T.MOUSE_UP, T.MOUSE_CLICK], touch: [T.TOUCH_END, T.TOUCH_PINCH, T.TAP] }, Xe = function (e, t, n, a, o) { var i = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : "mouse"; o = Object.assign({ deleteIfHandleOutsideImage: _.deleteIfHandleOutsideImage, preventHandleOutsideImage: _.preventHandleOutsideImage }, o); var r = e.element; n.active = !0, a.active = !0, _.isToolLocked = !0; var s = function (e, t, n, a, o, i) { var r = i.detail, s = r.currentPoints, l = r.image, c = r.element, u = r.buttons, d = s.page, h = p.cornerstone.pageToPixel(c, "touch" === o ? d.x + -57 : d.x, "touch" === o ? d.y + -57 : d.y); t.invalidated = !0, n.active = !0, n.x = h.x, n.y = h.y, a && a.preventHandleOutsideImage && _e(n, l); p.cornerstone.updateImage(c); var v = Ne(c, u, o); v instanceof et && v.updateCachedStats(l, c, t); var g = T.MEASUREMENT_MODIFIED; C(c, g, { toolName: e, element: c, measurementData: t }) }.bind(this, t, n, a, o, i), l = function e(r) { !function (e, t, n, a, o, i, r) { var s = i.moveHandler, l = i.moveEndHandler, c = r.detail, u = c.element, d = c.currentPoints.page, h = p.cornerstone.pageToPixel(u, "touch" === o ? d.x + -57 : d.x, "touch" === o ? d.y + -57 : d.y); if (t.active = !1, t.invalidated = !0, n.active = !1, n.x = h.x, n.y = h.y, _.isToolLocked = !1, Ge[o].forEach(function (e) { u.removeEventListener(e, s) }), Ye[o].forEach(function (e) { u.removeEventListener(e, l) }), u.removeEventListener(T.TOUCH_START, Ke), r.type === T.TOUCH_PINCH || r.type === T.TOUCH_PRESS) return n.active = !1, p.cornerstone.updateImage(u), void ("function" == typeof a.doneMovingCallback && a.doneMovingCallback()); a.preventHandleOutsideImage && _e(n, r.detail.image); a.deleteIfHandleOutsideImage && ke(r.detail, t.handles) && Te(u, e, t); "function" == typeof a.doneMovingCallback && a.doneMovingCallback(); p.cornerstone.updateImage(u) }(t, n, a, o, i, { moveHandler: s, moveEndHandler: e }, r) }; Ge[i].forEach(function (e) { r.addEventListener(e, s) }), Ye[i].forEach(function (e) { r.addEventListener(e, l) }), r.addEventListener(T.TOUCH_START, Ke) }; function Ke(e) { return e.stopImmediatePropagation(), !1 } var Ze = function (e, t, n, a, o) { n.active = !0, _.isToolLocked = !0, We(e.detail, t.name, n, a, t.options, o), e.stopImmediatePropagation(), e.stopPropagation(), e.preventDefault() }, $e = function (e, t, n, a) { for (var o = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : "mouse", i = 0; i < t.data.length; i++) { var r = t.data[i], s = we(e, r.handles, a, "mouse" === o ? _.clickProximity : _.touchProximity); if (s) return { handle: s, data: r } } }, Je = function (e, t, n) { var a = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : "mouse", o = Object.assign({}, { doneMovingCallback: function () { n.active = !1, _.isToolLocked = !1 } }, t.options); n.active = !0, _.isToolLocked = !0, Ve(e.detail, t.name, n, null, o, a), e.stopImmediatePropagation(), e.stopPropagation(), e.preventDefault() }, Qe = V("baseAnnotationTool"), et = function (e) { function t() { var e; i()(this, t); for (var n = arguments.length, a = new Array(n), o = 0; o < n; o++)a[o] = arguments[o]; return c()(this, (e = d()(t)).call.apply(e, [this].concat(a))) } return v()(t, e), s()(t, [{ key: "createNewMeasurement", value: function (e) { throw new Error("Method createNewMeasurement not implemented for ".concat(this.name, ".")) } }, { key: "pointNearTool", value: function (e, t, n) { arguments.length > 3 && void 0 !== arguments[3] && arguments[3]; throw new Error("Method pointNearTool not implemented for ".concat(this.name, ".")) } }, { key: "distanceFromPoint", value: function (e, t, n) { throw new Error("Method distanceFromPoint not implemented for ".concat(this.name, ".")) } }, { key: "renderToolData", value: function (e) { throw new Error("renderToolData not implemented for ".concat(this.name, ".")) } }, { key: "mouseMoveCallback", value: function (e) { for (var t = e.detail, n = t.element, a = t.currentPoints.canvas, o = xe(n, this.name), i = !1, r = 0; r < o.data.length; r++) { var s = o.data[r]; !0 === Se(n, s.handles, a) && (i = !0); var l = this.pointNearTool(n, s, a, "mouse") && !s.active, c = !this.pointNearTool(n, s, a, "mouse") && s.active; (l || c) && (s.active = !s.active, i = !0) } return i } }, { key: "handleSelectedCallback", value: function (e, t, n) { var a = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : "mouse"; Ze(e, this, t, n, a) } }, { key: "toolSelectedCallback", value: function (e, t) { var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : "mouse"; Je(e, this, t, n) } }, { key: "updateCachedStats", value: function (e, t, n) { Qe.warn("updateCachedStats not implemented for ".concat(this.name, ".")) } }]), t }(ge), tt = 1, nt = 2; var at = { setToolWidth: function (e) { tt = e }, getToolWidth: function () { return tt }, setActiveWidth: function (e) { nt = e }, getActiveWidth: function () { return nt } }, ot = "white", it = "greenyellow", rt = "transparent"; var st = { setFillColor: function (e) { rt = e }, getFillColor: function () { return rt }, setToolColor: function (e) { ot = e }, getToolColor: function () { return ot }, setActiveColor: function (e) { it = e }, getActiveColor: function () { return it }, getColorIfActive: function (e) { return e.color ? e.color : e.active ? it : ot } }, lt = function (e, t) { e.save(), t(e), e.restore() }, ct = function (e) { var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}, n = arguments.length > 2 ? arguments[2] : void 0, a = t.color, o = t.lineWidth, i = t.fillStyle, r = t.lineDash; e.beginPath(), e.strokeStyle = a || e.strokeStyle, e.lineWidth = o || void 0 === o && at.getToolWidth() || e.lineWidth, r && e.setLineDash(r), n(e), i && (e.fillStyle = i, e.fill()), e.stroke(), r && e.setLineDash([]) }; function ut(e, t, n, a, o) { var i = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : "pixel"; ct(e, o, function (e) { "pixel" === i && (n = p.cornerstone.pixelToCanvas(t, n), a = p.cornerstone.pixelToCanvas(t, a)), e.moveTo(n.x, n.y), e.lineTo(a.x, a.y) }) } var dt = function (e, t, n, a, o) { var i = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : "pixel"; ct(e, o, function (e) { "pixel" === i && (n = p.cornerstone.pixelToCanvas(t, n), a = a.map(function (e) { return p.cornerstone.pixelToCanvas(t, e) })), e.moveTo(n.x, n.y), a.forEach(function (t) { var n = t.x, a = t.y; e.lineTo(n, a) }) }) }, ht = function (e, t, n, a, o) { var i = Math.atan2(n.y - t.y, n.x - t.x), r = { color: a, lineWidth: o }; ut(e, void 0, t, n, r, "canvas"), r = { color: a, lineWidth: o, fillStyle: a }; var s = [{ x: n.x - 10 * Math.cos(i - Math.PI / 7), y: n.y - 10 * Math.sin(i - Math.PI / 7) }, { x: n.x - 10 * Math.cos(i + Math.PI / 7), y: n.y - 10 * Math.sin(i + Math.PI / 7) }, n]; dt(e, void 0, n, s, r, "canvas") }, vt = function (e, t, n, a, o) { "pixel" === (arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : "pixel") && (n = p.cornerstone.pixelToCanvas(t, n)), ct(e, o, function (e) { e.arc(n.x, n.y, a, 0, 2 * Math.PI) }) }; function gt(e) { var t = p.cornerstoneMath; return e instanceof t.Vector3 ? e : new t.Vector3(e[0], e[1], e[2]) } function ft(e, t) { var n = gt(t.rowCosines), a = gt(t.columnCosines), o = gt(t.imagePositionPatient), i = e.clone().sub(o); return { x: n.dot(i) / t.columnPixelSpacing, y: a.dot(i) / t.rowPixelSpacing } } function mt(e, t) { var n = gt(t.rowCosines), a = gt(t.columnCosines), o = gt(t.imagePositionPatient), i = n.clone().multiplyScalar(e.x); i.multiplyScalar(t.columnPixelSpacing); var r = a.clone().multiplyScalar(e.y); r.multiplyScalar(t.rowPixelSpacing); var s = i.add(r); return s.add(o), s } function pt(e, t) { var n = gt(e.rowCosines), a = gt(e.columnCosines), o = gt(e.imagePositionPatient), i = gt(t.rowCosines), r = gt(t.columnCosines), s = gt(t.imagePositionPatient), l = n.clone().cross(a), c = new p.cornerstoneMath.Plane; c.setFromNormalAndCoplanarPoint(l, o); var u = i.clone().cross(r), d = new p.cornerstoneMath.Plane; d.setFromNormalAndCoplanarPoint(u, s); var h = d.clone().intersectPlane(c), v = h.origin, g = h.direction, f = mt({ x: t.columns, y: t.rows }, t), m = s.distanceTo(f), y = new p.cornerstoneMath.Line3; y.start = v, y.end = v.clone().add(g.multiplyScalar(m)); var x = function (e, t) { var n = []; return Object.keys(t).forEach(function (a) { var o = t[a], i = e.intersectLine(o); i && n.push(i) }), n }(y, function (e) { var t = mt({ x: 0, y: 0 }, e), n = mt({ x: e.columns, y: 0 }, e), a = mt({ x: 0, y: e.rows }, e), o = mt({ x: e.columns, y: e.rows }, e); return { top: new p.cornerstoneMath.Line3(t, n), left: new p.cornerstoneMath.Line3(t, a), right: new p.cornerstoneMath.Line3(n, o), bottom: new p.cornerstoneMath.Line3(a, o) } }(t)); if (2 === x.length) return { start: x[0], end: x[1] } } function yt(e, t, n) { var a = n * (Math.PI / 180); return { x: Math.cos(a) * (e.x - t.x) - Math.sin(a) * (e.y - t.y) + t.x, y: Math.sin(a) * (e.x - t.x) + Math.cos(a) * (e.y - t.y) + t.y } } var xt = function (e, t, n, a, o) { var i = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : "pixel", r = arguments.length > 6 && void 0 !== arguments[6] ? arguments[6] : 0; "pixel" === i && (n = p.cornerstone.pixelToCanvas(t, n), a = p.cornerstone.pixelToCanvas(t, a)); var s = p.cornerstone.getViewport(t), l = t.clientWidth, c = t.clientHeight, u = s.scale, d = s.translation, h = s.rotation - r, v = { x: l / 2 + d.x * u, y: c / 2 + d.y * u }; Math.abs(h) > .05 && (n = yt(n, v, -h), a = yt(a, v, -h)); var g = Math.abs(n.x - a.x), f = Math.abs(n.y - a.y), m = Math.min(n.x, a.x), y = Math.min(n.y, a.y), x = { x: m + g / 2, y: y + f / 2 }; Math.abs(h) > .05 && (x = yt(x, v, h)); var T = h * Math.PI / 180; ct(e, o, function (e) { e.ellipse(x.x, x.y, g / 2, f / 2, T, 0, 2 * Math.PI), e.closePath() }) }, Tt = function (e, t, n) { var a = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : {}, o = t.element, i = st.getToolColor(); e.strokeStyle = a.color || i; for (var r = Object.keys(n), s = function (t) { var i = r[t], s = n[i]; if (!0 === s.drawnIndependently) return "continue"; if (!0 === a.drawHandlesIfActive && !s.active) return "continue"; var l = s.active ? at.getActiveWidth() : at.getToolWidth(), c = a.fill; ct(e, { lineWidth: l, fillStyle: c }, function (e) { var t = p.cornerstone.pixelToCanvas(o, s), n = s.radius || a.handleRadius || _.handleRadius; e.arc(t.x, t.y, n, 0, 2 * Math.PI) }) }, l = 0; l < r.length; l++)s(l) }, Ct = function (e, t, n, a, o, i) { var r = e.length > 0 ? p.cornerstoneMath.point.findClosestPoint(e, t) : t, s = [{ x: n.left + n.width / 2, y: n.top }, { x: n.left, y: n.top + n.height / 2 }, { x: n.left + n.width / 2, y: n.top + n.height }, { x: n.left + n.width, y: n.top + n.height / 2 }]; ut(a, void 0, r, p.cornerstoneMath.point.findClosestPoint(s, r), { color: o, lineWidth: i, lineDash: [2, 3] }, "canvas") }, bt = 15, Et = "".concat(bt, "px Arial"), Mt = "transparent"; var wt = { setFont: function (e) { Et = e }, getFont: function () { return Et }, setFontSize: function (e) { bt = e }, getFontSize: function () { return bt }, setBackgroundColor: function (e) { Mt = e }, getBackgroundColor: function () { return Mt } }, St = function (e, t, n, a, o) { var i = wt.getFontSize(); e.font = wt.getFont(), e.textBaseline = "top", e.fillStyle = a, n.forEach(function (n, a) { e.fillText(n, t.left + o, t.top + o + a * (i + o)) }) }, kt = function (e, t, n) { e.fillStyle = n, e.fillRect(t.left, t.top, t.width, t.height) }; function It(e, t, n) { var a = wt.getFont(), o = e.font; a && a !== o && (e.font = a); var i = e.measureText(t).width; return a && a !== o && (e.font = o), i + 2 * n } var _t = function (e, t, n, a, o, i) { "[object Array]" !== Object.prototype.toString.call(t) && (t = [t]); var r = wt.getFontSize(), s = wt.getBackgroundColor(), l = 0; t.forEach(function (t) { var n = It(e, t, 5); l = Math.max(l, n) }); var c = { width: l, height: 5 + t.length * (r + 5) }; return lt(e, function (e) { e.strokeStyle = o, i && i.centering && !0 === i.centering.x && (n -= c.width / 2), i && i.centering && !0 === i.centering.y && (a -= c.height / 2), c.left = n, c.top = a; var r = i && !0 === i.debug ? "#FF0000" : s; kt(e, c, r), St(e, c, t, o, 5) }), c }, Pt = function (e, t, n, a, o, i, r, s, l, c) { var u = p.cornerstone, d = u.pixelToCanvas(t, n); l && (d.x += l); var h = { centering: { x: !1, y: c } }; if (n.boundingBox = _t(e, a, d.x, d.y, r, h), n.hasMoved) { var v = i(o).map(function (e) { return u.pixelToCanvas(t, e) }); Ct(v, d, n.boundingBox, e, r, s) } }, Ot = function (e, t, n, a, o) { var i = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : "pixel", r = arguments.length > 6 && void 0 !== arguments[6] ? arguments[6] : 0; if ("pixel" === i) { var s = p.cornerstone; n = s.pixelToCanvas(t, n), a = s.pixelToCanvas(t, a) } var l = p.cornerstone.getViewport(t), c = t.clientWidth, u = t.clientHeight, d = l.scale, h = l.translation, v = l.rotation - r, g = { x: c / 2 + h.x * d, y: u / 2 + h.y * d }; Math.abs(v) > .05 && (n = yt(n, g, -v), a = yt(a, g, -v)); var f = Math.abs(n.x - a.x), m = Math.abs(n.y - a.y); n = { x: Math.min(n.x, a.x), y: Math.min(n.y, a.y) }, a = { x: n.x + f, y: n.y + m }; var y = { x: n.x + f, y: n.y }, x = { x: n.x, y: n.y + m }; Math.abs(v) > .05 && (n = yt(n, g, v), a = yt(a, g, v), y = yt(y, g, v), x = yt(x, g, v)), ct(e, o, function (e) { e.moveTo(n.x, n.y), e.lineTo(y.x, y.y), e.moveTo(y.x, y.y), e.lineTo(a.x, a.y), e.moveTo(a.x, a.y), e.lineTo(x.x, x.y), e.moveTo(x.x, x.y), e.lineTo(n.x, n.y) }) }, Dt = function (e) { var t = e.getContext("2d"); return t.setTransform(1, 0, 0, 1, 0, 0), t }, Lt = function (e, t) { return void 0 === e ? t : e }, At = function (e) { var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}; t.shadow && (e.shadowColor = Lt(t.shadowColor, "#000000"), e.shadowBlur = Lt(t.shadowBlur, 0), e.shadowOffsetX = Lt(t.shadowOffsetX, 1), e.shadowOffsetY = Lt(t.shadowOffsetY, 1)) }, Rt = function (e, t, n) { if (n.vflip || n.vflip || n.rotation) { var a = { x: t.width / 2 + n.translation.x * n.scale, y: t.height / 2 + n.translation.y * n.scale }; e.translate(a.x, a.y), n.rotation && e.rotate(n.rotation * Math.PI / 180), n.vflip && e.scale(1, -1), n.hflip && e.scale(-1, 1), e.translate(-a.x, -a.y) } }, Ht = function (e) { e.setTransform(1, 0, 0, 1, 0, 0) }, Ut = function (e, t, n, a) { var o = p.cornerstone, i = { start: o.pixelToCanvas(e, t), end: o.pixelToCanvas(e, n) }; return p.cornerstoneMath.lineSegment.distanceToPoint(i, a) }, Nt = function (e, t) { var n = Math.pow(10, t); return Math.round(e * n) / n }, Bt = O.cursor, Ft = function () { function e(t, n) { i()(this, e), this.iconGroupString = t, this.options = Object.assign({}, Bt.getters.defaultOptions(), n) } return s()(e, [{ key: "getIconSVG", value: function () { var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, t = this._generateIconSVGString(e); return new Blob([t], { type: "image/svg+xml" }) } }, { key: "getIconSVGString", value: function () { var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}; return this._generateIconSVGString(e) } }, { key: "getIconWithPointerSVG", value: function () { var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, t = this._generateIconWithPointerSVGString(e); return new Blob([t], { type: "image/svg+xml" }) } }, { key: "getIconWithPointerString", value: function () { var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}; return this._generateIconWithPointerSVGString(e) } }, { key: "_generateIconWithPointerSVGString", value: function () { var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, t = Object.assign({}, this.options, e), n = t.mousePointerGroupString, a = t.iconSize, o = t.viewBox, i = a / Math.max(o.x, o.y), r = 16 + a, s = '\n        <svg\n        data-icon="cursor" role="img" xmlns="http://www.w3.org/2000/svg"\n        width="'.concat(r, '" height="').concat(r, '" viewBox="0 0 ').concat(r, " ").concat(r, '"\n      >\n        <g>\n          ').concat(n, '\n        </g>\n        <g transform="translate(16, 16) scale(').concat(i, ')">\n          ').concat(this.iconGroupString, "\n        </g>\n      </svg>"); return this._injectColors(s, t) } }, { key: "_generateIconSVGString", value: function () { var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, t = Object.assign({}, this.options, e), n = t.iconSize, a = t.viewBox, o = '\n      <svg\n        data-icon="cursor" role="img" xmlns="http://www.w3.org/2000/svg"\n        width="'.concat(n, '" height="').concat(n, '" viewBox="0 0\n        ').concat(a.x, " ").concat(a.y, '"\n      >\n        ').concat(this.iconGroupString, "\n      </svg>"); return this._injectColors(o, t) } }, { key: "_injectColors", value: function (e) { var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}, n = t.activeColor || st.getActiveColor(), a = t.toolColor || st.getToolColor(), o = t.fillColor || st.getFillColor(); return e.replace(/ACTIVE_COLOR/g, "".concat(n)).replace(/TOOL_COLOR/g, "".concat(a)).replace(/FILL_COLOR/g, "".concat(o)) } }, { key: "mousePoint", get: function () { var e = this.options.mousePoint; return "".concat(e.x, " ").concat(e.y) } }]), e }(), Vt = new Ft('<path fill="ACTIVE_COLOR" d="M1203 544q0 13-10 23l-393 393 393 393q10 10 10 23t-10 23l-50\n        50q-10 10-23 10t-23-10l-466-466q-10-10-10-23t10-23l466-466q10-10 23-10t23\n        10l50 50q10 10 10 23z"\n      />', { viewBox: { x: 1792, y: 1792 } }), qt = new Ft('<g id="arrowAnnotate-group" fill="none" stroke-width="1" stroke="ACTIVE_COLOR" stroke-linecap="round" stroke-linejoin="round">\n    <path id="arrowAnnotate-arrow" d="M23,7 l-15,15 M7,17 l0,6 6,0" stroke-width="2" />\n  </g>', { viewBox: { x: 24, y: 24 } }), zt = new Ft('<g fill="ACTIVE_COLOR" stroke-width="3" stroke="ACTIVE_COLOR">\n    <path d="M27.63 3.21L3.12 28.81"></path>\n    <path d="M27.63 15.75L15.27 4.43"></path>\n    <path d="M16.5 4.28C16.5 4.96 15.95 5.51 15.27 5.51C14.59 5.51 14.03 4.96 14.03 4.28C14.03 3.59 14.59 3.04 15.27 3.04C15.95 3.04 16.5 3.59 16.5 4.28Z" ></path>\n    <path d="M28.87 3.19C28.87 3.87 28.31 4.43 27.63 4.43C26.95 4.43 26.4 3.87 26.4 3.19C26.4 2.51 26.95 1.95 27.63 1.95C28.31 1.95 28.87 2.51 28.87 3.19Z"></path>\n    <path d="M28.87 15.75C28.87 16.43 28.31 16.99 27.63 16.99C26.95 16.99 26.4 16.43 26.4 15.75C26.4 15.07 26.95 14.51 27.63 14.51C28.31 14.51 28.87 15.07 28.87 15.75Z"></path>\n    <path d="M4.73 28.44C4.73 29.12 4.17 29.68 3.49 29.68C2.81 29.68 2.25 29.12 2.25 28.44C2.25 27.76 2.81 27.2 3.49 27.2C4.17 27.2 4.73 27.76 4.73 28.44Z"></path>\n  </g>', { viewBox: { x: 48, y: 48 } }), jt = new Ft('<g stroke="ACTIVE_COLOR" stroke-width="3">\n    <path d="M28.59 2.34L3.82 12.32"></path>\n    <path d="M28.59 29.66L3.82 19.68"></path>\n    <path stroke-dasharray="2" fill-opacity="0" d="M12.37\n      23.06C12.67 22.36 12.85 21.93 12.92 21.76C14.6 17.8 14.68 13.35 13.15\n      9.33C13.11 9.24 13.02 9 12.88 8.63">\n    </path>\n  </g>', { viewBox: { x: 32, y: 32 } }), Wt = new Ft('<circle stroke="ACTIVE_COLOR" fill="none" stroke-width="3" cx="16" cy="16" r="14" />', { viewBox: { x: 32, y: 32 } }), Gt = new Ft('<path stroke="ACTIVE_COLOR" fill="none" stroke-width="3" d="M30.74 15.76C30.74 20.99 24.14 25.23 16\n    25.23C7.86 25.23 1.26 20.99 1.26 15.76C1.26 10.54 7.86 6.3 16 6.3C24.14\n    6.3 30.74 10.54 30.74 15.76Z"\n    />', { viewBox: { x: 32, y: 32 } }), Yt = new Ft('\n  <g fill="ACTIVE_COLOR" stroke="ACTIVE_COLOR" stroke-width="2">\n    <ellipse ry="1" rx="1" id="svg_3" cy="4.240343" cx="14.306499"/>\n    <line id="svg_4" y2="3.58462" x2="12.242186" y1="3.997482" x1="13.432202"/>\n    <line id="svg_5" y2="3.268901" x2="10.857882" y1="3.608906" x1="12.387902"/>\n    <line id="svg_6" y2="3.147471" x2="9.740724" y1="3.293187" x1="10.955026"/>\n    <line id="svg_7" y2="3.147471" x2="8.089274" y1="3.196043" x1="9.983585"/>\n    <line id="svg_8" y2="3.268901" x2="6.874972" y1="3.123185" x1="8.307848"/>\n    <line id="svg_9" y2="3.657478" x2="5.587812" y1="3.220329" x1="7.020688"/>\n    <line id="svg_10" y2="4.046054" x2="4.737801" y1="3.560334" x1="5.854959"/>\n    <line id="svg_11" y2="4.337487" x2="4.300652" y1="3.997482" x1="4.834945"/>\n    <line id="svg_12" y2="4.726063" x2="3.88779" y1="4.191771" x1="4.470655"/>\n    <line id="svg_15" y2="5.3575" x2="3.377783" y1="4.604633" x1="3.960648"/>\n    <line id="svg_16" y2="6.183226" x2="2.916348" y1="5.138926" x1="3.547785"/>\n    <line id="svg_17" y2="6.960379" x2="2.770632" y1="5.867507" x1="3.037779"/>\n    <line id="svg_18" y2="7.713246" x2="2.673488" y1="6.741804" x1="2.819204"/>\n    <line id="svg_19" y2="8.684687" x2="2.697774" y1="7.616102" x1="2.673488"/>\n    <line id="svg_20" y2="9.753273" x2="2.892062" y1="8.611829" x1="2.697774"/>\n    <line id="svg_21" y2="10.724714" x2="3.134923" y1="9.534698" x1="2.84349"/>\n    <line id="svg_23" y2="11.647583" x2="3.596357" y1="10.578998" x1="3.086351"/>\n    <line id="svg_25" y2="12.521881" x2="4.276366" y1="11.501867" x1="3.499213"/>\n    <line id="svg_26" y2="13.930471" x2="5.830673" y1="12.376165" x1="4.13065"/>\n    <line id="svg_28" y2="14.707624" x2="7.263549" y1="13.881899" x1="5.733528"/>\n    <line id="svg_29" y2="15.339061" x2="8.963571" y1="14.61048" x1="7.06926"/>\n    <line id="svg_30" y2="15.581921" x2="10.882168" y1="15.314775" x1="8.817855"/>\n    <line id="svg_31" y2="15.460491" x2="12.023612" y1="15.581921" x1="10.785024"/>\n    <line id="svg_33" y2="15.120487" x2="13.092197" y1="15.484777" x1="11.877895"/>\n    <line id="svg_34" y2="14.586194" x2="13.86935" y1="15.217631" x1="12.897909"/>\n    <line id="svg_35" y2="13.833327" x2="14.597931" y1="14.756196" x1="13.699348"/>\n    <line id="svg_37" y2="12.716169" x2="15.180796" y1="13.881899" x1="14.549359"/>\n    <line id="svg_39" y2="11.429009" x2="15.520801" y1="12.813313" x1="15.15651"/>\n    <ellipse ry="1" rx="1" id="svg_40" cy="10.967574" cx="15.520801"/>\n  </g>', { viewBox: { x: 18, y: 18 } }), Xt = new Ft('<g id="icon-freehand-sculpt" fill="none" stroke-width="1.5" stroke="ACTIVE_COLOR" stroke-linecap="round" stroke-linejoin="round">\n      <line id="svg_1" y2="2.559367" x2="10.184807" y1="4.467781" x1="8.81711"/>\n      <line id="svg_4" y2="1.493836" x2="11.727442" y1="2.766112" x1="10.089386"/>\n      <line id="svg_7" y2="1.080346" x2="13.047428" y1="1.748291" x1="11.345759"/>\n      <line id="svg_8" y2="1.000829" x2="14.351511" y1="1.112153" x1="12.77707"/>\n      <line id="svg_9" y2="1.350705" x2="15.242104" y1="0.905408" x1="13.969828"/>\n      <line id="svg_10" y2="2.098167" x2="15.862339" y1="1.14396" x1="14.955842"/>\n      <line id="svg_11" y2="3.195505" x2="16.41896" y1="1.939133" x1="15.766918"/>\n      <line id="svg_12" y2="4.292843" x2="16.530284" y1="2.925147" x1="16.387153"/>\n      <line id="svg_16" y2="5.644637" x2="16.196311" y1="3.831643" x1="16.593898"/>\n      <line id="svg_18" y2="7.266789" x2="15.623787" y1="5.19934" x1="16.275829"/>\n      <line id="svg_19" y2="10.813258" x2="14.526449" y1="6.726071" x1="15.766918"/>\n      <line id="svg_20" y2="5.056209" x2="8.085552" y1="4.181519" x1="8.976145"/>\n      <line id="svg_23" y2="5.326568" x2="7.481221" y1="4.78585" x1="8.403621"/>\n      <line id="svg_24" y2="5.565119" x2="6.749662" y1="5.294761" x1="7.624352"/>\n      <line id="svg_25" y2="5.994512" x2="5.429675" y1="5.533312" x1="6.956407"/>\n      <line id="svg_27" y2="6.551133" x2="4.284627" y1="5.962706" x1="5.572807"/>\n      <line id="svg_28" y2="7.584858" x2="3.044158" y1="6.392099" x1="4.427758"/>\n      <line id="svg_29" y2="8.84123" x2="2.185372" y1="7.489437" x1="3.219096"/>\n      <line id="svg_31" y2="10.606513" x2="1.644654" y1="8.602678" x1="2.280792"/>\n      <line id="svg_32" y2="13.214679" x2="1.48562" y1="10.352058" x1="1.724171"/>\n      <line id="svg_33" y2="14.375631" x2="1.676461" y1="12.992031" x1="1.453813"/>\n      <line id="svg_34" y2="15.298031" x2="2.264889" y1="14.152983" x1="1.517427"/>\n      <line id="svg_35" y2="16.172721" x2="3.521261" y1="14.948155" x1="1.915013"/>\n      <line id="svg_36" y2="16.824762" x2="5.207027" y1="15.997783" x1="3.28271"/>\n      <line id="svg_38" y2="17.063314" x2="7.035924" y1="16.745245" x1="4.968475"/>\n      <line id="svg_39" y2="16.888376" x2="9.278311" y1="17.047411" x1="6.733758"/>\n      <line id="svg_40" y2="16.284045" x2="10.661911" y1="16.983797" x1="8.992048"/>\n      <line id="svg_41" y2="15.313934" x2="11.647925" y1="16.395369" x1="10.455166"/>\n      <line id="svg_44" y2="13.898527" x2="12.82478" y1="15.425259" x1="11.504794"/>\n      <line id="svg_45" y2="12.037824" x2="14.144766" y1="14.312017" x1="12.522614"/>\n      <line id="svg_47" y2="10.59061" x2="14.605966" y1="12.228665" x1="13.953925"/>\n      <ellipse ry="1" rx="1" id="svg_48" cy="3.982726" cx="13.460918"/>\n    </g>', { viewBox: { x: 18, y: 18 } }), Kt = new Ft('<g id="length-group" fill="none" stroke-width="1" stroke="ACTIVE_COLOR" stroke-linecap="round" stroke-linejoin="round">\n    <path id="length-dashes" d="m22.5,6 -16.5,16.5" stroke-width="3" stroke-dasharray="0.6666,5" />\n  </g>', { viewBox: { x: 24, y: 24 } }), Zt = new Ft('<path fill="ACTIVE_COLOR" d="M1152 896q0 106-75 181t-181 75-181-75-75-181 75-181 181-75 181 75\n    75 181zm-256-544q-148 0-273 73t-198 198-73 273 73 273 198 198 273 73 273-73\n    198-198 73-273-73-273-198-198-273-73zm768 544q0 209-103 385.5t-279.5\n    279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5\n    385.5-103 385.5 103 279.5 279.5 103 385.5z"\n  />', { viewBox: { x: 1792, y: 1792 } }), $t = new Ft('<path fill="ACTIVE_COLOR" d="M1312 256h-832q-66 0-113 47t-47 113v832q0 66 47\n    113t113 47h832q66 0 113-47t47-113v-832q0-66-47-113t-113-47zm288 160v832q0\n    119-84.5 203.5t-203.5 84.5h-832q-119 0-203.5-84.5t-84.5-203.5v-832q0-119\n    84.5-203.5t203.5-84.5h832q119 0 203.5 84.5t84.5 203.5z"\n  />', { viewBox: { x: 1792, y: 1792 } }), Jt = new Ft('<path fill="ACTIVE_COLOR" d="M789 559l-170 450q33 0 136.5 2t160.5 2q19 0\n    57-2-87-253-184-452zm-725 1105l2-79q23-7 56-12.5t57-10.5 49.5-14.5 44.5-29\n    31-50.5l237-616 280-724h128q8 14 11 21l205 480q33 78 106 257.5t114 274.5q15\n    34 58 144.5t72 168.5q20 45 35 57 19 15 88 29.5t84 20.5q6 38 6 57 0 5-.5\n    13.5t-.5 12.5q-63 0-190-8t-191-8q-76 0-215 7t-178 8q0-43 4-78l131-28q1 0\n    12.5-2.5t15.5-3.5 14.5-4.5 15-6.5 11-8 9-11\n    2.5-14q0-16-31-96.5t-72-177.5-42-100l-450-2q-26 58-76.5 195.5t-50.5 162.5q0\n    22 14 37.5t43.5 24.5 48.5 13.5 57 8.5 41 4q1 19 1 58 0 9-2 27-58\n    0-174.5-10t-174.5-10q-8 0-26.5 4t-21.5 4q-80 14-188 14z"\n  />', { viewBox: { x: 1792, y: 1792 } }), Qt = new Ft('<path fill="ACTIVE_COLOR" d="M1325 1024h-109q-26 0-45-19t-19-45v-128q0-26\n    19-45t45-19h109q-32-108-112.5-188.5t-188.5-112.5v109q0 26-19 45t-45\n    19h-128q-26 0-45-19t-19-45v-109q-108 32-188.5 112.5t-112.5 188.5h109q26\n    0 45 19t19 45v128q0 26-19 45t-45 19h-109q32 108 112.5 188.5t188.5\n    112.5v-109q0-26 19-45t45-19h128q26 0 45 19t19 45v109q108-32\n    188.5-112.5t112.5-188.5zm339-192v128q0 26-19 45t-45 19h-143q-37 161-154.5\n    278.5t-278.5 154.5v143q0 26-19 45t-45 19h-128q-26\n    0-45-19t-19-45v-143q-161-37-278.5-154.5t-154.5-278.5h-143q-26\n    0-45-19t-19-45v-128q0-26 19-45t45-19h143q37-161\n    154.5-278.5t278.5-154.5v-143q0-26 19-45t45-19h128q26 0 45 19t19 45v143q161\n    37 278.5 154.5t154.5 278.5h143q26 0 45 19t19 45z"\n  />', { viewBox: { x: 1792, y: 1792 } }), en = new Ft('<path transform="translate(0,1792) scale(1,-1)" fill="ACTIVE_COLOR" d="M960 1408l336-384h-768l-336 384h768zm1013-1077q15\n      34 9.5 71.5t-30.5 65.5l-896 1024q-38 44-96 44h-768q-38\n      0-69.5-20.5t-47.5-54.5q-15-34-9.5-71.5t30.5-65.5l896-1024q38-44 96-44h768q38\n      0 69.5 20.5t47.5 54.5z"\n    />', { viewBox: { x: 2048, y: 1792 } }), tn = new Ft('<path fill="ACTIVE_COLOR" d="M508.5 481.6l-129-129c-2.3-2.3-5.3-3.5-8.5-3.5h-10.3C395\n      312 416 262.5 416 208 416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c54.5\n      0 104-21 141.1-55.2V371c0 3.2 1.3 6.2 3.5 8.5l129 129c4.7 4.7 12.3 4.7 17\n      0l9.9-9.9c4.7-4.7 4.7-12.3 0-17zM208 384c-97.3 0-176-78.7-176-176S110.7 32 208\n      32s176 78.7 176 176-78.7 176-176 176z"\n    />', { viewBox: { x: 512, y: 512 } }), nn = new Ft('<path fill="ACTIVE_COLOR" d="M1411 541l-355 355 355 355 144-144q29-31 70-14 39 17\n      39 59v448q0 26-19 45t-45 19h-448q-42 0-59-40-17-39 14-69l144-144-355-355-355\n      355 144 144q31 30 14 69-17 40-59 40h-448q-26 0-45-19t-19-45v-448q0-42 40-59\n      39-17 69 14l144 144 355-355-355-355-144 144q-19 19-45 19-12\n      0-24-5-40-17-40-59v-448q0-26 19-45t45-19h448q42 0 59 40 17 39-14 69l-144\n      144 355 355 355-355-144-144q-31-30-14-69 17-40 59-40h448q26 0 45 19t19\n      45v448q0 42-39 59-13 5-25 5-26 0-45-19z"\n    />', { viewBox: { x: 1792, y: 1792 } }), an = new Ft('<path fill="ACTIVE_COLOR" d="M1664 256v448q0 26-19 45t-45 19h-448q-42 0-59-40-17-39\n      14-69l138-138q-148-137-349-137-104 0-198.5 40.5t-163.5 109.5-109.5\n      163.5-40.5 198.5 40.5 198.5 109.5 163.5 163.5 109.5 198.5 40.5q119 0\n      225-52t179-147q7-10 23-12 15 0 25 9l137 138q9 8 9.5 20.5t-7.5 22.5q-109\n      132-264 204.5t-327 72.5q-156 0-298-61t-245-164-164-245-61-298 61-298\n      164-245 245-164 298-61q147 0 284.5 55.5t244.5 156.5l130-129q29-31 70-14\n      39 17 39 59z"\n    />', { viewBox: { x: 1792, y: 1792 } }), on = new Ft('<path fill="ACTIVE_COLOR" d="M24 21v2c0 0.547-0.453 1-1 1h-22c-0.547\n      0-1-0.453-1-1v-2c0-0.547 0.453-1 1-1h22c0.547 0 1 0.453 1 1zM24 13v2c0\n      0.547-0.453 1-1 1h-22c-0.547 0-1-0.453-1-1v-2c0-0.547 0.453-1 1-1h22c0.547\n      0 1 0.453 1 1zM24 5v2c0 0.547-0.453 1-1 1h-22c-0.547\n      0-1-0.453-1-1v-2c0-0.547 0.453-1 1-1h22c0.547 0 1 0.453 1 1z"\n      />', { viewBox: { x: 24, y: 28 } }), rn = new Ft('<path fill="ACTIVE_COLOR" d="M1664 416v960q0 119-84.5 203.5t-203.5 84.5h-960q-119\n    0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960q119 0 203.5\n    84.5t84.5 203.5z"\n  />', { viewBox: { x: 1792, y: 1792 } }), sn = new Ft('<path fill="ACTIVE_COLOR" d="M14.5,3.5 a1 1 0 0 1 -11,11 Z" stroke="none" opacity="0.8" />\n    <circle cx="9" cy="9" r="8" fill="none" stroke-width="2" stroke="ACTIVE_COLOR" />', { viewBox: { x: 18, y: 18 } }), ln = new Ft('<path fill="ACTIVE_COLOR" d="M508.5 481.6l-129-129c-2.3-2.3-5.3-3.5-8.5-3.5h-10.3C395\n      312 416 262.5 416 208 416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c54.5\n      0 104-21 141.1-55.2V371c0 3.2 1.3 6.2 3.5 8.5l129 129c4.7 4.7 12.3 4.7 17\n      0l9.9-9.9c4.7-4.7 4.7-12.3 0-17zM208 384c-97.3 0-176-78.7-176-176S110.7 32 208\n      32s176 78.7 176 176-78.7 176-176 176z"\n    />\n    <path fill="ACTIVE_COLOR" transform="scale(0.22,0.22) translate(1400,0)" d="M1216\n      320q0 26-19 45t-45 19h-128v1024h128q26 0 45 19t19 45-19 45l-256 256q-19\n      19-45 19t-45-19l-256-256q-19-19-19-45t19-45 45-19h128v-1024h-128q-26\n      0-45-19t-19-45 19-45l256-256q19-19 45-19t45 19l256 256q19 19 19 45z"\n    />', { viewBox: { x: 640, y: 512 } }); function cn(e) { var t = p.cornerstone.metaData.get("imagePlaneModule", e.imageId); return t ? { rowPixelSpacing: t.rowPixelSpacing || t.rowImagePixelSpacing, colPixelSpacing: t.columnPixelSpacing || t.colImagePixelSpacing } : { rowPixelSpacing: e.rowPixelSpacing, colPixelSpacing: e.columnPixelSpacing } } var un = function (e) { var t = x()(e); return null !== e && ("object" === t || "function" === t) }; var dn = function (e, t, n) { var a, o, i, r, s, l, c = 0, u = !1, d = !1, h = !0, v = !t && 0 !== t && "function" == typeof window.requestAnimationFrame; if ("function" != typeof e) throw new TypeError("Expected a function"); function g(t) { var n = a, i = o; return a = o = void 0, c = t, r = e.apply(i, n) } function f(e, t) { return v ? window.requestAnimationFrame(e) : setTimeout(e, t) } function m(e) { var n = e - l; return void 0 === l || n >= t || n < 0 || d && e - c >= i } function p() { var e = Date.now(); if (m(e)) return y(e); s = f(p, function (e) { var n = e - c, a = t - (e - l); return d ? Math.min(a, i - n) : a }(e)) } function y(e) { return s = void 0, h && a ? g(e) : (a = o = void 0, r) } function x() { for (var e = Date.now(), n = m(e), i = arguments.length, h = new Array(i), v = 0; v < i; v++)h[v] = arguments[v]; if (a = h, o = this, l = e, n) { if (void 0 === s) return function (e) { return c = e, s = f(p, t), u ? g(e) : r }(l); if (d) return s = f(p, t), g(l) } return void 0 === s && (s = f(p, t)), r } return t = Number(t) || 0, un(n) && (u = Boolean(n.leading), i = (d = "maxWait" in n) ? Math.max(Number(n.maxWait) || 0, t) : i, h = "trailing" in n ? Boolean(n.trailing) : h), x.cancel = function () { void 0 !== s && function (e) { if (v) return window.cancelAnimationFrame(e); clearTimeout(e) }(s), c = 0, a = l = o = s = void 0 }, x.flush = function () { return void 0 === s ? r : y(Date.now()) }, x.pending = function () { return void 0 !== s }, x }; var hn = function (e, t, n) { var a = !0, o = !0; if ("function" != typeof e) throw new TypeError("Expected a function"); return un(n) && (a = "leading" in n ? Boolean(n.leading) : a, o = "trailing" in n ? Boolean(n.trailing) : o), dn(e, t, { leading: a, trailing: o, maxWait: t }) }, vn = function (e) { function t() { var e, n = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}; i()(this, t); var a = { name: "Angle", supportedInteractionTypes: ["Mouse", "Touch"], svgCursor: Vt }; return (e = c()(this, d()(t).call(this, n, a))).preventNewMeasurement = !1, e.throttledUpdateCachedStats = hn(e.updateCachedStats, 110), e } return v()(t, e), s()(t, [{ key: "createNewMeasurement", value: function (e) { return { visible: !0, active: !0, color: void 0, invalidated: !0, handles: { start: { x: e.currentPoints.image.x, y: e.currentPoints.image.y, highlight: !0, active: !1 }, middle: { x: e.currentPoints.image.x, y: e.currentPoints.image.y, highlight: !0, active: !0 }, end: { x: e.currentPoints.image.x, y: e.currentPoints.image.y, highlight: !0, active: !1 }, textBox: { active: !1, hasMoved: !1, movesIndependently: !1, drawnIndependently: !0, allowedOutsideImage: !0, hasBoundingBox: !0 } } } } }, { key: "pointNearTool", value: function (e, t, n) { return !1 !== t.visible && (Ut(e, t.handles.start, t.handles.middle, n) < 25 || Ut(e, t.handles.middle, t.handles.end, n) < 25) } }, { key: "updateCachedStats", value: function (e, t, n) { var a = cn(e), o = a.rowPixelSpacing, i = a.colPixelSpacing, r = { x: (n.handles.middle.x - n.handles.start.x) * i, y: (n.handles.middle.y - n.handles.start.y) * o }, s = { x: (n.handles.end.x - n.handles.middle.x) * i, y: (n.handles.end.y - n.handles.middle.y) * o }, l = { x: (n.handles.end.x - n.handles.start.x) * i, y: (n.handles.end.y - n.handles.start.y) * o }, c = gn(r), u = gn(s), d = gn(l), h = Math.acos((Math.pow(c, 2) + Math.pow(u, 2) - Math.pow(d, 2)) / (2 * c * u)); h *= 180 / Math.PI, n.rAngle = Nt(h, 2), n.invalidated = !1 } }, { key: "renderToolData", value: function (e) { var t = this, n = e.detail, a = n.enabledElement, o = this.configuration, i = o.handleRadius, r = o.drawHandlesOnHover, s = xe(e.currentTarget, this.name); if (s) for (var l = Dt(n.canvasContext.canvas), c = n.image, u = n.element, d = cn(c), h = d.rowPixelSpacing, v = d.colPixelSpacing, g = at.getToolWidth(), f = function (e) { var o = s.data[e]; if (!1 === o.visible) return "continue"; lt(l, function (e) { At(e, t.configuration); var s = st.getColorIfActive(o), l = p.cornerstone.pixelToCanvas(n.element, o.handles.start), d = p.cornerstone.pixelToCanvas(n.element, o.handles.middle); dt(e, n.element, o.handles.start, [o.handles.middle, o.handles.end], { color: s }); var f = { color: s, handleRadius: i, drawHandlesIfActive: r }; if (Tt(e, n, o.handles, f), !0 === o.invalidated && (o.rAngle ? t.throttledUpdateCachedStats(c, u, o) : t.updateCachedStats(c, u, o)), o.rAngle) { var m, x = function (e, t, n) { var a = t && n ? "" : " (isotropic)"; return e.rAngle.toString() + String.fromCharCode(parseInt("00B0", 16)) + a }(o, h, v); if (!o.handles.textBox.hasMoved) { m = { x: d.x, y: d.y }; var T = It(e, x, 5); d.x < l.x ? m.x -= 15 + T + 10 : m.x += 15; var C = p.cornerstone.internal.getTransform(a); C.invert(); var b = C.transformPoint(m.x, m.y); o.handles.textBox.x = b.x, o.handles.textBox.y = b.y } Pt(e, n.element, o.handles.textBox, x, o.handles, y, s, g, 0, !0) } }) }, m = 0; m < s.data.length; m++)f(m); function y(e) { return [e.start, e.middle, e.end] } } }, { key: "addNewMeasurement", value: function (e, t) { var n = this; if (!this.preventNewMeasurement) { this.preventNewMeasurement = !0, e.preventDefault(), e.stopPropagation(); var a = e.detail, o = this.createNewMeasurement(a), i = e.detail.element; ye(i, this.name, o), p.cornerstone.updateImage(i); var r = Object.assign({}, { doneMovingCallback: function () { o.active = !1, n.preventNewMeasurement = !1; var e = T.MEASUREMENT_COMPLETED, t = { toolType: n.name, element: i, measurementData: o }; C(i, e, t), p.cornerstone.updateImage(i) } }, this.options), s = Object.assign({}, { doneMovingCallback: function () { o.active = !1, o.handles.end.active = !0, p.cornerstone.updateImage(i), Xe(a, n.name, o, o.handles.end, r, t) } }, this.options); Xe(a, this.name, o, o.handles.middle, s, t) } } }]), t }(et); function gn(e) { return Math.sqrt(Math.pow(e.x, 2) + Math.pow(e.y, 2)) } var fn = function (e) { function t() { var e, n = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}; i()(this, t); var a = { name: "ArrowAnnotate", supportedInteractionTypes: ["Mouse", "Touch"], configuration: { getTextCallback: mn, changeTextCallback: pn, drawHandles: !1, drawHandlesOnHover: !0, arrowFirst: !0 }, svgCursor: qt }; return (e = c()(this, d()(t).call(this, n, a))).preventNewMeasurement = !1, e } return v()(t, e), s()(t, [{ key: "createNewMeasurement", value: function (e) { return { visible: !0, active: !0, color: void 0, handles: { start: { x: e.detail.currentPoints.image.x, y: e.detail.currentPoints.image.y, highlight: !0, active: !1 }, end: { x: e.detail.currentPoints.image.x, y: e.detail.currentPoints.image.y, highlight: !0, active: !1 }, textBox: { active: !1, hasMoved: !1, movesIndependently: !1, drawnIndependently: !0, allowedOutsideImage: !0, hasBoundingBox: !0 } } } } }, { key: "pointNearTool", value: function (e, t, n) { return !1 !== t.visible && Ut(e, t.handles.start, t.handles.end, n) < 25 } }, { key: "updateCachedStats", value: function (e, t, n) { } }, { key: "renderToolData", value: function (e) { var t = this, n = e.detail, a = n.element, o = n.enabledElement, i = this.configuration, r = i.handleRadius, s = i.drawHandlesOnHover, l = xe(a, this.name); if (l) for (var c = e.detail.canvasContext.canvas, u = Dt(c), d = at.getToolWidth(), h = function (n) { var i = l.data[n]; if (!1 === i.visible) return "continue"; lt(u, function (n) { At(n, t.configuration); var l = st.getColorIfActive(i), c = p.cornerstone.pixelToCanvas(a, i.handles.start), u = p.cornerstone.pixelToCanvas(a, i.handles.end); t.configuration.arrowFirst ? ht(n, u, c, l, d) : ht(n, c, u, l, d); var h = { color: l, handleRadius: r, drawHandlesIfActive: s }; t.configuration.drawHandles && Tt(n, e.detail, i.handles, h); var v = function (e) { return e.text }(i); if (v && "" !== v) { var f = It(n, v, 5), m = wt.getFontSize() + 10, y = Math.max(f, m) / 2 + 5; if (u.x < c.x && (y = -y), !i.handles.textBox.hasMoved) { var x; x = t.configuration.arrowFirst ? { x: u.x - f / 2 + y, y: u.y - m / 2 } : { x: c.x - f / 2 - y, y: c.y - m / 2 }; var T = p.cornerstone.internal.getTransform(o); T.invert(); var C = T.transformPoint(x.x, x.y); i.handles.textBox.x = C.x, i.handles.textBox.y = C.y } Pt(n, a, i.handles.textBox, v, i.handles, g, l, d, 0, !1) } }) }, v = 0; v < l.data.length; v++)h(v); function g(e) { var t = { x: (e.start.x + e.end.x) / 2, y: (e.start.y + e.end.y) / 2 }; return [e.start, t, e.end] } } }, { key: "addNewMeasurement", value: function (e, t) { var n = this, a = e.detail.element, o = this.createNewMeasurement(e); ye(a, this.name, o), p.cornerstone.updateImage(a); var i = Object.assign({}, { doneMovingCallback: function () { void 0 === o.text && n.configuration.getTextCallback(function (e) { if (o.active = !1, e) { o.text = e; var t = T.MEASUREMENT_COMPLETED, i = { toolName: n.name, element: a, measurementData: o }; C(a, t, i) } else Te(a, n.name, o); p.cornerstone.updateImage(a) }), p.cornerstone.updateImage(a) } }, this.options); Xe(e.detail, this.name, o, o.handles.end, i, t) } }, { key: "doubleClickCallback", value: function (e) { if (Array.isArray(this.options.mouseButtonMask) && this.options.mouseButtonMask.includes(e.detail.buttons)) return this._updateTextForNearbyAnnotation(e) } }, { key: "touchPressCallback", value: function (e) { return this._updateTextForNearbyAnnotation(e) } }, { key: "_updateTextForNearbyAnnotation", value: function (e) { var t = e.detail.element, n = e.detail.currentPoints.canvas, a = xe(t, this.name); if (!a) return !1; for (var o = 0; o < a.data.length; o++) { var i = a.data[o]; if (this.pointNearTool(t, i, n) || Ee(i.handles.textBox, n)) return i.active = !0, p.cornerstone.updateImage(t), this.configuration.changeTextCallback(i, e.detail, this._doneChangingTextCallback.bind(this, t, i)), e.stopImmediatePropagation(), e.preventDefault(), e.stopPropagation(), !0 } } }, { key: "_doneChangingTextCallback", value: function (e, t, n, a) { !0 === a ? Te(e, this.name, t) : t.text = n, t.active = !1, p.cornerstone.updateImage(e) } }]), t }(et); function mn(e) { e(prompt("Enter your annotation:")) } function pn(e, t, n) { n(prompt("Change your annotation:")) } var yn, xn = function (e, t, n) { var a = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : {}; return Object.assign({ x: e, y: t, index: n, drawnIndependently: !1, allowedOutsideImage: !1, highlight: !0, active: !1 }, a) }, Tn = function (e) { var t = e.currentPoints.image, n = t.x, a = t.y; return { toolType: this.name, isCreating: !0, visible: !0, active: !0, invalidated: !0, handles: { start: xn(n, a, 0), end: xn(n, a, 1, { active: !0 }), perpendicularStart: xn(n, a, 2, { locked: !0 }), perpendicularEnd: xn(n, a, 3), textBox: xn(n - 50, a - 70, null, { highlight: !1, hasMoved: !0, active: !1, movesIndependently: !1, drawnIndependently: !0, allowedOutsideImage: !0, hasBoundingBox: !0 }) }, longestDiameter: 0, shortestDiameter: 0 } }, Cn = function (e, t, n) { var a = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : "mouse", o = p.cornerstone, i = p.cornerstoneMath, r = t.handles, s = { start: o.pixelToCanvas(e, r.start), end: o.pixelToCanvas(e, r.end) }, l = i.lineSegment.distanceToPoint(s, n); if (Ee(r.textBox, n)) return !0; var c = "mouse" === a ? _.clickProximity : _.touchProximity; return !!function (e, t, n, a) { var o = p.cornerstone, i = p.cornerstoneMath, r = { start: o.pixelToCanvas(e, t.perpendicularStart), end: o.pixelToCanvas(e, t.perpendicularEnd) }; return i.lineSegment.distanceToPoint(r, n) < a }(e, r, n, c) || l < c }, bn = n(7), En = n.n(bn), Mn = function (e) { var t = this, n = e.detail, a = n.element, o = n.canvasContext, i = n.image, r = this.configuration, s = r.handleRadius, l = r.drawHandlesOnHover, c = xe(a, this.name); if (c) { var u = cn(i), d = u.rowPixelSpacing, h = u.colPixelSpacing; if (d && h) for (var v, g = Dt(o.canvas), f = st.getActiveColor(), m = at.getToolWidth(), p = function (e) { var o = c.data[e]; if (!1 === o.visible) return "continue"; v = o.active ? f : st.getToolColor(), !0 === o.invalidated && (o.longestDiameter && o.shortestDiameter ? t.throttledUpdateCachedStats(i, a, o) : t.updateCachedStats(i, a, o)), lt(g, function (e) { At(e, t.configuration); var i = o.handles, r = i.start, c = i.end, u = i.perpendicularStart, g = i.perpendicularEnd, f = i.textBox; ut(e, a, r, c, { color: v }); var p = m; !function (e, t) { if (t.handles.perpendicularStart.locked) { var n, a, o, i, r = t.handles, s = r.start, l = r.end; if (s.x === l.x && s.y === l.y) n = s.x, a = s.y, o = l.x, i = l.y; else { var c = { x: (s.x + l.x) / 2, y: (s.y + l.y) / 2 }, u = (s.x - l.x) * (e.image.columnPixelSpacing || 1), d = (s.y - l.y) * (e.image.rowPixelSpacing || 1), h = Math.sqrt(u * u + d * d), v = (s.x - l.x) / h, g = (s.y - l.y) / h, f = h / 2; n = c.x + f / 2 * g, a = c.y - f / 2 * v, o = c.x - f / 2 * g, i = c.y + f / 2 * v } t.handles.perpendicularStart.x = n, t.handles.perpendicularStart.y = a, t.handles.perpendicularEnd.x = o, t.handles.perpendicularEnd.y = i } }(n, o), ut(e, a, u, g, { color: v, strokeWidth: p }); var y = { color: v, handleRadius: s, drawHandlesIfActive: l }; Tt(e, n, o.handles, y); var x = wn(o, d, h); Pt(e, a, f, x, o.handles, function (e) { return [e.start, e.end, e.perpendicularStart, e.perpendicularEnd] }, v, m, 10, !0) }) }, y = 0; y < c.data.length; y++)p(y) } }, wn = function (e, t, n) { var a = " mm"; t && n || (a = " pixels"); var o = " L ".concat(e.longestDiameter).concat(a), i = " W ".concat(e.shortestDiameter).concat(a), r = e.labels; return r && Array.isArray(r) ? [].concat(En()(r), [o, i]) : [o, i] }, Sn = function (e, t) { var n = this, a = e.detail, o = a.element, i = a.image, r = a.buttons, s = this.configuration; if (!kn(i)) { var l = this.createNewMeasurement(a), c = function () { l.active = !1, p.cornerstone.updateImage(o) }; ye(o, this.name, l), p.cornerstone.updateImage(o); var u = (new Date).getTime(), d = l.handles, h = d.end, v = d.perpendicularStart; Xe(a, this.name, l, h, { doneMovingCallback: function () { var e = l.handles, d = l.longestDiameter, h = l.shortestDiameter, g = ke(a, e), f = parseFloat(d) || 0, m = parseFloat(h) || 0, y = f < 1 || m < 1, x = (new Date).getTime() - u < 150; g || y || x ? (l.cancelled = !0, Te(o, n.name, l)) : s.getMeasurementLocationCallback(l, a, c), v.locked = !1, l.invalidated = !0, p.cornerstone.updateImage(o); var b = Ne(o, r, t); b instanceof et && b.updateCachedStats(i, o, l); var E = { toolType: n.name, element: o, measurementData: l }; C(o, T.MEASUREMENT_MODIFIED, E), C(o, T.MEASUREMENT_COMPLETED, E) } }, t) } }, kn = function (e) { var t = p.cornerstone.metaData.get("imagePlaneModule", e.imageId), n = e.rowPixelSpacing, a = e.columnPixelSpacing; return t && (n = t.rowPixelSpacing || t.rowImagePixelSpacing, a = t.columnPixelSpacing || t.colImagePixelSpacing), !n || !a }; var In = { setCoords: function (e) { yn = e.currentPoints.canvas }, getCoords: function () { return yn } }, _n = function (e) { var t = this, n = e.detail, a = n.element; In.setCoords(n); var o = xe(a, this.name); if (o) { for (var i = !1, r = function (e) { var r = n.currentPoints.canvas, s = o.data[e], l = function (e, t, n) { var a = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 6, o = we(e, t, n, a), i = !1; return Object.keys(t).forEach(function (e) { if ("textBox" !== e) { var n = t[e], a = n === o; n.active !== a && (i = !0), n.active = a } }), i }(a, s.handles, r); Object.keys(s.handles).forEach(function (e) { if ("textBox" !== e) { var t = s.handles[e]; t.hover = t.active } }), l && (i = !0); var c = t.pointNearTool(a, s, r, "mouse"), u = c && !s.active, d = !c && s.active; (u || d) && (s.active = !s.active, i = !0) }, s = 0; s < o.data.length; s++)r(s); !0 === i && p.cornerstone.updateImage(a) } }, Pn = function (e, t, n) { "touch" === (arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : "mouse") ? this.handleSelectedTouchCallback(e) : this.handleSelectedMouseCallback(e) }, On = function (e, t, n, a) { var o, i, r, s, l = {}, c = {}, u = { x: t.currentPoints.image.x + a.x, y: t.currentPoints.image.y + a.y }; 0 === e.index ? function (e, t) { var n = p.cornerstoneMath.point.distance, a = t.handles, o = a.start, i = a.end, r = a.perpendicularStart, s = a.perpendicularEnd, l = { start: { x: o.x, y: o.y }, end: { x: i.x, y: i.y } }, c = { start: { x: r.x, y: r.y }, end: { x: s.x, y: s.y } }, u = p.cornerstoneMath.lineSegment.intersectLine(l, c), d = n(r, u), h = n(s, u), v = n(i, u), g = n(i, e); if (g <= v) return !1; var f = (i.x - e.x) / g, m = (i.y - e.y) / g, y = v / g, x = i.x + (e.x - i.x) * y, T = i.y + (e.y - i.y) * y; return r.x = x - d * m, r.y = T + d * f, s.x = x + h * m, s.y = T - h * f, !0 }(u, n) ? (e.x = u.x, e.y = u.y) : (t.currentPoints.image.x = e.x, t.currentPoints.image.y = e.y) : 1 === e.index ? function (e, t) { var n = p.cornerstoneMath.point.distance, a = t.handles, o = a.start, i = a.end, r = a.perpendicularStart, s = a.perpendicularEnd, l = { start: { x: o.x, y: o.y }, end: { x: i.x, y: i.y } }, c = { start: { x: r.x, y: r.y }, end: { x: s.x, y: s.y } }, u = p.cornerstoneMath.lineSegment.intersectLine(l, c), d = n(r, u), h = n(s, u), v = n(o, u), g = n(o, e); if (g <= v) return !1; var f = (o.x - e.x) / g, m = (o.y - e.y) / g, y = v / g, x = o.x + (e.x - o.x) * y, T = o.y + (e.y - o.y) * y; return r.x = x + d * m, r.y = T - d * f, s.x = x - h * m, s.y = T + h * f, !0 }(u, n) ? (e.x = u.x, e.y = u.y) : (t.currentPoints.image.x = e.x, t.currentPoints.image.y = e.y) : 2 === e.index ? (o = !1, l.start = { x: n.handles.start.x, y: n.handles.start.y }, l.end = { x: n.handles.end.x, y: n.handles.end.y }, c.start = { x: n.handles.perpendicularEnd.x, y: n.handles.perpendicularEnd.y }, c.end = { x: u.x, y: u.y }, (i = p.cornerstoneMath.lineSegment.intersectLine(l, c)) || (c.end = { x: n.handles.perpendicularStart.x, y: n.handles.perpendicularStart.y }, i = p.cornerstoneMath.lineSegment.intersectLine(l, c), r = p.cornerstoneMath.point.distance(i, n.handles.start), s = p.cornerstoneMath.point.distance(i, n.handles.end), (!i || r < 3 || s < 3) && (o = !0)), !1, o || function (e, t) { var n = p.cornerstoneMath.point.distance, a = t.handles, o = a.start, i = a.end, r = a.perpendicularStart, s = a.perpendicularEnd, l = s, c = p.cornerstoneMath.lineSegment.distanceToPoint(t.handles, l), u = p.cornerstoneMath.lineSegment.distanceToPoint(t.handles, e), d = c + u; if (n(l, e) <= c) return !1; var h = n(o, i); if (0 === h) return !1; var v = (o.x - i.x) / h, g = (o.y - i.y) / h, f = o.x - 1 * v, m = o.y - 1 * g, y = i.x + 1 * v, x = i.y + 1 * g; r.x = e.x, r.y = e.y, s.x = e.x - d * g, s.y = e.y + d * v; var T = { start: { x: o.x, y: o.y }, end: { x: i.x, y: i.y } }, C = { start: { x: r.x, y: r.y }, end: { x: s.x, y: s.y } }; return p.cornerstoneMath.lineSegment.intersectLine(T, C) || (n(e, o) > n(e, i) ? (r.x = y + u * g, r.y = x - u * v, s.x = r.x - d * g, s.y = r.y + d * v) : (r.x = f + u * g, r.y = m - u * v, s.x = r.x - d * g, s.y = r.y + d * v)), !0 }(u, n) || (t.currentPoints.image.x = n.handles.perpendicularStart.x, t.currentPoints.image.y = n.handles.perpendicularStart.y)) : 3 === e.index && (o = !1, l.start = { x: n.handles.start.x, y: n.handles.start.y }, l.end = { x: n.handles.end.x, y: n.handles.end.y }, c.start = { x: n.handles.perpendicularStart.x, y: n.handles.perpendicularStart.y }, c.end = { x: u.x, y: u.y }, (i = p.cornerstoneMath.lineSegment.intersectLine(l, c)) || (c.end = { x: n.handles.perpendicularEnd.x, y: n.handles.perpendicularEnd.y }, i = p.cornerstoneMath.lineSegment.intersectLine(l, c), r = p.cornerstoneMath.point.distance(i, n.handles.start), s = p.cornerstoneMath.point.distance(i, n.handles.end), (!i || r < 3 || s < 3) && (o = !0)), !1, o || function (e, t) { var n = p.cornerstoneMath.point.distance, a = t.handles, o = a.start, i = a.end, r = a.perpendicularStart, s = a.perpendicularEnd, l = r, c = p.cornerstoneMath.lineSegment.distanceToPoint(t.handles, l), u = p.cornerstoneMath.lineSegment.distanceToPoint(t.handles, e), d = c + u; if (n(l, e) <= c) return !1; var h = n(o, i), v = (o.x - i.x) / h, g = (o.y - i.y) / h, f = o.x - 1 * v, m = o.y - 1 * g, y = i.x + 1 * v, x = i.y + 1 * g; r.x = e.x + d * g, r.y = e.y - d * v, s.x = e.x, s.y = e.y, s.locked = !1, r.locked = !1; var T = { start: { x: o.x, y: o.y }, end: { x: i.x, y: i.y } }, C = { start: { x: r.x, y: r.y }, end: { x: s.x, y: s.y } }; return p.cornerstoneMath.lineSegment.intersectLine(T, C) || (n(e, o) > n(e, i) ? (s.x = y - u * g, s.y = x + u * v, r.x = s.x + d * g, r.y = s.y - d * v) : (s.x = f - u * g, s.y = m + u * v, r.x = s.x + d * g, r.y = s.y - d * v)), !0 }(u, n) || (t.currentPoints.image.x = n.handles.perpendicularEnd.x, t.currentPoints.image.y = n.handles.perpendicularEnd.y)) }, Dn = function (e, t, n) { var a = e[n], o = t[n]; e[n] = o, t[n] = a }, Ln = function (e, t) { Dn(e, t, "x"), Dn(e, t, "y"), Dn(e, t, "moving"), Dn(e, t, "hover"), Dn(e, t, "active"), Dn(e, t, "selected") }; var An = function (e) { var t, n = this, a = e.detail, o = a.element, i = _.clickProximity, r = function (e) { t.invalidated = !0, ke(a, t.handles) && Te(o, n.name, t), e && (e.moving = !1, e.selected = !0), R(n.element, n.svgCursor), p.cornerstone.updateImage(o), o.addEventListener(T.MOUSE_MOVE, n._moveCallback), o.addEventListener(T.TOUCH_START, n._moveCallback) }, s = a.startPoints.canvas, l = xe(e.currentTarget, this.name); if (l) { for (var c = function (c) { t = l.data[c]; var u = [o, t.handles, s, i], d = we.apply(void 0, u); if (d) return o.removeEventListener(T.MOUSE_MOVE, n._moveCallback), o.removeEventListener(T.TOUCH_START, n._moveCallback), t.active = !0, Rn(t.handles), d.moving = !0, (d = function (e, t, n) { var a = e.image, o = a.rowPixelSpacing, i = a.columnPixelSpacing, r = t.handles, s = r.start, l = r.end, c = r.perpendicularStart, u = r.perpendicularEnd, d = (s.x - l.x) * (i || 1), h = (s.y - l.y) * (o || 1), v = Math.sqrt(d * d + h * h), g = (c.x - u.x) * (i || 1), f = (c.y - u.y) * (o || 1); return (Math.sqrt(g * g + f * f) || 0) > v ? (Ln(s, l), Ln(s, c), Ln(l, u), Object.values(r).find(function (e) { return !0 === e.moving })) : n }(a, t, d)).hasBoundingBox || H(n.element), function (e, t, n, a, o, i) { var r = e.element, s = e.image, l = e.buttons, c = { x: a.x - e.currentPoints.image.x, y: a.y - e.currentPoints.image.y }, u = function (e) { var o = e.detail; a.hasMoved = !0, void 0 === a.index || null === a.index ? (a.x = o.currentPoints.image.x + c.x, a.y = o.currentPoints.image.y + c.y) : On(a, o, n, c), i && (a.x = Math.max(a.x, 0), a.x = Math.min(a.x, o.image.width), a.y = Math.max(a.y, 0), a.y = Math.min(a.y, o.image.height)), n.invalidated = !0, p.cornerstone.updateImage(r); var u = Ne(r, l, "mouse"); u instanceof et && u.updateCachedStats(s, r, n); var d = { toolType: t, element: r, measurementData: n }; p.cornerstone.triggerEvent(r, T.MEASUREMENT_MODIFIED, d) }; a.active = !0, _.isToolLocked = !0, r.addEventListener(T.MOUSE_DRAG, u), r.addEventListener(T.TOUCH_DRAG, u); var d = p.cornerstone.getImage(r), h = function () { p.cornerstone.getImage(r).imageId !== d.imageId && v() }; r.addEventListener(p.cornerstone.EVENTS.IMAGE_RENDERED, h); var v = function e() { a.active = !1, _.isToolLocked = !1, r.removeEventListener(p.cornerstone.EVENTS.IMAGE_RENDERED, h), r.removeEventListener(T.MOUSE_DRAG, u), r.removeEventListener(T.MOUSE_UP, e), r.removeEventListener(T.MOUSE_CLICK, e), r.removeEventListener(T.TOUCH_DRAG, u), r.removeEventListener(T.TOUCH_DRAG_END, e), r.removeEventListener(T.TAP, e), p.cornerstone.updateImage(r), "function" == typeof o && o() }; r.addEventListener(T.MOUSE_UP, v), r.addEventListener(T.MOUSE_CLICK, v), r.addEventListener(T.TOUCH_DRAG_END, v), r.addEventListener(T.TAP, v) }(a, n.name, t, d, function () { return r(d) }), Un(e), { v: !0 } }, u = 0; u < l.data.length; u++) { var d = c(u); if ("object" === x()(d)) return d.v } var h = function (e) { return function () { Hn(e, !1), r() } }; for (u = 0; u < l.data.length; u++)if (t = l.data[u], this.pointNearTool(o, t, s, "mouse")) { o.removeEventListener(T.MOUSE_MOVE, this._moveCallback), o.removeEventListener(T.TOUCH_START, this._moveCallback), t.active = !0, Rn(t.handles), Hn(t.handles, !0); var v = h(t.handles); return Ve(a, this.name, t, null, { deleteIfHandleOutsideImage: !0, preventHandleOutsideImage: !1, doneMovingCallback: v }, "mouse"), Un(e), !0 } } }, Rn = function (e) { var t = !1; return Object.keys(e).forEach(function (n) { "textBox" !== n && (e[n].selected = !1, t = e[n].active || t, e[n].active = !1) }), t }, Hn = function (e, t) { Object.keys(e).forEach(function (n) { "textBox" !== n && (e[n].moving = t) }) }, Un = function (e) { e.stopImmediatePropagation(), e.stopPropagation(), e.preventDefault() }, Nn = [T.TOUCH_END, T.TOUCH_DRAG_END, T.TOUCH_PINCH, T.TOUCH_PRESS, T.TAP], Bn = function (e) { var t, n = this, a = e.detail, o = a.element, i = _.touchProximity, r = function (e) { t.invalidated = !0, ke(a, t.handles) && Te(o, n.name, t), e && (e.moving = !1, e.selected = !0), p.cornerstone.updateImage(o), o.addEventListener(T.TOUCH_DRAG, n._moveCallback) }, s = a.startPoints.canvas, l = xe(e.currentTarget, this.name); if (l) { for (var c = function (c) { t = l.data[c]; var u = [o, t.handles, s, i], d = we.apply(void 0, u); if (d) return o.removeEventListener(T.TOUCH_DRAG, n._moveCallback), t.active = !0, Fn(t.handles), d.moving = !0, function (e, t, n, a, o, i) { var r = e.element, s = e.image, l = e.buttons, c = { x: a.x - e.currentPoints.image.x, y: a.y - e.currentPoints.image.y }, u = function (e) { var o = e.detail; a.hasMoved = !0, void 0 === a.index || null === a.index ? (a.x = o.currentPoints.image.x + c.x, a.y = o.currentPoints.image.y + c.y) : On(a, o, n, c), i && (a.x = Math.max(a.x, 0), a.x = Math.min(a.x, o.image.width), a.y = Math.max(a.y, 0), a.y = Math.min(a.y, o.image.height)), n.invalidated = !0, p.cornerstone.updateImage(r); var u = Ne(r, l, "touch"); u instanceof et && u.updateCachedStats(s, r, n); var d = { toolType: t, element: r, measurementData: n }; p.cornerstone.triggerEvent(r, T.MEASUREMENT_MODIFIED, d) }; a.active = !0, _.isToolLocked = !0, r.addEventListener(T.TOUCH_DRAG, u); var d = function e() { a.active = !1, _.isToolLocked = !1, r.removeEventListener(T.TOUCH_DRAG, u), Nn.forEach(function (t) { r.removeEventListener(t, e) }), p.cornerstone.updateImage(r), "function" == typeof o && o() }; Nn.forEach(function (e) { r.addEventListener(e, d) }) }(a, n.name, t, d, function () { return r(d) }), qn(e), { v: !0 } }, u = 0; u < l.data.length; u++) { var d = c(u); if ("object" === x()(d)) return d.v } var h = function (e) { return function () { Vn(e, !1), r() } }; for (u = 0; u < l.data.length; u++)if (t = l.data[u], this.pointNearTool(o, t, s, "touch")) { o.removeEventListener(T.TOUCH_DRAG, this._moveCallback), t.active = !0, Fn(t.handles), Vn(t.handles, !0); var v = h(t.handles); return Ve(a, this.name, t, null, { deleteIfHandleOutsideImage: !0, preventHandleOutsideImage: !1, doneMovingCallback: v }, "touch"), qn(e), !0 } } }, Fn = function (e) { var t = !1; return Object.keys(e).forEach(function (n) { "textBox" !== n && (e[n].selected = !1, t = e[n].active || t, e[n].active = !1) }), t }, Vn = function (e, t) { Object.keys(e).forEach(function (n) { "textBox" !== n && (e[n].moving = t) }) }, qn = function (e) { e.stopImmediatePropagation(), e.stopPropagation(), e.preventDefault() }; var zn = function (e, t, n) { return n() }, jn = function (e) { function t(e) { var n; i()(this, t); var a = { name: "Bidirectional", supportedInteractionTypes: ["Mouse", "Touch"], configuration: { changeMeasurementLocationCallback: zn, getMeasurementLocationCallback: zn, textBox: "", shadow: "", drawHandlesOnHover: !0, additionalData: [] }, svgCursor: zt }; return (n = c()(this, d()(t).call(this, e, a))).throttledUpdateCachedStats = hn(n.updateCachedStats, 110), n.createNewMeasurement = Tn.bind(De()(n)), n.pointNearTool = Cn.bind(De()(n)), n.renderToolData = Mn.bind(De()(n)), n.addNewMeasurement = Sn.bind(De()(n)), n._moveCallback = _n.bind(De()(n)), n.handleSelectedCallback = Pn.bind(De()(n)), n.handleSelectedMouseCallback = An.bind(De()(n)), n.handleSelectedTouchCallback = Bn.bind(De()(n)), n } return v()(t, e), s()(t, [{ key: "updateCachedStats", value: function (e, t, n) { var a = function (e, t) { var n = t.rowPixelSpacing, a = t.colPixelSpacing, o = e.handles, i = o.start, r = o.end, s = o.perpendicularStart, l = o.perpendicularEnd, c = (i.x - r.x) * (a || 1), u = (i.y - r.y) * (n || 1), d = Math.sqrt(c * c + u * u), h = (s.x - l.x) * (a || 1), v = (s.y - l.y) * (n || 1), g = Math.sqrt(h * h + v * v); if (g || (g = 0), g > d) { var f = d; d = g, g = f } return { longestDiameter: d.toFixed(1), shortestDiameter: g.toFixed(1) } }(n, cn(e)), o = a.longestDiameter, i = a.shortestDiameter; n.longestDiameter = o, n.shortestDiameter = i, n.invalidated = !1 } }]), t }(et), Wn = function (e, t) { var n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2], a = p.cornerstone, o = a.metaData.get("patientStudyModule", e.imageId), i = a.metaData.get("generalSeriesModule", e.imageId); if (o && i && "PT" === i.modality) { var r = n ? t : t * e.slope + e.intercept, s = o.patientWeight; if (s) { var l = a.metaData.get("petIsotopeModule", e.imageId); if (l) { var c = l.radiopharmaceuticalInfo, u = c.radiopharmaceuticalStartTime, d = c.radionuclideTotalDose, h = c.radionuclideHalfLife, v = i.seriesTime; if (u && d && h && v) { var g = Gn(v.fractionalSeconds || 0) + v.seconds + 60 * v.minutes + 60 * v.hours * 60 - (Gn(u.fractionalSeconds) + u.seconds + 60 * u.minutes + 60 * u.hours * 60); return r * s / (d * Math.exp(-g * Math.log(2) / h)) * 1e3 } } } } }; function Gn(e) { return parseFloat(".".concat(e)) } var Yn = function (e, t) { var n = e.width / 2, a = e.height / 2; if (n <= 0 || a <= 0) return !1; var o = e.left + n, i = e.top + a, r = t.x - o, s = t.y - i; return r * r / (n * n) + s * s / (a * a) <= 1 }, Xn = function (e, t) { for (var n = 0, a = 0, o = 0, i = 0, r = null, s = null, l = t.top; l < t.top + t.height; l++)for (var c = t.left; c < t.left + t.width; c++) { Yn(t, { x: c, y: l }) && (null === r && (r = e[i], s = e[i]), n += e[i], a += e[i] * e[i], r = Math.min(r, e[i]), s = Math.max(s, e[i]), o++), i++ } if (0 === o) return { count: o, mean: 0, variance: 0, stdDev: 0, min: 0, max: 0 }; var u = n / o, d = a / o - u * u; return { count: o, mean: u, variance: d, stdDev: Math.sqrt(d), min: r, max: s } }, Kn = { calculateEllipseStatistics: Xn, pointInEllipse: Yn }; function Zn(e, t) { var n = function (e) { var t = [e.start, e.end].sort(function (e, t) { return e.x < t.x ? -1 : 1 }), n = [e.start, e.end].sort(function (e, t) { return e.y < t.y ? -1 : 1 }), a = t[0], o = t[t.length - 1], i = n[0], r = n[n.length - 1]; return { top: i, left: a, bottom: r, right: o } }(t), a = (n.left.x + n.right.x) / 2, o = (n.top.y + n.bottom.y) / 2, i = {}; return e.rotation >= 0 && e.rotation < 90 && (i.x = e.hflip ? n.left.x : n.right.x, i.y = o), e.rotation >= 90 && e.rotation < 180 && (i.x = a, i.y = e.vflip ? n.bottom.y : n.top.y), e.rotation >= 180 && e.rotation < 270 && (i.x = e.hflip ? n.right.x : n.left.x, i.y = o), e.rotation >= 270 && e.rotation < 360 && (i.x = a, i.y = e.vflip ? n.top.y : n.bottom.y), i } var $n = function (e) { var t = e.toString().split("."); return t[0] = t[0].replace(/\B(?=(\d{3})+(?!\d))/g, ","), t.join(".") }, Jn = V("tools:annotation:CircleRoiTool"), Qn = function (e) { function t() { var e, n = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}; i()(this, t); var a = { name: "CircleRoi", supportedInteractionTypes: ["Mouse", "Touch"], svgCursor: Wt }; return (e = c()(this, d()(t).call(this, n, a))).throttledUpdateCachedStats = hn(e.updateCachedStats, 110), e } return v()(t, e), s()(t, [{ key: "createNewMeasurement", value: function (e) { if (e && e.currentPoints && e.currentPoints.image) return { visible: !0, active: !0, color: void 0, invalidated: !0, handles: { start: { x: e.currentPoints.image.x, y: e.currentPoints.image.y, highlight: !0, active: !1 }, end: { x: e.currentPoints.image.x, y: e.currentPoints.image.y, highlight: !0, active: !0 }, initialRotation: e.viewport.rotation, textBox: { active: !1, hasMoved: !1, movesIndependently: !1, drawnIndependently: !0, allowedOutsideImage: !0, hasBoundingBox: !0 } } }; Jn.error("required eventData not supplied to tool ".concat(this.name, "'s createNewMeasurement")) } }, { key: "pointNearTool", value: function (e, t, n, a) { var o = t && t.handles && t.handles.start && t.handles.end; if (o || Jn.warn("invalid parameters supplied to tool ".concat(this.name, "'s pointNearTool")), !o || !1 === t.visible) return !1; var i = "mouse" === a ? 15 : 25, r = p.cornerstone.pixelToCanvas(e, t.handles.start), s = p.cornerstone.pixelToCanvas(e, t.handles.end), l = na(r, n), c = na(r, s); return l > c - i / 2 && l < c + i / 2 } }, { key: "updateCachedStats", value: function (e, t, n) { var a = (p.cornerstone.metaData.get("generalSeriesModule", e.imageId) || {}).modality, o = cn(e), i = function (e, t, n, a, o) { var i, r = ta(n.start, n.end), s = p.cornerstone.getPixels(t, r.left, r.top, r.width, r.height), l = Xn(s, r); "PT" === a && (i = { mean: Wn(e, l.mean, !0) || 0, stdDev: Wn(e, l.stdDev, !0) || 0 }); return { area: Math.PI * (r.width * (o.colPixelSpacing || 1) / 2) * (r.height * (o.rowPixelSpacing || 1) / 2) || 0, count: l.count || 0, mean: l.mean || 0, variance: l.variance || 0, stdDev: l.stdDev || 0, min: l.min || 0, max: l.max || 0, meanStdDevSUV: i } }(e, t, n.handles, a, o); n.cachedStats = i, n.invalidated = !1 } }, { key: "renderToolData", value: function (e) { var t = this, n = xe(e.currentTarget, this.name); if (n) { var a = e.detail, o = a.image, i = a.element, r = a.canvasContext, s = at.getToolWidth(), l = this.configuration, c = l.handleRadius, u = l.drawHandlesOnHover, d = Dt(r.canvas), h = cn(o), v = h.rowPixelSpacing, g = h.colPixelSpacing, f = (p.cornerstone.metaData.get("generalSeriesModule", o.imageId) || {}).modality, m = v && g; lt(d, function (e) { for (var r = 0; r < n.data.length; r++) { var l = n.data[r]; if (!1 !== l.visible) { var d = st.getColorIfActive(l), h = { color: d, handleRadius: c, drawHandlesIfActive: u }; At(e, t.configuration); var v = na(p.cornerstone.pixelToCanvas(i, l.handles.start), p.cornerstone.pixelToCanvas(i, l.handles.end)); if (vt(e, i, l.handles.start, v, { color: d }, "pixel"), Tt(e, a, l.handles, h), !0 === l.invalidated && (l.cachedStats ? t.throttledUpdateCachedStats(o, i, l) : t.updateCachedStats(o, i, l)), !l.handles.textBox.hasMoved) { var g = Zn(a.viewport, l.handles); Object.assign(l.handles.textBox, g) } var y = ea(e, o.color, l.cachedStats, f, m, t.configuration); Pt(e, i, l.handles.textBox, y, l.handles, function (e) { return t = e.start, n = e.end, a = ta(t, n), o = a.left, i = a.top, r = a.width, s = a.height, [{ x: o + r / 2, y: i }, { x: o, y: i + s / 2 }, { x: o + r / 2, y: i + s }, { x: o + r, y: i + s / 2 }]; var t, n, a, o, i, r, s }, d, s, 10, !0) } } }) } } }]), t }(et); function ea(e, t) { var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {}, a = n.area, o = n.mean, i = n.stdDev, r = n.min, s = n.max, l = n.meanStdDevSUV, c = arguments.length > 3 ? arguments[3] : void 0, u = arguments.length > 4 ? arguments[4] : void 0, d = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : {}, h = d.showMinMax || !1, v = !1 !== d.showHounsfieldUnits, g = [], f = []; if (!t) { var m = l && 0 !== l.mean, p = "CT" === c && v ? " HU" : "", y = "Mean: ".concat($n(o.toFixed(2))).concat(p), x = "Std Dev: ".concat($n(i.toFixed(2))).concat(p); if (m) { for (var T = "".concat(" SUV: ").concat($n(l.mean.toFixed(2))), C = "".concat(" SUV: ").concat($n(l.stdDev.toFixed(2))), b = Math.floor(e.measureText("".concat(x, "     ")).width); e.measureText(y).width < b;)y += " "; f.push("".concat(y).concat(T)), f.push("".concat(x, "     ").concat(C)) } else f.push("".concat(y, "     ").concat(x)); if (h) { for (var E = "Min: ".concat(r).concat(p), M = "Max: ".concat(s).concat(p), w = m ? Math.floor(e.measureText("".concat(x, "     ")).width) : Math.floor(e.measureText("".concat(y, "     ")).width); e.measureText(E).width < w;)E += " "; f.push("".concat(E).concat(M)) } } return g.push(function (e, t) { var n = t ? " mm".concat(String.fromCharCode(178)) : " px".concat(String.fromCharCode(178)); return "Area: ".concat($n(e.toFixed(2))).concat(n) }(a, u)), f.forEach(function (e) { return g.push(e) }), g } function ta(e, t) { var n = na(e, t); return { left: Math.round(Math.min(e.x - n, t.x)), top: Math.round(Math.min(e.y - n, t.y)), width: 2 * n, height: 2 * n } } function na(e, t) { var n = e.x - t.x, a = e.y - t.y; return Math.sqrt(n * n + a * a) } var aa = function (e) { function t() { var e, n = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}; i()(this, t); var a = { name: "CobbAngle", supportedInteractionTypes: ["Mouse", "Touch"], svgCursor: jt }; return (e = c()(this, d()(t).call(this, n, a))).hasIncomplete = !1, e.throttledUpdateCachedStats = hn(e.updateCachedStats, 110), e } return v()(t, e), s()(t, [{ key: "createNewMeasurement", value: function (e) { return this.hasIncomplete = !0, { visible: !0, active: !0, color: void 0, invalidated: !0, complete: !1, value: "", handles: { start: { x: e.currentPoints.image.x, y: e.currentPoints.image.y, highlight: !0, active: !1 }, end: { x: e.currentPoints.image.x, y: e.currentPoints.image.y, highlight: !0, active: !0 }, start2: { x: e.currentPoints.image.x, y: e.currentPoints.image.y, highlight: !0, active: !1, drawnIndependently: !0 }, end2: { x: e.currentPoints.image.x + 1, y: e.currentPoints.image.y, highlight: !0, active: !1, drawnIndependently: !0 }, textBox: { active: !1, hasMoved: !1, movesIndependently: !1, drawnIndependently: !0, allowedOutsideImage: !0, hasBoundingBox: !0 } } } } }, { key: "pointNearTool", value: function (e, t, n) { return !1 !== t.visible && (!this.hasIncomplete && (Ut(e, t.handles.start, t.handles.end, n) < 25 || Ut(e, t.handles.start2, t.handles.end2, n) < 25)) } }, { key: "updateCachedStats", value: function (e, t, n) { var a = cn(e), o = a.rowPixelSpacing, i = a.colPixelSpacing, r = (Math.ceil(n.handles.start.x) - Math.ceil(n.handles.end.x)) * i, s = (Math.ceil(n.handles.start.y) - Math.ceil(n.handles.end.y)) * o, l = (Math.ceil(n.handles.start2.x) - Math.ceil(n.handles.end2.x)) * i, c = (Math.ceil(n.handles.start2.y) - Math.ceil(n.handles.end2.y)) * o, u = Math.acos(Math.abs((r * l + s * c) / (Math.sqrt(r * r + s * s) * Math.sqrt(l * l + c * c)))); u *= 180 / Math.PI, n.rAngle = Nt(u, 2), n.invalidated = !1 } }, { key: "renderToolData", value: function (e) { var t = this, n = e.detail, a = this.configuration, o = a.handleRadius, i = a.drawHandlesOnHover, r = xe(e.currentTarget, this.name); if (r) for (var s = Dt(n.canvasContext.canvas), l = at.getToolWidth(), c = wt.getFont(), u = function (e) { var a = r.data[e]; if (!1 === a.visible) return "continue"; lt(s, function (e) { At(e, t.configuration); var r = st.getColorIfActive(a); ut(e, n.element, a.handles.start, a.handles.end, { color: r }), a.complete && ut(e, n.element, a.handles.start2, a.handles.end2, { color: r }); var s = { color: r, handleRadius: o, drawHandlesIfActive: i }; Tt(e, n, a.handles, s), e.fillStyle = r; var u = a.value; if (!a.handles.textBox.hasMoved) { var d = { x: (a.handles.start.x + a.handles.end.x) / 2, y: (a.handles.start.y + a.handles.end.y) / 2 - 10 }; e.font = c, a.handles.textBox.x = d.x, a.handles.textBox.y = d.y } Pt(e, n.element, a.handles.textBox, u, a.handles, h, r, l, 0, !0) }) }, d = 0; d < r.data.length; d++)u(d); function h(e) { return [e.start, e.start2, e.end, e.end2] } } }, { key: "getIncomplete", value: function (e) { var t = xe(e, this.name); if (t && Array.isArray(t.data)) return t.data.find(function (e) { return !1 === e.complete }) } }, { key: "addNewMeasurement", value: function (e, t) { var n = this; e.preventDefault(), e.stopPropagation(); var a, o, i, r = e.detail, s = e.detail.element, l = this.getIncomplete(s); l ? ((a = l).complete = !0, a.handles.start2 = { x: r.currentPoints.image.x, y: r.currentPoints.image.y, drawnIndependently: !1, highlight: !0, active: !1 }, a.handles.end2 = { x: r.currentPoints.image.x, y: r.currentPoints.image.y, drawnIndependently: !1, highlight: !0, active: !0 }, o = a.handles.end2, this.hasIncomplete = !1, i = Object.assign({ doneMovingCallback: function () { var e = T.MEASUREMENT_COMPLETED, t = { toolType: n.name, element: s, measurementData: a }; C(s, e, t) } }, this.options)) : (a = this.createNewMeasurement(r), ye(s, this.name, a), o = a.handles.end, i = this.options), p.cornerstone.updateImage(s), Xe(r, this.name, a, o, i, t) } }, { key: "onMeasureModified", value: function (e) { var t = e.detail.element, n = p.cornerstone.getEnabledElement(t).image, a = cn(n), o = a.rowPixelSpacing, i = a.colPixelSpacing; if (e.detail.toolName === this.name) { var r = e.detail.measurementData; !0 === r.invalidated && (r.rAngle ? this.throttledUpdateCachedStats(n, t, r) : this.updateCachedStats(n, t, r)); var s = r.rAngle; r.value = "", Number.isNaN(s) || (r.value = function (e, t, n) { var a = t && n ? "" : " (isotropic)"; return e.toString() + String.fromCharCode(parseInt("00B0", 16)) + a }(s, o, i)) } } }, { key: "activeCallback", value: function (e) { this.onMeasureModified = this.onMeasureModified.bind(this), e.addEventListener(T.MEASUREMENT_MODIFIED, this.onMeasureModified) } }, { key: "passiveCallback", value: function (e) { this.onMeasureModified = this.onMeasureModified.bind(this), e.addEventListener(T.MEASUREMENT_MODIFIED, this.onMeasureModified) } }, { key: "enabledCallback", value: function (e) { e.removeEventListener(T.MEASUREMENT_MODIFIED, this.onMeasureModified) } }, { key: "disabledCallback", value: function (e) { e.removeEventListener(T.MEASUREMENT_MODIFIED, this.onMeasureModified) } }]), t }(et), oa = V("tools:annotation:EllipticalRoiTool"), ia = function (e) { function t() { var e, n = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}; i()(this, t); var a = { name: "EllipticalRoi", supportedInteractionTypes: ["Mouse", "Touch"], configuration: {}, svgCursor: Gt }; return (e = c()(this, d()(t).call(this, n, a))).throttledUpdateCachedStats = hn(e.updateCachedStats, 110), e } return v()(t, e), s()(t, [{ key: "createNewMeasurement", value: function (e) { if (e && e.currentPoints && e.currentPoints.image) return { visible: !0, active: !0, color: void 0, invalidated: !0, handles: { start: { x: e.currentPoints.image.x, y: e.currentPoints.image.y, highlight: !0, active: !1 }, end: { x: e.currentPoints.image.x, y: e.currentPoints.image.y, highlight: !0, active: !0 }, initialRotation: e.viewport.rotation, textBox: { active: !1, hasMoved: !1, movesIndependently: !1, drawnIndependently: !0, allowedOutsideImage: !0, hasBoundingBox: !0 } } }; oa.error("required eventData not supplied to tool ".concat(this.name, "'s createNewMeasurement")) } }, { key: "pointNearTool", value: function (e, t, n, a) { var o = t && t.handles && t.handles.start && t.handles.end; if (o || oa.warn("invalid parameters supplied to tool ".concat(this.name, "'s pointNearTool")), !o || !1 === t.visible) return !1; var i = "mouse" === a ? 15 : 25, r = p.cornerstone.pixelToCanvas(e, t.handles.start), s = p.cornerstone.pixelToCanvas(e, t.handles.end), l = { left: Math.min(r.x, s.x) + i / 2, top: Math.min(r.y, s.y) + i / 2, width: Math.abs(r.x - s.x) - i, height: Math.abs(r.y - s.y) - i }, c = { left: Math.min(r.x, s.x) - i / 2, top: Math.min(r.y, s.y) - i / 2, width: Math.abs(r.x - s.x) + i, height: Math.abs(r.y - s.y) + i }, u = Yn(l, n); return !(!Yn(c, n) || u) } }, { key: "updateCachedStats", value: function (e, t, n) { var a = (p.cornerstone.metaData.get("generalSeriesModule", e.imageId) || {}).modality, o = cn(e), i = function (e, t, n, a, o) { var i, r = sa(n.start, n.end), s = p.cornerstone.getPixels(t, r.left, r.top, r.width, r.height), l = Xn(s, r); "PT" === a && (i = { mean: Wn(e, l.mean, !0) || 0, stdDev: Wn(e, l.stdDev, !0) || 0 }); return { area: Math.PI * (r.width * (o.colPixelSpacing || 1) / 2) * (r.height * (o.rowPixelSpacing || 1) / 2) || 0, count: l.count || 0, mean: l.mean || 0, variance: l.variance || 0, stdDev: l.stdDev || 0, min: l.min || 0, max: l.max || 0, meanStdDevSUV: i } }(e, t, n.handles, a, o); n.cachedStats = i, n.invalidated = !1 } }, { key: "renderToolData", value: function (e) { var t = this, n = xe(e.currentTarget, this.name); if (n) { var a = e.detail, o = a.image, i = a.element, r = at.getToolWidth(), s = this.configuration, l = s.handleRadius, c = s.drawHandlesOnHover, u = Dt(a.canvasContext.canvas), d = cn(o), h = d.rowPixelSpacing, v = d.colPixelSpacing, g = (p.cornerstone.metaData.get("generalSeriesModule", o.imageId) || {}).modality, f = h && v; lt(u, function (e) { for (var s = 0; s < n.data.length; s++) { var u = n.data[s]; if (!1 !== u.visible) { var d = st.getColorIfActive(u), h = { color: d, handleRadius: l, drawHandlesIfActive: c }; if (At(e, t.configuration), xt(e, i, u.handles.start, u.handles.end, { color: d }, "pixel", u.handles.initialRotation), Tt(e, a, u.handles, h), !0 === u.invalidated && (u.cachedStats ? t.throttledUpdateCachedStats(o, i, u) : t.updateCachedStats(o, i, u)), !u.handles.textBox.hasMoved) { var v = Zn(a.viewport, u.handles); Object.assign(u.handles.textBox, v) } var m = ra(e, o.color, u.cachedStats, g, f, t.configuration); Pt(e, i, u.handles.textBox, m, u.handles, function (e) { return t = e.start, n = e.end, a = sa(t, n), o = a.left, i = a.top, r = a.width, s = a.height, [{ x: o + r / 2, y: i }, { x: o, y: i + s / 2 }, { x: o + r / 2, y: i + s }, { x: o + r, y: i + s / 2 }]; var t, n, a, o, i, r, s }, d, r, 10, !0) } } }) } } }]), t }(et); function ra(e, t) { var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {}, a = n.area, o = n.mean, i = n.stdDev, r = n.min, s = n.max, l = n.meanStdDevSUV, c = arguments.length > 3 ? arguments[3] : void 0, u = arguments.length > 4 ? arguments[4] : void 0, d = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : {}, h = d.showMinMax || !1, v = !1 !== d.showHounsfieldUnits, g = [], f = []; if (!t) { var m = l && 0 !== l.mean, p = "CT" === c && v ? " HU" : "", y = "Mean: ".concat($n(o.toFixed(2))).concat(p), x = "Std Dev: ".concat($n(i.toFixed(2))).concat(p); if (m) { for (var T = "".concat(" SUV: ").concat($n(l.mean.toFixed(2))), C = "".concat(" SUV: ").concat($n(l.stdDev.toFixed(2))), b = Math.floor(e.measureText("".concat(x, "     ")).width); e.measureText(y).width < b;)y += " "; f.push("".concat(y).concat(T)), f.push("".concat(x, "     ").concat(C)) } else f.push("".concat(y, "     ").concat(x)); if (h) { for (var E = "Min: ".concat(r).concat(p), M = "Max: ".concat(s).concat(p), w = m ? Math.floor(e.measureText("".concat(x, "     ")).width) : Math.floor(e.measureText("".concat(y, "     ")).width); e.measureText(E).width < w;)E += " "; f.push("".concat(E).concat(M)) } } return g.push(function (e, t) { var n = t ? " mm".concat(String.fromCharCode(178)) : " px".concat(String.fromCharCode(178)); return "Area: ".concat($n(e.toFixed(2))).concat(n) }(a, u)), f.forEach(function (e) { return g.push(e) }), g } function sa(e, t) { return { left: Math.round(Math.min(e.x, t.x)), top: Math.round(Math.min(e.y, t.y)), width: Math.round(Math.abs(e.x - t.x)), height: Math.round(Math.abs(e.y - t.y)) } } var la = function (e, t) { for (var n = !1, a = e.length - 1, o = 0; o < e.length; o++)ca(t, e[o], e[a]) && (n = !n), a = o; return n }; function ca(e, t, n) { return a = e.y, o = t.y, i = n.y, !(!(o < a && a < i || i < a && a < o) || !function (e, t, n) { if (t.x > e.x && n.x > e.x) return !0; if (t.x === n.x) return e.x < t.x; if (t.x > n.x) { var a = t; t = n, n = a } var o = function (e, t, n) { var a = (n.y - t.y) / (n.x - t.x); return { value: t.x + a * (e.x - t.x), gradient: a } }(e, t, n); return Math.sign(o.gradient) * e.y > o.value }(e, t, n)); var a, o, i } function ua(e, t, n, a) { la(e, t) && (n.value += a, n.squared += a * a, n.count++) } var da = function e(t, n) { i()(this, e), this.toolIndex = t, this.handleIndexArray = n }, ha = function e(t) { var n = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1], a = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2]; i()(this, e), this.x = t.x, this.y = t.y, this.highlight = n, this.active = a, this.lines = [] }; function va(e, t, n, a) { for (var o = e.length - 1, i = 0; i < e.length; i++)if (-1 === a.indexOf(i) && -1 === a.indexOf(o)) { if (ga(t, n, fa(e[o]), fa(e[i]))) return !0; o = i } else o = i; return !1 } function ga(e, t, n, a) { var o = !1, i = [ma(e, t, n), ma(e, t, a), ma(n, a, e), ma(n, a, t)]; return i[0] !== i[1] && i[2] !== i[3] || (0 === i[0] && pa(e, n, t) ? o = !0 : 0 === i[1] && pa(e, a, t) ? o = !0 : 0 === i[2] && pa(n, e, a) ? o = !0 : 0 === i[3] && pa(n, t, a) && (o = !0), o) } function fa(e) { return { x: e.x, y: e.y } } function ma(e, t, n) { var a = (t.y - e.y) * (n.x - t.x) - (t.x - e.x) * (n.y - t.y); return 0 === a ? 0 : a > 0 ? 1 : 2 } function pa(e, t, n) { return t.x <= Math.max(e.x, n.x) && t.x >= Math.min(e.x, n.x) && t.y <= Math.max(e.y, n.y) && t.y >= Math.min(e.y, n.y) } var ya = { newHandle: function (e, t) { var n = t.length - 1; return va(t, fa(t[n]), fa(e), [n]) }, end: function (e) { var t = e.length - 1; return va(e, fa(e[t]), fa(e[0]), [t, 0]) }, modify: function (e, t) { var n = fa(e[t]), a = t - 1; 0 === t && (a = e.length - 1); var o = fa(e[a]); return !!va(e, n, o, [t, a]) || va(e, n, o = fa(e[a = t === e.length - 1 ? 0 : t + 1]), [t, a]) } }, xa = function () { function e(t, n) { i()(this, e), this._eventData = t, this._toolName = n } return s()(e, [{ key: "findLine", value: function () { var e = this.findTool(); if (null === e) return null; var t = this._getCloseLinesInTool(e); return t ? this._findCorrectLine(e, t) : null } }, { key: "findTool", value: function () { return this._toolData = xe(this._eventData.element, this._toolName), this._mousePoint = this._eventData.currentPoints.canvas, this._toolData ? this._nearestHandleToPointAllTools().toolIndex : null } }, { key: "_nearestHandleToPointAllTools", value: function () { for (var e = this._toolData, t = { toolIndex: null, handleIndex: null, distance: 1 / 0 }, n = 0; n < e.data.length; n++) { var a = this._nearestHandleToPoint(n); null !== a && (a.distance < t.distance && (t = a)) } return t } }, { key: "_nearestHandleToPoint", value: function (e) { var t = this._eventData, n = this._toolData.data[e], a = n.handles.points; if (void 0 === a) return null; if (!1 === n.visible) return null; for (var o = { toolIndex: e, handleIndex: null, distance: 1 / 0 }, i = 0; i < a.length; i++) { var r = p.cornerstone.pixelToCanvas(t.element, a[i]), s = p.cornerstoneMath.point.distance(r, this._mousePoint); s < o.distance && (o.handleIndex = i, o.distance = s) } return o } }, { key: "_getCloseLinesInTool", value: function (t) { for (var n = this._toolData.data[t].handles.points, a = [], o = 0; o < n.length; o++) { var i = e.getNextHandleIndex(o, n.length); this._distanceOfPointfromLine(n[o], n[i]) < 10 && a.push([o, i]) } return a } }, { key: "_findCorrectLine", value: function (e, t) { for (var n = 0; n < t.length; n++)if (this._pointProjectsToLineSegment(e, t[n])) return new da(e, t[n]); return null } }, { key: "_pointProjectsToLineSegment", value: function (t, n) { var a = this._eventData, o = this._toolData.data[t], i = o.handles.points; if (void 0 !== o.handles.points) { if (!1 === o.visible) return !1; var r = i[n[0]], s = i[n[1]], l = e.getCanvasPointsFromHandles(r, s, a.element), c = e.getLineAsVector(l), u = this._getLineOriginToMouseAsVector(l), d = (u[0] * c[0] + u[1] * c[1]) / c.magnitude; return d > 0 && d < c.magnitude } } }, { key: "_getLineOriginToMouseAsVector", value: function (e) { return [this._mousePoint.x - e[0].x, this._mousePoint.y - e[0].y] } }, { key: "_distanceOfPointfromLine", value: function (e, t) { var n = this._eventData, a = p.cornerstone.pixelToCanvas(n.element, e), o = p.cornerstone.pixelToCanvas(n.element, t), i = this._mousePoint; return Math.abs((o.y - a.y) * i.x - (o.x - a.x) * i.y + o.x * a.y - o.y * a.x) / p.cornerstoneMath.point.distance(a, o) } }], [{ key: "getCanvasPointsFromHandles", value: function (e, t, n) { var a = []; return e.x < t.x ? (a.push(p.cornerstone.pixelToCanvas(n, e)), a.push(p.cornerstone.pixelToCanvas(n, t))) : (a.push(p.cornerstone.pixelToCanvas(n, t)), a.push(p.cornerstone.pixelToCanvas(n, e))), a } }, { key: "getLineAsVector", value: function (e) { var t = [e[1].x - e[0].x, e[1].y - e[0].y]; return t.magnitude = p.cornerstoneMath.point.distance(e[0], e[1]), t } }, { key: "getNextHandleIndex", value: function (e, t) { return e < t - 1 ? e + 1 : 0 } }]), e }(), Ta = function (e, t) { t === e.length - 1 ? e[t].lines.push(e[0]) : e[t].lines.push(e[t + 1]) }; var Ca = { calculateFreehandStatistics: function (e, t, n) { var a = { count: 0, mean: 0, variance: 0, stdDev: 0 }, o = function (e, t, n) { for (var a = { value: 0, squared: 0, count: 0 }, o = 0, i = t.top; i < t.top + t.height; i++)for (var r = t.left; r < t.left + t.width; r++) { var s = { x: r, y: i }; ua(n, s, a, e[o]), o++ } return a }(e, t, n); return 0 === o.count ? a : (a.count = o.count, a.mean = o.value / o.count, a.variance = o.squared / o.count - a.mean * a.mean, a.stdDev = Math.sqrt(a.variance), a) }, ClickedLineData: da, freehandArea: function (e, t) { var n = 0, a = e.length - 1; t = t || 1; for (var o = 0; o < e.length; o++)n += (e[a].x + e[o].x) * (e[a].y - e[o].y), a = o; return Math.abs(n * t / 2) }, FreehandHandleData: ha, freehandIntersect: ya, FreehandLineFinder: xa, insertOrDelete: function (e, t) { var n = e.detail; if (t && null !== t.handleNearby) { var a = { toolIndex: t.toolIndex, handleIndex: t.handleNearby }; (function (e, t) { var n = xe(e.element, this.name); if (void 0 !== n) { var a = t.handleIndex, o = t.toolIndex, i = n.data[o], r = i.handles.points; r.length <= 3 || (a === r.length - 1 ? (r[a - 1].lines.pop(), r[a - 1].lines.push(r[0])) : 0 === a ? (r[r.length - 1].lines.pop(), r[r.length - 1].lines.push(r[a + 1])) : (r[a - 1].lines.pop(), r[a - 1].lines.push(r[a + 1])), r.splice(a, 1), i.invalidated = !0, i.active = !0, i.highlight = !0, p.cornerstone.updateImage(e.element)) } }).call(this, n, a) } else { var o = new xa(n, this.name).findLine(); o && function (e, t) { var n = xe(e.element, this.name); if (void 0 !== n) { var a = n.data[t.toolIndex], o = function (e) { for (var t = e.handleIndexArray, n = 1 / 0, a = t.includes(0), o = 0; o < t.length; o++) { var i = t[o]; 0 !== i && i < n && (n = i) } return a && 1 === n && (n = 0), ++n }(t); if (o !== 1 / 0) { var i = new ha(e.currentPoints.image), r = a.handles.points; r.splice(o, 0, i), r[o - 1].lines.pop(), r[o - 1].lines.push(e.currentPoints.image), Ta(r, o), a.active = !0, a.highlight = !0, a.invalidated = !0, p.cornerstone.updateImage(e.element) } } }.call(this, n, o) } }, pointInFreehand: la, addLine: Ta }, ba = V("tools:annotation:FreehandMouseTool"), Ea = Ca.insertOrDelete, Ma = Ca.freehandArea, wa = Ca.calculateFreehandStatistics, Sa = Ca.freehandIntersect, ka = Ca.FreehandHandleData, Ia = function (e) { function t() { var e, n = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}; i()(this, t); var a = { name: "FreehandMouse", supportedInteractionTypes: ["Mouse", "Touch"], configuration: { mouseLocation: { handles: { start: { highlight: !0, active: !0 } } }, spacing: 1, activeHandleRadius: 3, completeHandleRadius: 6, completeHandleRadiusTouch: 28, alwaysShowHandles: !1, invalidColor: "crimson", currentHandle: 0, currentTool: -1 }, svgCursor: Yt }; return (e = c()(this, d()(t).call(this, n, a))).isMultiPartTool = !0, e._drawing = !1, e._dragging = !1, e._modifying = !1, e._drawingMouseDownCallback = e._drawingMouseDownCallback.bind(De()(e)), e._drawingMouseMoveCallback = e._drawingMouseMoveCallback.bind(De()(e)), e._drawingMouseDragCallback = e._drawingMouseDragCallback.bind(De()(e)), e._drawingMouseUpCallback = e._drawingMouseUpCallback.bind(De()(e)), e._drawingMouseDoubleClickCallback = e._drawingMouseDoubleClickCallback.bind(De()(e)), e._editMouseUpCallback = e._editMouseUpCallback.bind(De()(e)), e._editMouseDragCallback = e._editMouseDragCallback.bind(De()(e)), e._drawingTouchStartCallback = e._drawingTouchStartCallback.bind(De()(e)), e._drawingTouchDragCallback = e._drawingTouchDragCallback.bind(De()(e)), e._drawingDoubleTapClickCallback = e._drawingDoubleTapClickCallback.bind(De()(e)), e._editTouchDragCallback = e._editTouchDragCallback.bind(De()(e)), e.throttledUpdateCachedStats = hn(e.updateCachedStats, 110), e } return v()(t, e), s()(t, [{ key: "createNewMeasurement", value: function (e) { if (e && e.currentPoints && e.currentPoints.image) { var t = { visible: !0, active: !0, invalidated: !0, color: void 0, handles: { points: [] } }; return t.handles.textBox = { active: !1, hasMoved: !1, movesIndependently: !1, drawnIndependently: !0, allowedOutsideImage: !0, hasBoundingBox: !0 }, t } ba.error("required eventData not supplied to tool ".concat(this.name, "'s createNewMeasurement")) } }, { key: "pointNearTool", value: function (e, t, n) { var a = t && t.handles && t.handles.points; if (!a) throw new Error("invalid parameters supplied to tool ".concat(this.name, "'s pointNearTool")); return !(!a || !1 === t.visible) && void 0 !== this._pointNearHandle(e, t, n) } }, { key: "distanceFromPoint", value: function (e, t, n) { for (var a = 1 / 0, o = 0; o < t.handles.points.length; o++) { var i = p.cornerstoneMath.point.distance(t.handles.points[o], n); a = Math.min(a, i) } return a === 1 / 0 ? -1 : a } }, { key: "distanceFromPointCanvas", value: function (e, t, n) { var a = 1 / 0; if (!t) return -1; for (var o = p.cornerstone.pixelToCanvas(e, n), i = t.handles.points, r = 0; r < i.length; r++) { var s = p.cornerstone.pixelToCanvas(e, i[r]), l = p.cornerstoneMath.point.distance(s, o); a = Math.min(a, l) } return a === 1 / 0 ? -1 : a } }, { key: "updateCachedStats", value: function (e, t, n) { for (var a, o, i, r = p.cornerstone.metaData.get("generalSeriesModule", e.imageId), s = r ? r.modality : null, l = n.handles.points, c = { left: l[0].x, right: l[0].x, bottom: l[0].y, top: l[0].x }, u = 0; u < l.length; u++)c.left = Math.min(c.left, l[u].x), c.right = Math.max(c.right, l[u].x), c.bottom = Math.min(c.bottom, l[u].y), c.top = Math.max(c.top, l[u].y); var d = { left: c.left, top: c.bottom, width: Math.abs(c.right - c.left), height: Math.abs(c.top - c.bottom) }; if (n.polyBoundingBox = d, !e.color) { var h = p.cornerstone.getPixels(t, d.left, d.top, d.width, d.height); o = wa.call(this, h, d, n.handles.points), "PT" === s && (i = { mean: Wn(e, (o.mean - e.intercept) / e.slope), stdDev: Wn(e, (o.stdDev - e.intercept) / e.slope) }), o && !isNaN(o.mean) && (n.meanStdDev = o, n.meanStdDevSUV = i) } var v = (e.columnPixelSpacing || 1) * (e.rowPixelSpacing || 1); a = Ma(n.handles.points, v), isNaN(a) || (n.area = a), n.invalidated = !1 } }, { key: "renderToolData", value: function (e) { var t = this, n = e.detail, a = xe(e.currentTarget, this.name); if (a) for (var o = n.image, i = n.element, r = this.configuration, s = p.cornerstone.metaData.get("generalSeriesModule", o.imageId), l = s ? s.modality : null, c = Dt(n.canvasContext.canvas), u = at.getToolWidth(), d = function (e) { var s = a.data[e]; if (!1 === s.visible) return "continue"; lt(c, function (e) { var a, c = st.getColorIfActive(s); if (s.active ? s.handles.invalidHandlePlacement ? (c = r.invalidColor, a = r.invalidColor) : (c = st.getColorIfActive(s), a = st.getFillColor()) : a = st.getToolColor(), s.handles.points.length) for (var d = 0; d < s.handles.points.length; d++) { var h = En()(s.handles.points[d].lines); d !== s.handles.points.length - 1 || s.polyBoundingBox || h.push(r.mouseLocation.handles.start), dt(e, n.element, s.handles.points[d], h, { color: c }) } var g = { color: c, fill: a }; if ((r.alwaysShowHandles || s.active && s.polyBoundingBox) && (g.handleRadius = r.activeHandleRadius, Tt(e, n, s.handles.points, g)), s.canComplete) { g.handleRadius = r.completeHandleRadius; var f = s.handles.points[0]; Tt(e, n, [f], g) } if (s.active && !s.polyBoundingBox) { g.handleRadius = r.activeHandleRadius, Tt(e, n, r.mouseLocation.handles, g); var m = s.handles.points[0]; Tt(e, n, [m], g) } if (!0 !== s.invalidated || s.active || (s.meanStdDev && s.meanStdDevSUV && s.area ? t.throttledUpdateCachedStats(o, i, s) : t.updateCachedStats(o, i, s)), s.polyBoundingBox && !s.handles.textBox.freehand) { s.handles.textBox.hasMoved || (s.handles.textBox.x = s.polyBoundingBox.left + s.polyBoundingBox.width, s.handles.textBox.y = s.polyBoundingBox.top + s.polyBoundingBox.height / 2); var p = function (e) { var t = e.meanStdDev, n = e.meanStdDevSUV, a = e.area, i = []; if (t && void 0 !== t.mean) { var r = ""; "CT" === l && (r = " HU"); var s = "Mean: ".concat($n(t.mean.toFixed(2))).concat(r), c = "StdDev: ".concat($n(t.stdDev.toFixed(2))).concat(r); if (n && void 0 !== n.mean) { s += " SUV: " + $n(n.mean.toFixed(2)), c += " SUV: " + $n(n.stdDev.toFixed(2)) } i.push(s), i.push(c) } if (a) { var u = " mm".concat(String.fromCharCode(178)); o.rowPixelSpacing && o.columnPixelSpacing || (u = " pixels".concat(String.fromCharCode(178))); var d = "Area: ".concat($n(a.toFixed(2))).concat(u); i.push(d) } return i }.call(t, s); Pt(e, i, s.handles.textBox, p, s.handles.points, v, c, u, 0, !0) } }) }, h = 0; h < a.data.length; h++)d(h); function v(e) { return e } } }, { key: "addNewMeasurement", value: function (e) { var t = e.detail; this._startDrawing(e), this._addPoint(t), _a(e) } }, { key: "preMouseDownCallback", value: function (e) { var t = e.detail, n = this._pointNearHandleAllTools(t); return !!t.event.ctrlKey && (void 0 !== n && n.handleNearby.hasBoundingBox || Ea.call(this, e, n), _a(e), !0) } }, { key: "handleSelectedCallback", value: function (e, t, n) { var a = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : "mouse", o = e.detail, i = o.element, r = xe(o.element, this.name); if (n.hasBoundingBox) Ze(e, this, t, n, a); else { var s = this.configuration; s.dragOrigin = { x: n.x, y: n.y }; for (var l = 0; l < r.data.length; l++)for (var c = r.data[l].handles.points, u = 0; u < c.length; u++)c[u] === n && (s.currentHandle = u, s.currentTool = l); this._modifying = !0, this._activateModify(i), _a(e) } } }, { key: "_drawingMouseMoveCallback", value: function (e) { var t = e.detail, n = t.element, a = xe(t.element, this.name), o = this.configuration, i = o.currentTool, r = a.data[i], s = t.currentPoints.canvas; this._getMouseLocation(t), this._checkInvalidHandleLocation(r, t); var l = this._pointNearHandle(n, r, s), c = r.handles.points; void 0 !== l && !l.hasBoundingBox && l < c.length - 1 && (o.mouseLocation.handles.start.x = c[l].x, o.mouseLocation.handles.start.y = c[l].y), p.cornerstone.updateImage(t.element) } }, { key: "_drawingMouseDragCallback", value: function (e) { this.options.mouseButtonMask.includes(e.detail.buttons) && this._drawingDrag(e) } }, { key: "_drawingTouchDragCallback", value: function (e) { this._drawingDrag(e) } }, { key: "_drawingDrag", value: function (e) { var t = e.detail, n = xe(t.element, this.name), a = this.configuration.currentTool, o = n.data[a]; this._getMouseLocation(t), this._checkInvalidHandleLocation(o, t), this._addPointPencilMode(t, o.handles.points), this._dragging = !0, p.cornerstone.updateImage(t.element) } }, { key: "_drawingMouseUpCallback", value: function (e) { var t = e.detail; if (this._dragging) { this._dragging = !1; var n = t.element, a = this.configuration, o = a.currentTool, i = xe(t.element, this.name).data[o]; if (!Sa.end(i.handles.points) && i.canComplete) { var r = a.currentHandle; this._endDrawing(n, r) } _a(e) } } }, { key: "_drawingMouseDownCallback", value: function (e) { var t = e.detail; if (this.options.mouseButtonMask.includes(t.buttons)) { var n = t.element, a = t.currentPoints.canvas, o = this.configuration, i = o.currentTool, r = xe(t.element, this.name).data[i], s = this._pointNearHandle(n, r, a); if (!Sa.end(r.handles.points) && r.canComplete) { var l = o.currentHandle; this._endDrawing(n, l) } else void 0 === s && this._addPoint(t); _a(e) } } }, { key: "_drawingTouchStartCallback", value: function (e) { var t = e.detail, n = t.element, a = t.currentPoints.canvas, o = this.configuration, i = o.currentTool, r = xe(t.element, this.name).data[i], s = this._pointNearHandle(n, r, a); if (!Sa.end(r.handles.points) && r.canComplete) { var l = o.currentHandle; this._endDrawing(n, l) } else void 0 === s && this._addPoint(t); _a(e) } }, { key: "completeDrawing", value: function (e) { if (this._drawing) { var t = xe(e, this.name), n = this.configuration, a = t.data[n.currentTool]; if (!Sa.end(a.handles.points) && a.handles.points.length >= 2) { var o = n.currentHandle; a.polyBoundingBox = {}, this._endDrawing(e, o) } } } }, { key: "_drawingMouseDoubleClickCallback", value: function (e) { var t = e.detail; this.completeDrawing(t.element), _a(e) } }, { key: "_drawingDoubleTapClickCallback", value: function (e) { var t = e.detail; this.completeDrawing(t.element), _a(e) } }, { key: "_editMouseDragCallback", value: function (e) { var t = e.detail; if (this.options.mouseButtonMask.includes(t.buttons)) { var n, a = xe(t.element, this.name), o = this.configuration, i = a.data[o.currentTool], r = o.currentHandle, s = i.handles.points; if (this._getMouseLocation(t), i.handles.invalidHandlePlacement = Sa.modify(s, r), i.active = !0, i.highlight = !0, s[r].x = o.mouseLocation.handles.start.x, s[r].y = o.mouseLocation.handles.start.y, n = this._getPrevHandleIndex(r, s), r >= 0) { var l = s[n].lines.length - 1, c = s[n].lines[l]; c.x = o.mouseLocation.handles.start.x, c.y = o.mouseLocation.handles.start.y } p.cornerstone.updateImage(t.element) } } }, { key: "_editTouchDragCallback", value: function (e) { var t, n = e.detail, a = xe(n.element, this.name), o = this.configuration, i = a.data[o.currentTool], r = o.currentHandle, s = i.handles.points; if (this._getMouseLocation(n), i.handles.invalidHandlePlacement = Sa.modify(s, r), i.active = !0, i.highlight = !0, s[r].x = o.mouseLocation.handles.start.x, s[r].y = o.mouseLocation.handles.start.y, t = this._getPrevHandleIndex(r, s), r >= 0) { var l = s[t].lines.length - 1, c = s[t].lines[l]; c.x = o.mouseLocation.handles.start.x, c.y = o.mouseLocation.handles.start.y } p.cornerstone.updateImage(n.element) } }, { key: "_getPrevHandleIndex", value: function (e, t) { return 0 === e ? t.length - 1 : e - 1 } }, { key: "_editMouseUpCallback", value: function (e) { var t = e.detail, n = t.element, a = xe(t.element, this.name); this._deactivateModify(n), this._dropHandle(t, a), this._endDrawing(n), p.cornerstone.updateImage(t.element) } }, { key: "_dropHandle", value: function (e, t) { var n = this.configuration, a = n.currentTool, o = t.data[a].handles, i = o.points; if (o.invalidHandlePlacement) { var r, s = n.currentHandle, l = i[s]; if (0 === s) r = i[i.length - 1]; else r = i[s - 1]; l.x = n.dragOrigin.x, l.y = n.dragOrigin.y, r.lines[0] = l, o.invalidHandlePlacement = !1 } } }, { key: "_startDrawing", value: function (e) { var t, n = e.detail, a = this.createNewMeasurement(n), o = n.element, i = this.configuration; this._referencedElement = o, e.type === T.MOUSE_DOWN_ACTIVATE ? t = "Mouse" : e.type === T.TOUCH_START_ACTIVE && (t = "Touch"), this._activateDraw(o, t), this._getMouseLocation(n), ye(n.element, this.name, a); var r = xe(n.element, this.name); i.currentTool = r.data.length - 1, this._activeDrawingToolReference = r.data[i.currentTool] } }, { key: "_addPoint", value: function (e) { var t = xe(e.element, this.name), n = this.configuration, a = t.data[n.currentTool]; if (!a.handles.invalidHandlePlacement) { var o = new ka(e.currentPoints.image); a.handles.points.length && a.handles.points[n.currentHandle - 1].lines.push(e.currentPoints.image), a.handles.points.push(o), n.currentHandle += 1, p.cornerstone.updateImage(e.element), this.fireModifiedEvent(e.element, a) } } }, { key: "_addPointPencilMode", value: function (e, t) { var n = this, a = this.configuration, o = e.element, i = a.mouseLocation.handles.start; t.every(function (e) { return n._isDistanceLargerThanSpacing(o, e, i) }) && this._addPoint(e) } }, { key: "_endDrawing", value: function (e, t) { var n = xe(e, this.name), a = this.configuration, o = n.data[a.currentTool]; if (o.active = !1, o.highlight = !1, o.handles.invalidHandlePlacement = !1, void 0 !== t) { var i = o.handles.points; i[a.currentHandle - 1].lines.push(i[0]) } this._modifying && (this._modifying = !1, o.invalidated = !0), a.currentHandle = 0, a.currentTool = -1, o.canComplete = !1, this._drawing && this._deactivateDraw(e), p.cornerstone.updateImage(e), this.fireModifiedEvent(e, o), this.fireCompletedEvent(e, o) } }, { key: "_pointNearHandle", value: function (e, t, n) { if (void 0 !== t.handles && void 0 !== t.handles.points && !1 !== t.visible) { for (var a = 0; a < t.handles.points.length; a++) { var o = p.cornerstone.pixelToCanvas(e, t.handles.points[a]); if (p.cornerstoneMath.point.distance(o, n) < 6) return a } return t.handles.textBox && Ee(t.handles.textBox, n) ? t.handles.textBox : void 0 } } }, { key: "_pointNearHandleAllTools", value: function (e) { var t = e.element, n = e.currentPoints.canvas, a = xe(t, this.name); if (a) for (var o, i = 0; i < a.data.length; i++)if (void 0 !== (o = this._pointNearHandle(t, a.data[i], n))) return { handleNearby: o, toolIndex: i } } }, { key: "_getMouseLocation", value: function (e) { var t = this.configuration; t.mouseLocation.handles.start.x = e.currentPoints.image.x, t.mouseLocation.handles.start.y = e.currentPoints.image.y, _e(t.mouseLocation.handles.start, e.image) } }, { key: "_checkInvalidHandleLocation", value: function (e, t) { if (e.handles.points.length < 2) return !0; var n; n = this._dragging ? this._checkHandlesPencilMode(e, t) : this._checkHandlesPolygonMode(e, t), e.handles.invalidHandlePlacement = n } }, { key: "_checkHandlesPolygonMode", value: function (e, t) { var n = this.configuration, a = t.element, o = n.mouseLocation.handles.start, i = e.handles.points, r = !1; return e.canComplete = !1, this._isDistanceSmallerThanCompleteSpacingCanvas(a, i[0], o) && !Sa.end(i) && i.length > 2 ? (e.canComplete = !0, r = !1) : r = Sa.newHandle(o, i), r } }, { key: "_checkHandlesPencilMode", value: function (e, t) { var n = this.configuration.mouseLocation.handles.start, a = e.handles.points, o = Sa.newHandle(n, a); return !1 === o && (o = this._invalidHandlePencilMode(e, t)), o } }, { key: "_invalidHandlePencilMode", value: function (e, t) { var n = this.configuration, a = t.element, o = n.mouseLocation.handles.start, i = e.handles.points; if (this._isDistanceSmallerThanCompleteSpacingCanvas(a, i[0], o)) return e.canComplete = !0, !1; e.canComplete = !1; for (var r = 1; r < i.length - 1; r++)if (this._isDistanceSmallerThanSpacing(a, i[r], o)) return !0; return !1 } }, { key: "_isDistanceSmallerThanCompleteSpacingCanvas", value: function (e, t, n) { var a, o = p.cornerstone.pixelToCanvas(e, t), i = p.cornerstone.pixelToCanvas(e, n); return "Mouse" === this._drawingInteractionType ? a = this.configuration.completeHandleRadius : "Touch" === this._drawingInteractionType && (a = this.configuration.completeHandleRadiusTouch), this._compareDistanceToSpacing(e, o, i, "<", a) } }, { key: "_isDistanceSmallerThanSpacing", value: function (e, t, n) { return this._compareDistanceToSpacing(e, t, n, "<") } }, { key: "_isDistanceLargerThanSpacing", value: function (e, t, n) { return this._compareDistanceToSpacing(e, t, n, ">") } }, { key: "_compareDistanceToSpacing", value: function (e, t, n) { var a = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : ">", o = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : this.configuration.spacing; return ">" === a ? p.cornerstoneMath.point.distance(t, n) > o : p.cornerstoneMath.point.distance(t, n) < o } }, { key: "_activateDraw", value: function (e) { var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "Mouse"; this._drawing = !0, this._drawingInteractionType = t, _.isMultiPartToolActive = !0, H(this.element), e.addEventListener(T.MOUSE_DOWN, this._drawingMouseDownCallback), e.addEventListener(T.MOUSE_MOVE, this._drawingMouseMoveCallback), e.addEventListener(T.MOUSE_DOUBLE_CLICK, this._drawingMouseDoubleClickCallback), e.addEventListener(T.MOUSE_DRAG, this._drawingMouseDragCallback), e.addEventListener(T.MOUSE_UP, this._drawingMouseUpCallback), e.addEventListener(T.TOUCH_START, this._drawingMouseMoveCallback), e.addEventListener(T.TOUCH_START, this._drawingTouchStartCallback), e.addEventListener(T.TOUCH_DRAG, this._drawingTouchDragCallback), e.addEventListener(T.TOUCH_END, this._drawingMouseUpCallback), e.addEventListener(T.DOUBLE_TAP, this._drawingDoubleTapClickCallback), p.cornerstone.updateImage(e) } }, { key: "_deactivateDraw", value: function (e) { this._drawing = !1, _.isMultiPartToolActive = !1, this._activeDrawingToolReference = null, this._drawingInteractionType = null, R(this.element, this.svgCursor), e.removeEventListener(T.MOUSE_DOWN, this._drawingMouseDownCallback), e.removeEventListener(T.MOUSE_MOVE, this._drawingMouseMoveCallback), e.removeEventListener(T.MOUSE_DOUBLE_CLICK, this._drawingMouseDoubleClickCallback), e.removeEventListener(T.MOUSE_DRAG, this._drawingMouseDragCallback), e.removeEventListener(T.MOUSE_UP, this._drawingMouseUpCallback), e.removeEventListener(T.TOUCH_START, this._drawingTouchStartCallback), e.removeEventListener(T.TOUCH_DRAG, this._drawingTouchDragCallback), e.removeEventListener(T.TOUCH_START, this._drawingMouseMoveCallback), e.removeEventListener(T.TOUCH_END, this._drawingMouseUpCallback), p.cornerstone.updateImage(e) } }, { key: "_activateModify", value: function (e) { _.isToolLocked = !0, e.addEventListener(T.MOUSE_UP, this._editMouseUpCallback), e.addEventListener(T.MOUSE_DRAG, this._editMouseDragCallback), e.addEventListener(T.MOUSE_CLICK, this._editMouseUpCallback), e.addEventListener(T.TOUCH_END, this._editMouseUpCallback), e.addEventListener(T.TOUCH_DRAG, this._editTouchDragCallback), p.cornerstone.updateImage(e) } }, { key: "_deactivateModify", value: function (e) { _.isToolLocked = !1, e.removeEventListener(T.MOUSE_UP, this._editMouseUpCallback), e.removeEventListener(T.MOUSE_DRAG, this._editMouseDragCallback), e.removeEventListener(T.MOUSE_CLICK, this._editMouseUpCallback), e.removeEventListener(T.TOUCH_END, this._editMouseUpCallback), e.removeEventListener(T.TOUCH_DRAG, this._editTouchDragCallback), p.cornerstone.updateImage(e) } }, { key: "passiveCallback", value: function (e) { this._closeToolIfDrawing(e) } }, { key: "enabledCallback", value: function (e) { this._closeToolIfDrawing(e) } }, { key: "disabledCallback", value: function (e) { this._closeToolIfDrawing(e) } }, { key: "_closeToolIfDrawing", value: function (e) { if (this._drawing) { var t = this.configuration.currentHandle; this._endDrawing(e, t), p.cornerstone.updateImage(e) } } }, { key: "fireModifiedEvent", value: function (e, t) { C(e, T.MEASUREMENT_MODIFIED, { toolName: this.name, element: e, measurementData: t }) } }, { key: "fireCompletedEvent", value: function (e, t) { C(e, T.MEASUREMENT_COMPLETED, { toolName: this.name, element: e, measurementData: t }) } }, { key: "cancelDrawing", value: function (e) { if (this._drawing) { var t = xe(e, this.name), n = this.configuration, a = t.data[n.currentTool]; a.active = !1, a.highlight = !1, a.handles.invalidHandlePlacement = !1, n.currentHandle = 0, n.currentTool = -1, a.canComplete = !1, Te(e, this.name, a), this._deactivateDraw(e), p.cornerstone.updateImage(e) } } }, { key: "newImageCallback", value: function (e) { var t = this.configuration; if (this._drawing && this._activeDrawingToolReference) { var n = e.detail.element, a = this._activeDrawingToolReference; a.active = !1, a.highlight = !1, a.handles.invalidHandlePlacement = !1; var o = a.handles.points; o[t.currentHandle - 1].lines.push(o[0]), t.currentHandle = 0, t.currentTool = -1, a.canComplete = !1, this._deactivateDraw(n), p.cornerstone.updateImage(n) } } }, { key: "spacing", get: function () { return this.configuration.spacing }, set: function (e) { if ("number" != typeof e) throw new Error("Attempting to set freehand spacing to a value other than a number."); this.configuration.spacing = e, p.cornerstone.updateImage(this.element) } }, { key: "activeHandleRadius", get: function () { return this.configuration.activeHandleRadius }, set: function (e) { if ("number" != typeof e) throw new Error("Attempting to set freehand activeHandleRadius to a value other than a number."); this.configuration.activeHandleRadius = e, p.cornerstone.updateImage(this.element) } }, { key: "completeHandleRadius", get: function () { return this.configuration.completeHandleRadius }, set: function (e) { if ("number" != typeof e) throw new Error("Attempting to set freehand completeHandleRadius to a value other than a number."); this.configuration.completeHandleRadius = e, p.cornerstone.updateImage(this.element) } }, { key: "alwaysShowHandles", get: function () { return this.configuration.alwaysShowHandles }, set: function (e) { if ("boolean" != typeof e) throw new Error("Attempting to set freehand alwaysShowHandles to a value other than a boolean."); this.configuration.alwaysShowHandles = e, p.cornerstone.updateImage(this.element) } }, { key: "invalidColor", get: function () { return this.configuration.invalidColor }, set: function (e) { this.configuration.invalidColor = e, p.cornerstone.updateImage(this.element) } }]), t }(et); function _a(e) { e.stopImmediatePropagation(), e.stopPropagation(), e.preventDefault() } var Pa = V("tools:annotation:LengthTool"), Oa = function (e) { function t() { var e, n = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}; i()(this, t); var a = { name: "Length", supportedInteractionTypes: ["Mouse", "Touch"], svgCursor: Kt }; return (e = c()(this, d()(t).call(this, n, a))).throttledUpdateCachedStats = hn(e.updateCachedStats, 110), e } return v()(t, e), s()(t, [{ key: "createNewMeasurement", value: function (e) { if (e && e.currentPoints && e.currentPoints.image) { var t = e.currentPoints.image, n = t.x, a = t.y; return { visible: !0, active: !0, color: void 0, invalidated: !0, handles: { start: { x: n, y: a, highlight: !0, active: !1 }, end: { x: n, y: a, highlight: !0, active: !0 }, textBox: { active: !1, hasMoved: !1, movesIndependently: !1, drawnIndependently: !0, allowedOutsideImage: !0, hasBoundingBox: !0 } } } } Pa.error("required eventData not supplied to tool ".concat(this.name, "'s createNewMeasurement")) } }, { key: "pointNearTool", value: function (e, t, n) { return t && t.handles && t.handles.start && t.handles.end ? !1 !== t.visible && Ut(e, t.handles.start, t.handles.end, n) < 25 : (Pa.warn("invalid parameters supplied to tool ".concat(this.name, "'s pointNearTool")), !1) } }, { key: "updateCachedStats", value: function (e, t, n) { var a = cn(e), o = a.rowPixelSpacing, i = a.colPixelSpacing, r = (n.handles.end.x - n.handles.start.x) * (i || 1), s = (n.handles.end.y - n.handles.start.y) * (o || 1), l = Math.sqrt(r * r + s * s); n.length = l, n.invalidated = !1 } }, { key: "renderToolData", value: function (e) { var t = this, n = e.detail, a = this.configuration, o = a.handleRadius, i = a.drawHandlesOnHover, r = xe(e.currentTarget, this.name); if (r) for (var s = Dt(n.canvasContext.canvas), l = n.image, c = n.element, u = cn(l), d = u.rowPixelSpacing, h = u.colPixelSpacing, v = at.getToolWidth(), g = function (e) { var a = r.data[e]; if (!1 === a.visible) return "continue"; lt(s, function (e) { At(e, t.configuration); var r = st.getColorIfActive(a); ut(e, c, a.handles.start, a.handles.end, { color: r }); var s = { color: r, handleRadius: o, drawHandlesIfActive: i }; if (Tt(e, n, a.handles, s), !a.handles.textBox.hasMoved) { var u = { x: Math.max(a.handles.start.x, a.handles.end.x) }; u.x === a.handles.start.x ? u.y = a.handles.start.y : u.y = a.handles.end.y, a.handles.textBox.x = u.x, a.handles.textBox.y = u.y } !0 === a.invalidated && (a.length ? t.throttledUpdateCachedStats(l, c, a) : t.updateCachedStats(l, c, a)); var g = function (e, t, n) { var a = " mm"; t && n || (a = " pixels"); return "".concat(e.length.toFixed(2)).concat(a) }(a, d, h); Pt(e, c, a.handles.textBox, g, a.handles, m, r, v, 10, !0) }) }, f = 0; f < r.data.length; f++)g(f); function m(e) { var t = { x: (e.start.x + e.end.x) / 2, y: (e.start.y + e.end.y) / 2 }; return [e.start, t, e.end] } } }]), t }(et), Da = function (e, t, n, a, o) { if (!e) throw new Error("getRGBPixels: parameter element must not be undefined"); t = Math.round(t), n = Math.round(n); var i, r, s, l = p.cornerstone.getEnabledElement(e), c = [], u = 0, d = l.image.getPixelData(); if (l.image.color) for (r = 0; r < o; r++)for (s = 0; s < a; s++) { var h = d[i = 4 * ((r + n) * l.image.columns + (s + t))], v = d[i + 1], g = d[i + 2], f = d[i + 3]; c[u++] = h, c[u++] = v, c[u++] = g, c[u++] = f } return c }, La = V("tools:annotation:ProbeTool"), Aa = function (e) { function t() { var e, n = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}; i()(this, t); var a = { name: "Probe", supportedInteractionTypes: ["Mouse", "Touch"], svgCursor: Zt }; return (e = c()(this, d()(t).call(this, n, a))).throttledUpdateCachedStats = hn(e.updateCachedStats, 110), e } return v()(t, e), s()(t, [{ key: "createNewMeasurement", value: function (e) { if (e && e.currentPoints && e.currentPoints.image) return { visible: !0, active: !0, color: void 0, invalidated: !0, handles: { end: { x: e.currentPoints.image.x, y: e.currentPoints.image.y, highlight: !0, active: !0 } } }; La.error("required eventData not supplied to tool ".concat(this.name, "'s createNewMeasurement")) } }, { key: "pointNearTool", value: function (e, t, n) { var a = t && t.handles && t.handles.end; if (a || La.warn("invalid parameters supplied to tool ".concat(this.name, "'s pointNearTool")), !a || !1 === t.visible) return !1; var o = p.cornerstone.pixelToCanvas(e, t.handles.end); return p.cornerstoneMath.point.distance(o, n) < 5 } }, { key: "updateCachedStats", value: function (e, t, n) { var a = Math.round(n.handles.end.x), o = Math.round(n.handles.end.y), i = {}; a >= 0 && o >= 0 && a < e.columns && o < e.rows && (i.x = a, i.y = o, e.color ? i.storedPixels = Da(t, a, o, 1, 1) : (i.storedPixels = p.cornerstone.getStoredPixels(t, a, o, 1, 1), i.sp = i.storedPixels[0], i.mo = i.sp * e.slope + e.intercept, i.suv = Wn(e, i.sp))), n.cachedStats = i, n.invalidated = !1 } }, { key: "renderToolData", value: function (e) { var t = this, n = e.detail, a = this.configuration.handleRadius, o = xe(e.currentTarget, this.name); if (o) for (var i = Dt(n.canvasContext.canvas), r = n.image, s = n.element, l = wt.getFontSize(), c = function (e) { var c = o.data[e]; if (!1 === c.visible) return "continue"; lt(i, function (e) { var o, i, u = st.getColorIfActive(c); Tt(e, n, c.handles, { handleRadius: a, color: u }), !0 === c.invalidated && (c.cachedStats ? t.throttledUpdateCachedStats(r, s, c) : t.updateCachedStats(r, s, c)); var d = c.cachedStats, h = d.x, v = d.y, g = d.storedPixels, f = d.sp, m = d.mo, y = d.suv; if (h >= 0 && v >= 0 && h < r.columns && v < r.rows) { o = "".concat(h, ", ").concat(v), r.color ? i = "R: ".concat(g[0], " G: ").concat(g[1], " B: ").concat(g[2]) : (i = "SP: ".concat(f, " MO: ").concat(parseFloat(m.toFixed(3))), y && (i += " SUV: ".concat(parseFloat(y.toFixed(3))))); var x = { x: c.handles.end.x + 3, y: c.handles.end.y - 3 }, T = p.cornerstone.pixelToCanvas(n.element, x); _t(e, i, T.x, T.y + l + 5, u), _t(e, o, T.x, T.y, u) } }) }, u = 0; u < o.data.length; u++)c(u) } }]), t }(et), Ra = V("tools:annotation:RectangleRoiTool"), Ha = function (e) { function t() { var e, n = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}; i()(this, t); var a = { name: "RectangleRoi", supportedInteractionTypes: ["Mouse", "Touch"], configuration: {}, svgCursor: $t }; return (e = c()(this, d()(t).call(this, n, a))).throttledUpdateCachedStats = hn(e.updateCachedStats, 110), e } return v()(t, e), s()(t, [{ key: "createNewMeasurement", value: function (e) { if (e && e.currentPoints && e.currentPoints.image) return { visible: !0, active: !0, color: void 0, invalidated: !0, handles: { start: { x: e.currentPoints.image.x, y: e.currentPoints.image.y, highlight: !0, active: !1 }, end: { x: e.currentPoints.image.x, y: e.currentPoints.image.y, highlight: !0, active: !0 }, initialRotation: e.viewport.rotation, textBox: { active: !1, hasMoved: !1, movesIndependently: !1, drawnIndependently: !0, allowedOutsideImage: !0, hasBoundingBox: !0 } } }; Ra.error("required eventData not supplied to tool ".concat(this.name, "'s createNewMeasurement")) } }, { key: "pointNearTool", value: function (e, t, n, a) { var o = t && t.handles && t.handles.start && t.handles.end; if (o || Ra.warn("invalid parameters supplied to tool ".concat(this.name, "'s pointNearTool")), !o || !1 === t.visible) return !1; var i = "mouse" === a ? 15 : 25, r = p.cornerstone.pixelToCanvas(e, t.handles.start), s = p.cornerstone.pixelToCanvas(e, t.handles.end), l = { left: Math.min(r.x, s.x), top: Math.min(r.y, s.y), width: Math.abs(r.x - s.x), height: Math.abs(r.y - s.y) }; return p.cornerstoneMath.rect.distanceToPoint(l, n) < i } }, { key: "updateCachedStats", value: function (e, t, n) { var a = (p.cornerstone.metaData.get("generalSeriesModule", e.imageId) || {}).modality, o = cn(e), i = function (e, t, n, a, o) { var i, r = Ua(n.start, n.end), s = function (e, t) { for (var n = 0, a = 0, o = 0, i = 0, r = e ? e[0] : null, s = e ? e[0] : null, l = t.top; l < t.top + t.height; l++)for (var c = t.left; c < t.left + t.width; c++)n += e[i], a += e[i] * e[i], r = Math.min(r, e[i]), s = Math.max(s, e[i]), o++ , i++; if (0 === o) return { count: o, mean: 0, variance: 0, stdDev: 0, min: 0, max: 0 }; var u = n / o, d = a / o - u * u; return { count: o, mean: u, variance: d, stdDev: Math.sqrt(d), min: r, max: s } }(p.cornerstone.getPixels(t, r.left, r.top, r.width, r.height), r); "PT" === a && (i = { mean: Wn(e, s.mean, !0) || 0, stdDev: Wn(e, s.stdDev, !0) || 0 }); return { area: r.width * (o.colPixelSpacing || 1) * (r.height * (o.rowPixelSpacing || 1)) || 0, count: s.count || 0, mean: s.mean || 0, variance: s.variance || 0, stdDev: s.stdDev || 0, min: s.min || 0, max: s.max || 0, meanStdDevSUV: i } }(e, t, n.handles, a, o); n.cachedStats = i, n.invalidated = !1 } }, { key: "renderToolData", value: function (e) { var t = this, n = xe(e.currentTarget, this.name); if (n) { var a = e.detail, o = a.image, i = a.element, r = at.getToolWidth(), s = this.configuration, l = s.handleRadius, c = s.drawHandlesOnHover, u = Dt(a.canvasContext.canvas), d = cn(o), h = d.rowPixelSpacing, v = d.colPixelSpacing, g = (p.cornerstone.metaData.get("generalSeriesModule", o.imageId) || {}).modality, f = h && v; lt(u, function (e) { for (var s = 0; s < n.data.length; s++) { var u = n.data[s]; if (!1 !== u.visible) { var d = st.getColorIfActive(u), h = { color: d, handleRadius: l, drawHandlesIfActive: c }; if (At(e, t.configuration), Ot(e, i, u.handles.start, u.handles.end, { color: d }, "pixel", u.handles.initialRotation), Tt(e, a, u.handles, h), !0 === u.invalidated && (u.cachedStats ? t.throttledUpdateCachedStats(o, i, u) : t.updateCachedStats(o, i, u)), !u.handles.textBox.hasMoved) { var v = Zn(a.viewport, u.handles); Object.assign(u.handles.textBox, v) } var m = Na(e, o.color, u.cachedStats, g, f, t.configuration); Pt(e, i, u.handles.textBox, m, u.handles, function (e) { return t = e.start, n = e.end, a = Ua(t, n), o = a.left, i = a.top, r = a.width, s = a.height, [{ x: o + r / 2, y: i }, { x: o, y: i + s / 2 }, { x: o + r / 2, y: i + s }, { x: o + r, y: i + s / 2 }]; var t, n, a, o, i, r, s }, d, r, 10, !0) } } }) } } }]), t }(et); function Ua(e, t) { return { left: Math.min(e.x, t.x), top: Math.min(e.y, t.y), width: Math.abs(e.x - t.x), height: Math.abs(e.y - t.y) } } function Na(e, t, n, a, o) { var i = n.area, r = n.mean, s = n.stdDev, l = n.min, c = n.max, u = n.meanStdDevSUV, d = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : {}, h = d.showMinMax || !1, v = !1 !== d.showHounsfieldUnits, g = [], f = []; if (!t) { var m = u && 0 !== u.mean, p = "CT" === a && v ? " HU" : "", y = "Mean: ".concat($n(r.toFixed(2))).concat(p), x = "Std Dev: ".concat($n(s.toFixed(2))).concat(p); if (m) { for (var T = "".concat(" SUV: ").concat($n(u.mean.toFixed(2))), C = "".concat(" SUV: ").concat($n(u.stdDev.toFixed(2))), b = Math.floor(e.measureText("".concat(x, "     ")).width); e.measureText(y).width < b;)y += " "; f.push("".concat(y).concat(T)), f.push("".concat(x, "     ").concat(C)) } else f.push("".concat(y, "     ").concat(x)); if (h) { for (var E = "Min: ".concat(l).concat(p), M = "Max: ".concat(c).concat(p), w = m ? Math.floor(e.measureText("".concat(x, "     ")).width) : Math.floor(e.measureText("".concat(y, "     ")).width); e.measureText(E).width < w;)E += " "; f.push("".concat(E).concat(M)) } } return g.push(function (e, t) { var n = t ? " mm".concat(String.fromCharCode(178)) : " px".concat(String.fromCharCode(178)); return "Area: ".concat($n(e.toFixed(2))).concat(n) }(i, o)), f.forEach(function (e) { return g.push(e) }), g } var Ba = function (e) { function t() { var e, n = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}; i()(this, t); var a = { name: "TextMarker", supportedInteractionTypes: ["Mouse", "Touch"], configuration: { markers: [], current: "", ascending: !0, loop: !1, changeTextCallback: Fa }, svgCursor: Jt }; return (e = c()(this, d()(t).call(this, n, a))).touchPressCallback = e._changeText.bind(De()(e)), e.doubleClickCallback = e._changeText.bind(De()(e)), e } return v()(t, e), s()(t, [{ key: "createNewMeasurement", value: function (e) { var t = this.configuration; if (t.current) { var n = { visible: !0, active: !0, text: t.current, color: void 0, handles: { end: { x: e.currentPoints.image.x, y: e.currentPoints.image.y, highlight: !0, active: !0, hasBoundingBox: !0 } } }, a = { left: 0, top: 0, width: e.image.width, height: e.image.height }; if (p.cornerstoneMath.point.insideRect(n.handles.end, a)) { var o = t.markers.indexOf(t.current); return (o += t.ascending ? 1 : -1) >= t.markers.length ? o = t.loop ? 0 : -1 : o < 0 && (o = t.loop ? t.markers.length : -1), t.current = t.markers[o], n } } } }, { key: "pointNearTool", value: function (e, t, n) { if (!1 === t.visible) return !1; if (t.handles.end.boundingBox) { var a = p.cornerstoneMath.rect.distanceToPoint(t.handles.end.boundingBox, n), o = Ee(t.handles.end, n); return a < 10 || o } } }, { key: "updateCachedStats", value: function (e, t, n) { } }, { key: "renderToolData", value: function (e) { var t = e.detail, n = this.configuration, a = xe(t.element, this.name); if (a) for (var o = Dt(t.canvasContext.canvas), i = function (e) { var i = a.data[e]; if (!1 === i.visible) return "continue"; var r = st.getColorIfActive(i); lt(o, function (e) { At(e, n); var a = p.cornerstone.pixelToCanvas(t.element, i.handles.end); i.handles.end.boundingBox = _t(e, i.text, a.x, a.y - 10, r, { centering: { x: !0, y: !0 } }) }) }, r = 0; r < a.data.length; r++)i(r) } }, { key: "_changeText", value: function (e) { var t, n = e.detail, a = n.element, o = n.currentPoints; function i(e, t, n) { !0 === n ? Te(a, this.name, e) : e.text = t, e.active = !1, p.cornerstone.updateImage(a) } var r = this.configuration, s = o.canvas, l = xe(a, this.name); if (l) for (var c = 0; c < l.data.length; c++)if (t = l.data[c], this.pointNearTool(a, t, s)) return t.active = !0, p.cornerstone.updateImage(a), r.changeTextCallback(t, n, i), e.stopImmediatePropagation(), e.preventDefault(), void e.stopPropagation() } }]), t }(et), Fa = function (e, t, n) { n(e, prompt("Change your annotation:")) }; var Va = { drawBrushPixels: function (e, t, n) { var a = arguments.length > 3 && void 0 !== arguments[3] && arguments[3], o = t.pixelData; e.forEach(function (e) { var t, i = (t = e[0], e[1] * n + t); o[i] = a ? 0 : 1 }), a && !o.some(function (e) { return 0 !== e }) && delete t.pixelData }, drawBrushOnCanvas: function (e, t, n, a) { var o = p.cornerstone.pixelToCanvas(a, { x: 0, y: 0 }), i = p.cornerstone.pixelToCanvas(a, { x: 1, y: 1 }), r = i.x - o.x, s = i.y - o.y; lt(t, function (t) { e.forEach(function (e) { var o = p.cornerstone.pixelToCanvas(a, { x: e[0], y: e[1] }), i = { left: o.x, top: o.y, width: r, height: s }; kt(t, i, n) }) }) }, getCircle: function (e, t, n) { var a = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 0, o = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 0, i = Math.floor(a), r = Math.floor(o); if (1 === e) return [[i, r]]; for (var s = [], l = 0, c = -e; c <= e; c++) { var u = r + c; if (!(u > t || u < 0)) for (var d = -e; d <= e; d++) { var h = i + d; h >= n || h < 0 || d * d + c * c < e * e && (s[l++] = [i + d, r + c]) } } return s } }, qa = Va.drawBrushPixels, za = Va.getCircle, ja = D.modules.brush, Wa = function (e) { function t() { var e, n = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}; i()(this, t); var a = { name: "Brush", supportedInteractionTypes: ["Mouse", "Touch"], strategies: { overlapping: Ga, nonOverlapping: Ya }, defaultStrategy: "overlapping", configuration: { alwaysEraseOnClick: !1 } }; return (e = c()(this, d()(t).call(this, n, a))).touchDragCallback = e._paint.bind(De()(e)), e } return v()(t, e), s()(t, [{ key: "renderBrush", value: function (e) { var t, n = e.detail, a = n.viewport; if (this._drawing ? t = this._lastImageCoords : this._mouseUpRender ? (t = this._lastImageCoords, this._mouseUpRender = !1) : t = D.state.mousePositionImage, t) { var o = n.image, i = o.rows, r = o.columns, s = t, l = s.x, c = s.y; if (!(l < 0 || l > r || c < 0 || c > i)) { var u = ja.state.radius, d = n.canvasContext, h = n.element, v = ja.state.drawColorId, g = this._getBrushColor(v); d.setTransform(1, 0, 0, 1, 0, 0); var f = p.cornerstone, m = u * a.scale, y = f.pixelToCanvas(h, t); d.beginPath(), d.strokeStyle = g, d.ellipse(y.x, y.y, m, m, 0, 0, 2 * Math.PI), d.stroke() } } } }, { key: "_paint", value: function (e) { this.applyActiveStrategy(e, this.configuration), C(e.detail.element, T.MEASUREMENT_MODIFIED, e.detail), p.cornerstone.updateImage(e.detail.element) } }]), t }(He); function Ga(e, t) { var n = e.detail, a = n.element, o = n.image, i = o.rows, r = o.columns, s = n.currentPoints.image, l = s.x, c = s.y, u = xe(a, He.getReferencedToolDataName()); u || (ye(a, He.getReferencedToolDataName(), {}), u = xe(a, He.getReferencedToolDataName())); var d = u.data; if (!(l < 0 || l > r || c < 0 || c > i)) { var h = ja.state.radius; Xa(n, d, za(h, i, r, l, c), t) } } function Ya(e, t) { var n = e.detail, a = n.element, o = n.image, i = o.rows, r = o.columns, s = n.currentPoints.image, l = s.x, c = s.y, u = xe(a, He.getReferencedToolDataName()); u || (ye(a, He.getReferencedToolDataName(), {}), u = xe(a, He.getReferencedToolDataName())); var d = u.data, h = ja.state.drawColorId; if (!(l < 0 || l > r || c < 0 || c > i)) { for (var v = ja.state.radius, g = za(v, i, r, l, c), f = He.getNumberOfColors(), m = 0; m < f; m++)m !== h && d[m] && d[m].pixelData && (qa(g, d[m], r, !0), d[m].invalidated = !0); Xa(n, d, g, t) } } function Xa(e, t, n, a) { var o = a.alwaysEraseOnClick || function (e) { return e.event && e.event.ctrlKey || e.ctrlKey }(e), i = e.image.columns, r = ja.state.drawColorId; if (!o || t[r]) { if (t[r] || (t[r] = {}), !t[r].pixelData) { var s = p.cornerstone.getEnabledElement(e.element).uuid, l = ja.getters.imageBitmapCacheForElement(s); l && (l[r] = null), t[r].pixelData = new Uint8ClampedArray(e.image.width * e.image.height) } var c = t[r]; qa(n, c, i, o), c.invalidated = !0 } } var Ka = "DEFAULT", Za = {}, $a = {}, Ja = {}; function Qa(e) { if (!e) return Ka; var t = p.cornerstone.getEnabledElement(e).uuid; if (!t) throw new Error("Something went wrong when getting uuid from element"); return t } var eo = { setStartLoadHandler: function (e) { var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : void 0; if (!e) throw new Error("The Handler function must be defined"); var n = Qa(t); Za[n] = e }, getStartLoadHandler: function (e) { var t = Qa(e); return Za[t] || Za[Ka] }, setEndLoadHandler: function (e) { var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : void 0; if (!e) throw new Error("The Handler function must be defined"); var n = Qa(t); $a[n] = e }, getEndLoadHandler: function (e) { var t = Qa(e); return $a[t] || $a[Ka] }, setErrorLoadingHandler: function (e) { var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : void 0; if (!e) throw new Error("The Handler function must be defined"); var n = Qa(t); Ja[n] = e }, getErrorLoadingHandler: function (e) { var t = Qa(e); return Ja[t] || Ja[Ka] }, removeHandlers: function (e) { var t = Qa(e); delete Za[t], delete $a[t], delete Ja[t] } }, to = {}; function no(e, t) { if (!to[e]) return {}; var n = to[e].find(function (e) { return e.element === t }); return n ? n.options : {} } function ao(e, t, n) { if (to[e]) { var a = to[e].findIndex(function (e) { return e.element === t }); if (-1 === a) to[e].push({ element: t, options: n }); else { var o = to[e][a].options || {}; to[e][a].options = Object.assign(o, n) } } else to[e] = [{ element: t, options: n }] } var oo = function (e) { function t() { var e, n = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}; i()(this, t); var a = { name: "Crosshairs", supportedInteractionTypes: ["Mouse", "Touch"], svgCursor: Qt }; return (e = c()(this, d()(t).call(this, n, a))).mouseDownCallback = e._chooseLocation.bind(De()(e)), e.mouseDragCallback = e._chooseLocation.bind(De()(e)), e.touchDragCallback = e._chooseLocation.bind(De()(e)), e } return v()(t, e), s()(t, [{ key: "_chooseLocation", value: function (e) { var t = e.detail, n = t.element; e.stopImmediatePropagation(); var a = xe(n, this.name); if (a) { var o = n, i = p.cornerstone.getEnabledElement(o).image.imageId, r = p.cornerstone.metaData.get("imagePlaneModule", i); if (r) { var s = mt(t.currentPoints.image, r); a.data[0].synchronizationContext.getSourceElements().forEach(function (e) { if (e !== o) { var t = Number.MAX_VALUE, n = -1, a = xe(e, "stack"); if (void 0 !== a) { var i = a.data[0]; if (i.imageIds.forEach(function (e, a) { var o = p.cornerstone.metaData.get("imagePlaneModule", e); if (o && o.imagePositionPatient && o.rowCosines && o.columnCosines) { var i = gt(o.imagePositionPatient), r = gt(o.rowCosines), l = gt(o.columnCosines).clone().cross(r.clone()), c = Math.abs(l.clone().dot(i) - l.clone().dot(s)); c < t && (t = c, n = a) } }), n !== i.currentImageIdIndex && -1 !== n && void 0 !== i.imageIds[n]) { var r = eo.getStartLoadHandler(e), l = eo.getEndLoadHandler(e), c = eo.getErrorLoadingHandler(e); r && r(e), (!0 === i.preventCache ? p.cornerstone.loadImage(i.imageIds[n]) : p.cornerstone.loadAndCacheImage(i.imageIds[n])).then(function (t) { var a = p.cornerstone.getViewport(e); i.currentImageIdIndex = n, p.cornerstone.displayImage(e, t, a), l && l(e, t) }, function (t) { var a = i.imageIds[n]; c && c(e, a, t) }) } } } }) } } } }, { key: "activeCallback", value: function (e, t) { var n = t.mouseButtonMask, a = t.synchronizationContext; ao(this.name, e, { mouseButtonMask: n }), Ce(e, this.name), ye(e, this.name, { synchronizationContext: a }) } }]), t }(ge), io = function (e) { function t() { var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}; i()(this, t); return c()(this, d()(t).call(this, e, { name: "DoubleTapFitToWindow", supportedInteractionTypes: ["DoubleTap"] })) } return v()(t, e), s()(t, [{ key: "doubleTapCallback", value: function (e) { var t = e.detail; p.cornerstone.fitToWindow(t.element) } }]), t }(ge), ro = function (e) { function t() { var e, n = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}; i()(this, t); var a = { name: "DragProbe", strategies: { default: so, minimal: lo }, defaultStrategy: "default", supportedInteractionTypes: ["Mouse", "Touch"], svgCursor: Zt }; return (e = c()(this, d()(t).call(this, n, a))).touchDragCallback = e._movingEventCallback.bind(De()(e)), e.touchEndCallback = e._endMovingEventCallback.bind(De()(e)), e.mouseDragCallback = e._movingEventCallback.bind(De()(e)), e.mouseUpCallback = e._endMovingEventCallback.bind(De()(e)), e.dragEventData = {}, e } return v()(t, e), s()(t, [{ key: "_movingEventCallback", value: function (e) { var t = e.detail, n = t.element; this.dragEventData = t, p.cornerstone.updateImage(n) } }, { key: "_endMovingEventCallback", value: function (e) { var t = e.detail.element; this.dragEventData = {}, p.cornerstone.updateImage(t) } }, { key: "renderToolData", value: function (e) { this.dragEventData.currentPoints && e && e.detail && Boolean(Object.keys(this.dragEventData.currentPoints).length) && (e.detail.currentPoints = this.dragEventData.currentPoints, this.applyActiveStrategy(e)) } }]), t }(ge), so = function (e, t) { var n = p.cornerstone, a = e.detail, o = a.element, i = a.image, r = a.currentPoints, s = a.canvasContext, l = Dt(s.canvas), c = st.getActiveColor(), u = wt.getFontSize(), d = Math.round(r.image.x), h = Math.round(r.image.y); d < 0 || h < 0 || d >= i.columns || h >= i.rows || lt(l, function (e) { At(e, t); var a, s, l = "".concat(d, ", ").concat(h); if (i.color) a = Da(o, d, h, 1, 1), s = "R: ".concat(a[0], " G: ").concat(a[1], " B: ").concat(a[2], " A: ").concat(a[3]); else { var v = (a = n.getStoredPixels(o, d, h, 1, 1))[0], g = v * i.slope + i.intercept, f = Wn(i, v); s = "SP: ".concat(v, " MO: ").concat(parseFloat(g.toFixed(3))), f && (s += " SUV: ".concat(parseFloat(f.toFixed(3)))) } var m = { x: r.canvas.x + 5, y: r.canvas.y - 5 }; _t(e, s, m.x, m.y + u + 5, c), _t(e, l, m.x, m.y, c) }) }, lo = function (e, t) { var n = p.cornerstone, a = e.detail, o = a.element, i = a.image, r = a.currentPoints, s = a.canvasContext, l = a.isTouchEvent, c = Dt(s.canvas), u = st.getActiveColor(), d = r.page.y - wt.getFontSize() / 2; l && (d = r.page.y - 4 * wt.getFontSize()); var h = n.pageToPixel(o, r.page.x, d); h.x < 0 || h.y < 0 || h.x >= i.columns || h.y >= i.rows || lt(c, function (e) { At(e, t); var a, r = n.metaData.get("generalSeriesModule", i.imageId), s = r && r.modality, c = ""; if (i.color) a = Da(o, h.x, h.y, 1, 1), c = "R: ".concat(a[0], " G: ").concat(a[1], " B: ").concat(a[2]); else { var d = (a = n.getStoredPixels(o, h.x, h.y, 1, 1))[0], v = d * i.slope + i.intercept, g = parseFloat(v.toFixed(2)); if ("CT" === s) c += "HU: ".concat(g); else if ("PT" === s) { c += g; var f = Wn(i, d); f && (c += " SUV: ".concat(parseFloat(f.toFixed(2)))) } else c += g } var m = n.pixelToCanvas(o, h), p = { x: 12, y: -(wt.getFontSize() + 10) / 2 }, y = It(e, c, 5); l && (p = { x: -y / 2, y: -wt.getFontSize() - 10 - 12 }), vt(e, o, m, 6, { color: u }, "canvas"), _t(e, c, m.x + p.x, m.y + p.y, u) }) }, co = function (e) { function t() { var e, n = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}; i()(this, t); var a = { name: "Eraser", supportedInteractionTypes: ["Mouse", "Touch"], svgCursor: en }; return (e = c()(this, d()(t).call(this, n, a))).preMouseDownCallback = e._deleteAllNearbyTools.bind(De()(e)), e.preTouchStartCallback = e._deleteAllNearbyTools.bind(De()(e)), e } return v()(t, e), s()(t, [{ key: "_deleteAllNearbyTools", value: function (e) { var t = e.detail.currentPoints.canvas, n = e.detail.element; _.tools.forEach(function (e) { var a = xe(n, e.name); a && a.data.forEach(function (a) { "function" == typeof e.pointNearTool && e.pointNearTool(n, a, t) && (Te(n, e.name, a), p.cornerstone.updateImage(n)) }) }); return !0 } }]), t }(ge), uo = Ca.FreehandHandleData, ho = function (e) { function t() { var e, n = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}; i()(this, t); var a = { name: "FreehandSculpterMouse", referencedToolName: "FreehandMouse", supportedInteractionTypes: ["Mouse", "Touch", "DoubleTap"], mixins: ["activeOrDisabledBinaryTool"], configuration: { mouseLocation: { handles: { start: { highlight: !0, active: !0 } } }, minSpacing: 1, currentTool: null, dragColor: st.getActiveColor(), hoverColor: st.getToolColor(), showCursorOnHover: !0, limitRadiusOutsideRegion: !0, hoverCursorFadeAlpha: .5, hoverCursorFadeDistance: 1.2 }, svgCursor: Xt }; return (e = c()(this, d()(t).call(this, n, a))).updateOnMouseMove = !0, e.isMultiPartTool = !0, e.referencedToolName = a.referencedToolName, e._active = !1, e.activeMouseUpCallback = e.activeMouseUpCallback.bind(De()(e)), e.activeTouchEndCallback = e.activeTouchEndCallback.bind(De()(e)), e.activeMouseDragCallback = e.activeMouseDragCallback.bind(De()(e)), e } return v()(t, e), s()(t, [{ key: "renderToolData", value: function (e) { var t = e.detail; if (null === this.configuration.currentTool) return !1; var n = t.element, a = this.configuration; if (!xe(n, this.referencedToolName).data[a.currentTool]) return !1; if (this._active) { var o = t.canvasContext.canvas.getContext("2d"), i = { color: this.configuration.dragColor, fill: null, handleRadius: this._toolSizeCanvas }; Tt(o, t, this.configuration.mouseLocation.handles, i) } else this.configuration.showCursorOnHover && !this._recentTouchEnd && this._renderHoverCursor(e) } }, { key: "doubleClickCallback", value: function (e) { var t = e.detail; this._selectFreehandTool(t), p.cornerstone.updateImage(t.element) } }, { key: "doubleTapCallback", value: function (e) { var t = e.detail; this._selectFreehandTool(t), p.cornerstone.updateImage(t.element) } }, { key: "preTouchStartCallback", value: function (e) { return this._initialiseSculpting(e), !0 } }, { key: "preMouseDownCallback", value: function (e) { if (this.options.mouseButtonMask.includes(e.detail.buttons)) return this._initialiseSculpting(e), !0 } }, { key: "activeMouseDragCallback", value: function (e) { var t = this.configuration; if (this._active) { var n = e.detail, a = xe(n.element, this.referencedToolName); if (a) { var o = a.data[t.currentTool].handles.points; this._getMouseLocation(n), this._sculpt(n, o), p.cornerstone.updateImage(n.element) } } } }, { key: "activeMouseUpCallback", value: function (e) { this._activeEnd(e) } }, { key: "activeTouchEndCallback", value: function (e) { this._activeEnd(e), this._deselectAllTools(e), this._recentTouchEnd = !0 } }, { key: "_activeEnd", value: function (e) { var t = e.detail, n = t.element, a = this.configuration; this._active = !1, _.isMultiPartToolActive = !1, this._getMouseLocation(t), this._invalidateToolData(t), a.mouseUpRender = !0, this._deactivateSculpt(n), p.cornerstone.updateImage(t.element), function (e) { e.stopImmediatePropagation(), e.stopPropagation(), e.preventDefault() }(e) } }, { key: "_renderHoverCursor", value: function (e) { var t, n = e.detail, a = n.element, o = n.canvasContext.canvas.getContext("2d"), i = xe(a, this.referencedToolName).data[this.configuration.currentTool]; this._recentTouchEnd = !1, this.configuration.mouseUpRender ? (t = this.configuration.mouseLocation.handles.start, this.configuration.mouseUpRender = !1) : t = _.mousePositionImage; var r = L(a, this.referencedToolName).distanceFromPointCanvas(a, i, t); if (this.configuration.mouseLocation.handles.start.x = t.x, this.configuration.mouseLocation.handles.start.y = t.y, this.configuration.limitRadiusOutsideRegion) { var s = r; r = this._limitCursorRadiusCanvas(n, r), s > this.configuration.hoverCursorFadeDistance * r && (o.globalAlpha = this.configuration.hoverCursorFadeAlpha) } var l = { fill: null, color: this.configuration.hoverColor, handleRadius: r }; Tt(o, n, this.configuration.mouseLocation.handles, l), this.configuration.limitRadiusOutsideRegion && (o.globalAlpha = 1) } }, { key: "newImageCallback", value: function (e) { this._deselectAllTools(e) } }, { key: "enabledCallback", value: function (e) { this._deselectAllTools(e) } }, { key: "passiveCallback", value: function (e) { this._deselectAllTools(e) } }, { key: "disabledCallback", value: function (e) { this._deselectAllTools(e) } }, { key: "_selectFreehandTool", value: function (e) { var t = this.configuration, n = e.element, a = this._getClosestFreehandToolOnElement(n, e); void 0 !== a && (t.currentTool = a, H(n)) } }, { key: "_activateFreehandTool", value: function (e, t) { var n = xe(e, this.referencedToolName).data; this.configuration.currentTool = t; for (var a = 0; a < n.length; a++)n[a].active = a === t } }, { key: "_initialiseSculpting", value: function (e) { var t = e.detail, n = this.configuration, a = t.element; null === n.currentTool && (this._selectFreehandTool(t), null === n.currentTool) || (this._active = !0, _.isMultiPartToolActive = !0, this._configureToolSize(t), this._getMouseLocation(t), this._activateFreehandTool(a, n.currentTool), this._activateSculpt(a), p.cornerstone.updateImage(t.element)) } }, { key: "_sculpt", value: function (e, t) { var n = this.configuration; this._sculptData = { element: e.element, image: e.image, mousePoint: e.currentPoints.image, points: t, toolSize: this._toolSizeImage, minSpacing: n.minSpacing, maxSpacing: Math.max(this._toolSizeImage, 2 * n.minSpacing) }; var a = this._pushHandles(); void 0 !== a.first && (this._insertNewHandles(a), this._consolidateHandles()) } }, { key: "_pushHandles", value: function () { for (var e = this._sculptData, t = e.points, n = e.mousePoint, a = e.toolSize, o = {}, i = 0; i < t.length; i++) { var r = p.cornerstoneMath.point.distance(t[i], n); r > a || (this._pushOneHandle(i, r), void 0 === o.first ? (o.first = i, o.last = i) : o.last = i) } return o } }, { key: "_pushOneHandle", value: function (e, t) { var n = this._sculptData, a = n.points, o = n.mousePoint, i = n.toolSize, r = n.image, s = a[e], l = (s.x - o.x) / t, c = (s.y - o.y) / t, u = { x: o.x + i * l, y: o.y + i * c }; _e(u, r), s.x = u.x, s.y = u.y; var d = this.constructor._getPreviousHandleIndex(e, a.length); a[d].lines.pop(), a[d].lines.push(s) } }, { key: "_insertNewHandles", value: function (e) { for (var t = this._findNewHandleIndicies(e), n = 0, a = 0; a < t.length; a++) { var o = t[a] + 1 + n; this._insertHandleRadially(o), n++ } } }, { key: "_findNewHandleIndicies", value: function (e) { for (var t = this._sculptData, n = t.points, a = t.maxSpacing, o = [], i = e.first; i <= e.last; i++)this._checkSpacing(i, n, o, a); var r = this.constructor._getNextHandleIndex(e.last, n.length); if (r !== e.first) { this._checkSpacing(r, n, o, a); var s = this.constructor._getPreviousHandleIndex(e.first, n.length); s !== r && this._checkSpacing(s, n, o, a) } return o } }, { key: "_checkSpacing", value: function (e, t, n, a) { var o = this.constructor._getNextHandleIndex(e, t.length); p.cornerstoneMath.point.distance(t[e], t[o]) > a && n.push(e) } }, { key: "_insertHandleRadially", value: function (e) { var t = this._sculptData.points, n = e - 1, a = this.constructor._getNextHandleIndexBeforeInsert(e, t.length), o = this._getInsertPosition(e, n, a), i = new uo(o); t.splice(e, 0, i), t[n].lines.pop(), t[n].lines.push(t[e]), Ca.addLine(t, e) } }, { key: "_consolidateHandles", value: function () { if (!(this._sculptData.points.length <= 3)) { var e = this._findCloseHandlePairs(); this._mergeCloseHandles(e) } } }, { key: "_findCloseHandlePairs", value: function () { for (var e = this._sculptData, t = e.points, n = e.minSpacing, a = [], o = t.length, i = 0; i < o; i++) { var r = this.constructor._getNextHandleIndex(i, t.length); if (p.cornerstoneMath.point.distance(t[i], t[r]) < n) { var s = [i, r]; a.push(s), 0 === i && (o -= 1), i++ } } return a } }, { key: "_mergeCloseHandles", value: function (e) { for (var t = 0, n = 0; n < e.length; n++) { var a = this.constructor._getCorrectedPair(e[n], t); this._combineHandles(a), t++ } var o = this._findCloseHandlePairs(); o.length && this._mergeCloseHandles(o) } }, { key: "_combineHandles", value: function (e) { var t = this._sculptData, n = t.points, a = t.image, o = { x: (n[e[0]].x + n[e[1]].x) / 2, y: (n[e[0]].y + n[e[1]].y) / 2 }; _e(o, a), n[e[0]].x = o.x, n[e[0]].y = o.y; var i = this.constructor._getNextHandleIndex(e[1], n.length); n[e[0]].lines.pop(), n[e[0]].lines.push(n[i]), n.splice(e[1], 1) } }, { key: "_configureToolSize", value: function (e) { var t = e.element, n = this.configuration, a = n.currentTool, o = e.currentPoints.image, i = xe(t, this.referencedToolName).data[a], r = L(t, this.referencedToolName), s = r.distanceFromPoint(t, i, o), l = r.distanceFromPointCanvas(t, i, o); n.limitRadiusOutsideRegion && (s = this._limitCursorRadiusImage(e, s), l = this._limitCursorRadiusCanvas(e, l)), this._toolSizeImage = s, this._toolSizeCanvas = l } }, { key: "_getMouseLocation", value: function (e) { var t = this.configuration; t.mouseLocation.handles.start.x = e.currentPoints.image.x, t.mouseLocation.handles.start.y = e.currentPoints.image.y, _e(t.mouseLocation.handles.start, e.image) } }, { key: "_activateSculpt", value: function (e) { this._deactivateSculpt(e), e.addEventListener(T.MOUSE_UP, this.activeMouseUpCallback), e.addEventListener(T.MOUSE_CLICK, this.activeMouseUpCallback), e.addEventListener(T.MOUSE_DRAG, this.activeMouseDragCallback), e.addEventListener(T.TOUCH_END, this.activeTouchEndCallback), e.addEventListener(T.TOUCH_TAP, this.activeTouchEndCallback), e.addEventListener(T.TOUCH_DRAG, this.activeMouseDragCallback), p.cornerstone.updateImage(e) } }, { key: "_deactivateSculpt", value: function (e) { e.removeEventListener(T.MOUSE_UP, this.activeMouseUpCallback), e.removeEventListener(T.MOUSE_CLICK, this.activeMouseUpCallback), e.removeEventListener(T.MOUSE_DRAG, this.activeMouseDragCallback), e.removeEventListener(T.TOUCH_END, this.activeTouchEndCallback), e.removeEventListener(T.TOUCH_TAP, this.activeTouchEndCallback), e.removeEventListener(T.TOUCH_DRAG, this.activeMouseDragCallback), p.cornerstone.updateImage(e) } }, { key: "_invalidateToolData", value: function (e) { var t = this.configuration; xe(e.element, this.referencedToolName).data[t.currentTool].invalidated = !0 } }, { key: "_deselectAllTools", value: function (e) { var t = this.configuration, n = xe(this.element, this.referencedToolName); if (t.currentTool = null, n) for (var a = 0; a < n.data.length; a++)n.data[a].active = !1; R(this.element, this.svgCursor), p.cornerstone.updateImage(this.element) } }, { key: "_limitCursorRadiusCanvas", value: function (e, t) { return this._limitCursorRadius(e, t, !0) } }, { key: "_limitCursorRadiusImage", value: function (e, t) { return this._limitCursorRadius(e, t, !1) } }, { key: "_limitCursorRadius", value: function (e, t) { var n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2], a = e.element, o = e.image, i = this.configuration, r = xe(a, this.referencedToolName).data[i.currentTool], s = 1; if (n) { var l = p.cornerstone.pixelToCanvas(a, { x: 0, y: 0 }), c = p.cornerstone.pixelToCanvas(a, { x: o.width, y: o.height }); s = (c.x - l.x) * (c.y - l.y) / (o.width * o.height) } var u = r.area * s, d = Math.pow(u / Math.PI, .5); return Math.min(t, d) } }, { key: "_getClosestFreehandToolOnElement", value: function (e, t) { var n = L(e, this.referencedToolName), a = xe(e, this.referencedToolName); if (a) { for (var o = a.data, i = t.currentPoints.image, r = { distance: 1 / 0, toolIndex: null }, s = 0; s < o.length; s++) { var l = n.distanceFromPoint(e, o[s], i); -1 !== l && (l < r.distance && (r.distance = l, r.toolIndex = s)) } return r.toolIndex } } }, { key: "_getInsertPosition", value: function (e, t, n) { var a, o = this._sculptData, i = o.points, r = o.toolSize, s = o.mousePoint, l = o.image, c = { x: (i[t].x + i[n].x) / 2, y: (i[t].y + i[n].y) / 2 }, u = p.cornerstoneMath.point.distance(s, c); if (u < r) { var d = { x: (c.x - s.x) / u, y: (c.y - s.y) / u }; a = { x: s.x + r * d.x, y: s.y + r * d.y } } else a = c; return _e(a, l), a } }, { key: "minSpacing", get: function () { return this.configuration.minSpacing }, set: function (e) { if ("number" != typeof e) throw new Error("Attempting to set freehandSculpter minSpacing to a value other than a number."); this.configuration.minSpacing = e } }, { key: "maxSpacing", get: function () { return this.configuration.maxSpacing }, set: function (e) { if ("number" != typeof e) throw new Error("Attempting to set freehandSculpter maxSpacing to a value other than a number."); this.configuration.maxSpacing = e } }, { key: "showCursorOnHover", get: function () { return this.configuration.showCursorOnHover }, set: function (e) { if ("boolean" != typeof e) throw new Error("Attempting to set freehandSculpter showCursorOnHover to a value other than a boolean."); this.configuration.showCursorOnHover = e, p.cornerstone.updateImage(this.element) } }, { key: "limitRadiusOutsideRegion", get: function () { return this.configuration.limitRadiusOutsideRegion }, set: function (e) { if ("boolean" != typeof e) throw new Error("Attempting to set freehandSculpter limitRadiusOutsideRegion to a value other than a boolean."); this.configuration.limitRadiusOutsideRegion = e, p.cornerstone.updateImage(this.element) } }, { key: "hoverCursorFadeAlpha", get: function () { return this.configuration.hoverCursorFadeAlpha }, set: function (e) { if ("number" != typeof e) throw new Error("Attempting to set freehandSculpter hoverCursorFadeAlpha to a value other than a number."); e = Math.max(Math.min(e, 1), 0), this.configuration.hoverCursorFadeAlpha = e, p.cornerstone.updateImage(this.element) } }, { key: "hoverCursorFadeDistance", get: function () { return this.configuration.hoverCursorFadeDistance }, set: function (e) { if ("number" != typeof e) throw new Error("Attempting to set freehandSculpter hoverCursorFadeDistance to a value other than a number."); e = Math.max(e, 1), this.configuration.hoverCursorFadeDistance = e, p.cornerstone.updateImage(this.element) } }], [{ key: "_getCorrectedPair", value: function (e, t) { var n = [e[0] - t, e[1] - t]; return n[1] < 0 && (n[1] = 0), n } }, { key: "_getNextHandleIndex", value: function (e, t) { return e === t - 1 ? 0 : e + 1 } }, { key: "_getPreviousHandleIndex", value: function (e, t) { return 0 === e ? t - 1 : e - 1 } }, { key: "_getNextHandleIndexBeforeInsert", value: function (e, t) { return e === t ? 0 : e } }]), t }(ge); var vo = function (e) { function t() { var e, n = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}; i()(this, t); var a = { name: "Magnify", supportedInteractionTypes: ["Mouse", "Touch"], configuration: { magnifySize: 300, magnificationLevel: 2 }, svgCursor: tn }; return (e = c()(this, d()(t).call(this, n, a))).zoomCanvas = void 0, e.zoomElement = void 0, e.activeCallback = e._createMagnificationCanvas.bind(De()(e)), e.enabledCallback = e._createMagnificationCanvas.bind(De()(e)), e.disabledCallback = e._destroyMagnificationCanvas.bind(De()(e)), e.postTouchStartCallback = e._addMagnifyingGlass.bind(De()(e)), e.touchDragCallback = e._updateMagnifyingGlass.bind(De()(e)), e.touchEndCallback = e._removeMagnifyingGlass.bind(De()(e)), e.touchDragEndCallback = e._removeMagnifyingGlass.bind(De()(e)), e.postMouseDownCallback = e._addMagnifyingGlass.bind(De()(e)), e.mouseDragCallback = e._updateMagnifyingGlass.bind(De()(e)), e.mouseUpCallback = e._removeMagnifyingGlass.bind(De()(e)), e.mouseClickCallback = e._removeMagnifyingGlass.bind(De()(e)), e.newImageCallback = e._drawMagnificationTool.bind(De()(e)), e } return v()(t, e), s()(t, [{ key: "_addMagnifyingGlass", value: function (e) { var t = this; this._removeZoomElement(), this._drawZoomedElement(e), window.requestAnimationFrame(function () { return t._drawMagnificationTool(e) }), H(e.detail.element), e.preventDefault(), e.stopPropagation() } }, { key: "_updateMagnifyingGlass", value: function (e) { this._drawMagnificationTool(e), e.preventDefault(), e.stopPropagation() } }, { key: "_removeMagnifyingGlass", value: function (e) { var t = e.detail.element; R(this.element, this.svgCursor), t.querySelector(".magnifyTool").style.display = "none", this._removeZoomElement() } }, { key: "_drawMagnificationTool", value: function (e) { var t = e.detail.element, n = t.querySelector(".magnifyTool"); if (n || this._createMagnificationCanvas(t), void 0 !== this.zoomCanvas) { var a = t.querySelector("canvas:not(.magnifyTool)"), o = Dt(n), i = p.cornerstone.pixelToCanvas(e.detail.element, e.detail.currentPoints.image), r = Math.min(this.configuration.magnifySize, a.width, a.height), s = this.configuration.magnificationLevel; n.width = r, n.height = r, i.x = Math.max(i.x, .5 * r / s), i.x = Math.min(i.x, a.width - .5 * r / s), i.y = Math.max(i.y, .5 * r / s), i.y = Math.min(i.y, a.height - .5 * r / s); var l = { x: i.x * s - .5 * r, y: i.y * s - .5 * r }; l.x = Math.max(l.x, 0), l.y = Math.max(l.y, 0), o.drawImage(this.zoomCanvas, l.x, l.y, r, r, 0, 0, r, r); var c = e.detail.isTouchEvent ? 120 : 0, u = { top: Math.max(i.y - .5 * r - c, 0), left: Math.max(i.x - .5 * r, 0) }, d = n.getBoundingClientRect(); u.top = Math.min(u.top, a.height - d.height), u.left = Math.min(u.left, a.width - d.width), n.style.top = "".concat(u.top, "px"), n.style.left = "".concat(u.left, "px"), n.style.display = "block" } } }, { key: "_drawZoomedElement", value: function (e) { var t = e.detail.element, n = e.detail.enabledElement; void 0 === n && (n = p.cornerstone.getEnabledElement(t)); var a = this.configuration.magnificationLevel, o = n.canvas, i = n.image; this.zoomElement || (this.zoomElement = document.createElement("div"), this.zoomElement.width = o.width * a, this.zoomElement.height = o.height * a, p.cornerstone.enable(this.zoomElement, n.options)); var r = p.cornerstone.getEnabledElement(this.zoomElement), s = p.cornerstone.getViewport(n.element); this.zoomCanvas = r.canvas, this.zoomCanvas.width = o.width * a, this.zoomCanvas.height = o.height * a, r.viewport = Object.assign({}, s), s.scale *= a, p.cornerstone.displayImage(this.zoomElement, i), p.cornerstone.setViewport(this.zoomElement, s) } }, { key: "_removeZoomElement", value: function () { void 0 !== this.zoomElement && (p.cornerstone.disable(this.zoomCanvas), this.zoomElement = void 0, this.zoomCanvas = void 0) } }, { key: "_createMagnificationCanvas", value: function (e) { if (null === e.querySelector(".magnifyTool")) { var t = document.createElement("canvas"); t.classList.add("magnifyTool"), t.width = this.configuration.magnifySize, t.height = this.configuration.magnifySize, t.style.position = "absolute", t.style.display = "none", e.appendChild(t) } } }, { key: "_destroyMagnificationCanvas", value: function (e) { var t = e.querySelector(".magnifyTool"); t && e.removeChild(t) } }]), t }(ge), go = function (e) { function t() { var e, n = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}; i()(this, t); return (e = c()(this, d()(t).call(this, n, { name: "PanMultiTouch", supportedInteractionTypes: ["MultiTouch"], configuration: { touchPointers: 2 } }))).multiTouchDragCallback = e._dragCallback.bind(De()(e)), e } return v()(t, e), s()(t, [{ key: "_dragCallback", value: function (e) { var t = e.detail, n = t.element, a = t.viewport; if (t.numPointers === this.configuration.touchPointers) { var o = this._getTranslation(t); this._applyTranslation(a, o), p.cornerstone.setViewport(n, a) } } }, { key: "_getTranslation", value: function (e) { var t = e.viewport, n = e.image, a = e.deltaPoints, o = t.scale, i = t.scale; return n.rowPixelSpacing < n.columnPixelSpacing ? o *= n.columnPixelSpacing / n.rowPixelSpacing : n.columnPixelSpacing < n.rowPixelSpacing && (i *= n.rowPixelSpacing / n.columnPixelSpacing), { x: a.page.x / o, y: a.page.y / i } } }, { key: "_applyTranslation", value: function (e, t) { e.translation.x += t.x, e.translation.y += t.y } }]), t }(ge), fo = function (e) { function t() { var e, n = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}; i()(this, t); var a = { name: "Pan", supportedInteractionTypes: ["Mouse", "Touch"], svgCursor: nn }; return (e = c()(this, d()(t).call(this, n, a))).touchDragCallback = e._dragCallback.bind(De()(e)), e.mouseDragCallback = e._dragCallback.bind(De()(e)), e } return v()(t, e), s()(t, [{ key: "_dragCallback", value: function (e) { var t = e.detail, n = t.element, a = t.viewport, o = this._getTranslation(t); this._applyTranslation(a, o), p.cornerstone.setViewport(n, a) } }, { key: "_getTranslation", value: function (e) { var t = e.viewport, n = e.image, a = e.deltaPoints, o = t.scale, i = t.scale; return n.rowPixelSpacing < n.columnPixelSpacing ? o *= n.columnPixelSpacing / n.rowPixelSpacing : n.columnPixelSpacing < n.rowPixelSpacing && (i *= n.rowPixelSpacing / n.columnPixelSpacing), { x: a.page.x / o, y: a.page.y / i } } }, { key: "_applyTranslation", value: function (e, t) { e.translation.x += t.x, e.translation.y += t.y } }]), t }(ge), mo = n(9), po = n.n(mo), yo = n(10), xo = n.n(yo), To = function (e, t, n, a) { var o = p.cornerstone, i = o.getEnabledElement(n).image, r = o.getEnabledElement(a).image; if (i && r) { var s = o.metaData.get("imagePlaneModule", i.imageId), l = o.metaData.get("imagePlaneModule", r.imageId); if (s && l && s.rowCosines && s.columnCosines && s.imagePositionPatient && l.rowCosines && l.columnCosines && l.imagePositionPatient && s.frameOfReferenceUID === l.frameOfReferenceUID) { s.rowCosines = gt(s.rowCosines), s.columnCosines = gt(s.columnCosines), s.imagePositionPatient = gt(s.imagePositionPatient), l.rowCosines = gt(l.rowCosines), l.columnCosines = gt(l.columnCosines), l.imagePositionPatient = gt(l.imagePositionPatient); var c = s.rowCosines.clone().cross(s.columnCosines), u = l.rowCosines.clone().cross(l.columnCosines), d = c.angleTo(u); if (!((d = Math.abs(d)) < .5)) { var h = function (e, t) { var n = pt(e, t); if (n) return { start: ft(n.start, e), end: ft(n.end, e) } }(s, l); if (h) { var v = st.getActiveColor(); e.setTransform(1, 0, 0, 1, 0, 0), lt(e, function (e) { ut(e, t.element, h.start, h.end, { color: v }) }) } } } } }, Co = function (e) { return new Promise(function (t) { return setTimeout(t, e) }) }; function bo(e) { try { var t = p.cornerstone.getEnabledElement(e); return t.image ? t : Co(250).then(function () { return bo(e) }) } catch (e) { return null } } var Eo, Mo = V("tools:ReferenceLinesTool"), wo = function (e) { function t() { var e, n = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}; i()(this, t); var a = { name: "ReferenceLines", mixins: ["enabledOrDisabledBinaryTool"], configuration: { renderer: To } }; return (e = c()(this, d()(t).call(this, n, a))).renderer = null, e.synchronizationContext = null, e } return v()(t, e), s()(t, [{ key: "enabledCallback", value: function () { var e = xo()(po.a.mark(function e(t) { var n, a, o, i = arguments; return po.a.wrap(function (e) { for (; ;)switch (e.prev = e.next) { case 0: return n = i.length > 1 && void 0 !== i[1] ? i[1] : {}, a = n.synchronizationContext, o = this.configuration.renderer, e.next = 4, bo(t); case 4: if (e.sent && o && a) { e.next = 8; break } return Mo.warn("Unable to enable ".concat(this.name, ". Exiting enable callback. Tool will be enabled, but will not render.")), e.abrupt("return"); case 8: this.renderer = o, this.synchronizationContext = a, this.forceImageUpdate(t); case 11: case "end": return e.stop() } }, e, this) })); return function (t) { return e.apply(this, arguments) } }() }, { key: "disabledCallback", value: function (e) { this.forceImageUpdate(e) } }, { key: "forceImageUpdate", value: function (e) { p.cornerstone.getEnabledElement(e).image && p.cornerstone.updateImage(e) } }, { key: "renderToolData", value: function (e) { var t = this, n = e.detail; if (this.renderer && this.synchronizationContext) { var a = this.synchronizationContext.getSourceElements(), o = Dt(n.canvasContext.canvas); p.cornerstone.setToPixelCoordinateSystem(n.enabledElement, o), a.forEach(function (a) { a !== e.currentTarget && t.renderer(o, n, e.currentTarget, a) }) } } }]), t }(ge), So = function (e, t, n) { var a = Math.sqrt(Math.pow(e.x - t.x, 2) + Math.pow(e.y - t.y, 2)), o = Math.sqrt(Math.pow(e.x - n.x, 2) + Math.pow(e.y - n.y, 2)), i = Math.sqrt(Math.pow(t.x - n.x, 2) + Math.pow(t.y - n.y, 2)); return { angle: 180 * Math.acos((Math.pow(a, 2) + Math.pow(o, 2) - Math.pow(i, 2)) / (2 * a * o)) / Math.PI, direction: (t.x - e.x) * (n.y - e.y) - (t.y - e.y) * (n.x - e.x) } }, ko = function (e) { function t() { var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}; i()(this, t); var n = { name: "Rotate", strategies: { default: Io, horizontal: _o, vertical: Po }, defaultStrategy: "default", supportedInteractionTypes: ["Mouse", "Touch"], svgCursor: an }; return c()(this, d()(t).call(this, e, n)) } return v()(t, e), s()(t, [{ key: "touchDragCallback", value: function (e) { this.dragCallback(e) } }, { key: "mouseDragCallback", value: function (e) { this.dragCallback(e) } }, { key: "postMouseDownCallback", value: function (e) { this.initialRotation = e.detail.viewport.rotation } }, { key: "dragCallback", value: function (e) { e.detail.viewport.initialRotation = this.initialRotation, this.applyActiveStrategy(e, this.configuration), p.cornerstone.setViewport(e.detail.element, e.detail.viewport) } }]), t }(ge), Io = function (e) { var t = e.detail, n = t.element, a = t.viewport, o = a.initialRotation, i = n.getBoundingClientRect(n), r = n.clientWidth, s = n.clientHeight, l = { x: t.startPoints.client.x, y: t.startPoints.client.y }, c = a.scale, u = a.translation, d = { x: i.left + r / 2 + u.x * c, y: i.top + s / 2 + u.y * c }, h = { x: t.currentPoints.client.x, y: t.currentPoints.client.y }, v = So(d, l, h); v.direction < 0 && (v.angle = -v.angle), a.rotation = o + v.angle }, _o = function (e) { var t = e.detail, n = t.viewport, a = t.deltaPoints; n.rotation += a.page.x / n.scale }, Po = function (e) { var t = e.detail, n = t.viewport, a = t.deltaPoints; n.rotation += a.page.y / n.scale }, Oo = function (e) { function t() { var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}; i()(this, t); return c()(this, d()(t).call(this, e, { name: "RotateTouch", supportedInteractionTypes: ["TouchRotate"] })) } return v()(t, e), s()(t, [{ key: "touchRotateCallback", value: function (e) { var t = e.detail, n = t.element, a = t.viewport, o = t.rotation; a.rotation += o, p.cornerstone.setViewport(n, a) } }]), t }(ge), Do = V("tools:ScaleOverlayTool"), Lo = function (e) { function t() { var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}; i()(this, t); return c()(this, d()(t).call(this, e, { name: "ScaleOverlay", configuration: { minorTickLength: 12.5, majorTickLength: 25 }, mixins: ["enabledOrDisabledBinaryTool"] })) } return v()(t, e), s()(t, [{ key: "enabledCallback", value: function (e) { this.forceImageUpdate(e) } }, { key: "disabledCallback", value: function (e) { this.forceImageUpdate(e) } }, { key: "forceImageUpdate", value: function (e) { p.cornerstone.getEnabledElement(e).image && p.cornerstone.updateImage(e) } }, { key: "renderToolData", value: function (e) { var t = e.detail, n = Dt(t.canvasContext.canvas), a = t.image, o = t.viewport, i = t.element, r = a.rowPixelSpacing, s = a.columnPixelSpacing, l = p.cornerstone.metaData.get("imagePlaneModule", a.imageId); if (l && (r = l.rowPixelSpacing || l.rowImagePixelSpacing, s = l.columnPixelSpacing || l.colImagePixelSpacing), r && s) { var c = { width: n.canvas.width, height: n.canvas.height }, u = 10 / r * o.scale, d = 10 / s * o.scale, h = Ao(c, .25, .05), v = Ao(c, .05, .15); if (c.width && c.height && h && v) { var g = st.getToolColor(), f = at.getToolWidth(), m = Object.assign({}, { hscaleBounds: h, vscaleBounds: v, verticalMinorTick: u, horizontalMinorTick: d, verticalLine: { start: { x: v.bottomRight.x, y: v.topLeft.y }, end: { x: v.bottomRight.x, y: v.bottomRight.y } }, horizontalLine: { start: { x: h.topLeft.x, y: h.bottomRight.y }, end: { x: h.bottomRight.x, y: h.bottomRight.y } }, color: g, lineWidth: f }, this.configuration); lt(n, function (e) { At(e, m), ut(e, i, m.verticalLine.start, m.verticalLine.end, { color: g, lineWidth: f }, "canvas"), Ro(e, i, m), ut(e, i, m.horizontalLine.start, m.horizontalLine.end, { color: g, lineWidth: f }, "canvas"), Ho(e, i, m) }) } } else Do.warn("unable to define rowPixelSpacing or colPixelSpacing from data on ".concat(this.name, "'s renderToolData")) } }]), t }(ge), Ao = function (e, t, n) { var a = t * Math.min(1e3, e.width), o = n * Math.min(1e3, e.height), i = { left: a, top: o, width: e.width - 2 * a, height: e.height - 2 * o }; return { topLeft: { x: i.left, y: i.top }, bottomRight: { x: i.left + i.width, y: i.top + i.height } } }, Ro = function (e, t, n) { for (var a = 0; n.verticalLine.start.y + a * n.verticalMinorTick <= n.vscaleBounds.bottomRight.y;) { var o = n.color, i = n.lineWidth, r = { x: n.verticalLine.start.x, y: n.verticalLine.start.y + a * n.verticalMinorTick }, s = { x: 0, y: n.verticalLine.start.y + a * n.verticalMinorTick }; s.x = a % 5 == 0 ? n.verticalLine.start.x - n.majorTickLength : n.verticalLine.start.x - n.minorTickLength, ut(e, t, r, s, { color: o, lineWidth: i }, "canvas"), a++ } }, Ho = function (e, t, n) { for (var a = 0; n.horizontalLine.start.x + a * n.horizontalMinorTick <= n.hscaleBounds.bottomRight.x;) { var o = n.color, i = n.lineWidth, r = { x: n.horizontalLine.start.x + a * n.horizontalMinorTick, y: n.horizontalLine.start.y }, s = { x: n.horizontalLine.start.x + a * n.horizontalMinorTick, y: 0 }; s.y = a % 5 == 0 ? n.horizontalLine.start.y - n.majorTickLength : n.horizontalLine.start.y - n.minorTickLength, ut(e, t, r, s, { color: o, lineWidth: i }, "canvas"), a++ } }, Uo = { default: 6, IE: { 9: 6, 10: 8, default: 8 }, Firefox: { default: 6 }, Opera: { 10: 8, 11: 6, 12: 6, default: 6 }, Chrome: { default: 6 }, Safari: { default: 6 } }; function No() { var e, t = navigator.userAgent, n = t.match(/(opera|chrome|safari|firefox|msie|trident(?=\/))\/?\s*(\d+)/i) || []; return /trident/i.test(n[1]) ? (e = /\brv[ :]+(\d+)/g.exec(t) || [], "IE ".concat(e[1] || "")) : "Chrome" === n[1] && null !== (e = t.match(/\b(OPR|Edge)\/(\d+)/)) ? e.slice(1).join(" ").replace("OPR", "Opera") : (n = n[2] ? [n[1], n[2]] : [navigator.appName, navigator.appVersion, "-?"], null !== (e = t.match(/version\/(\d+)/i)) && n.splice(1, 1, e[1]), n.join(" ")) } function Bo() { return Eo || Fo() } function Fo() { var e = No().split(" "), t = e[0], n = e[1], a = Uo[t]; return a ? a[n] ? a[n] : a.default : Uo.default } var Vo = { interaction: [], thumbnail: [], prefetch: [] }, qo = { interaction: 0, thumbnail: 0, prefetch: 0 }, zo = { interaction: 6, thumbnail: 6, prefetch: 5 }, jo = !1, Wo = 20; function Go() { jo && setTimeout(function () { Xo() }, Wo) } function Yo(e) { var t = p.cornerstone, n = e.type; qo[n]++ , jo = !0; var a = e.imageId, o = e.doneCallback, i = e.failCallback, r = t.imageCache.getImageLoadObject(a); if (r) r.promise.then(function (e) { qo[n]-- , o(e), Go() }, function (e) { qo[n]-- , i(e), Go() }); else { var s = function (e) { return "prefetch" === e.type ? -5 : "interactive" === e.type ? 0 : "thumbnail" === e.type ? 5 : void 0 }(e); (!0 === e.preventCache ? t.loadImage(a, { priority: s, type: e.type }) : t.loadAndCacheImage(a, { priority: s, type: e.type })).then(function (e) { qo[n]-- , o(e), Go() }, function (e) { qo[n]-- , i(e), Go() }) } } function Xo() { var e = Bo(); zo = { interaction: Math.max(e, 1), thumbnail: Math.max(e - 2, 1), prefetch: Math.max(e - 1, 1) }; for (var t = e - (qo.interaction + qo.thumbnail + qo.prefetch), n = 0; n < t; n++) { var a = Ko(); a && Yo(a) } } function Ko() { return Vo.interaction.length && qo.interaction < zo.interaction ? Vo.interaction.shift() : Vo.thumbnail.length && qo.thumbnail < zo.thumbnail ? Vo.thumbnail.shift() : Vo.prefetch.length && qo.prefetch < zo.prefetch ? Vo.prefetch.shift() : (Vo.interaction.length || Vo.thumbnail.length || Vo.prefetch.length || (jo = !1), !1) } var Zo = { addRequest: function (e, t, n, a, o, i, r) { if (!Vo.hasOwnProperty(n)) throw new Error("Request type must be one of interaction, thumbnail, or prefetch"); if (e && t) { var s = { type: n, imageId: t, preventCache: a, doneCallback: o, failCallback: i }, l = p.cornerstone.imageCache.getImageLoadObject(t); l ? l.promise.then(function (e) { o(e) }, function (e) { i(e) }) : (r ? Vo[n].unshift(s) : Vo[n].push(s), jo = !0) } }, clearRequestStack: function (e) { if (!Vo.hasOwnProperty(e)) throw new Error("Request type must be one of interaction, thumbnail, or prefetch"); Vo[e] = [] }, startGrabbing: Xo, getRequestPool: function () { return Vo } }, $o = function (e, t) { var n = xe(e, "stack"); if (n && n.data && n.data.length) { var a, o = p.cornerstone; if (n.data.length > 1) { var i = xe(e, "stackRenderer"); i && i.data && i.data.length && (a = i.data[0]) } var r = n.data[0]; t < 0 && (t += r.imageIds.length); var s = eo.getStartLoadHandler(e), l = eo.getEndLoadHandler(e), c = eo.getErrorLoadingHandler(e); if (t !== r.currentImageIdIndex) { s && s(e); var u = { newImageIdIndex: t, direction: t - r.currentImageIdIndex }; r.currentImageIdIndex = t; var d = r.imageIds[t]; (Boolean(r.preventCache) ? o.loadImage(d) : o.loadAndCacheImage(d)).then(function (i) { if (r.currentImageIdIndex === t) { try { o.getEnabledElement(e) } catch (e) { return } a ? (a.currentImageIdIndex = t, a.render(e, n.data)) : o.displayImage(e, i), l && l(e, i) } }, function (n) { var a = r.imageIds[t]; c && c(e, a, n) }), Zo.startGrabbing(), C(e, T.STACK_SCROLL, u) } } }, Jo = function (e, t) { var n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2], a = !(arguments.length > 3 && void 0 !== arguments[3]) || arguments[3], o = xe(e, "stack"); if (o && o.data && o.data.length) { var i = o.data[0]; i.pending || (i.pending = []); var r = i.currentImageIdIndex + t; if (n) r %= i.imageIds.length; else r = Ie(r, 0, i.imageIds.length - 1); if (a) $o(e, r); else { var s = { index: r }; i.pending.push(s), function e(t, n, a) { if (t.pending[0] === n) { if (t.currentImageIdIndex === n.index) return t.pending.splice(t.pending.indexOf(n), 1), void (t.pending.length > 0 && e(t, t.pending[0], a)); a.addEventListener(p.cornerstone.EVENTS.NEW_IMAGE, function e(o) { t.imageIds.indexOf(o.detail.image.imageId) === n.index && (t.pending.splice(t.pending.indexOf(n), 1), a.removeEventListener(p.cornerstone.EVENTS.NEW_IMAGE, e), t.pending.length > 0 && function e(t, n, a) { if (t.pending[0] === n) { if (t.currentImageIdIndex === n.index) return t.pending.splice(t.pending.indexOf(n), 1), void (t.pending.length > 0 && e(t, t.pending[0], a)); a.addEventListener(p.cornerstone.EVENTS.NEW_IMAGE, function o(i) { t.imageIds.indexOf(i.detail.image.imageId) === n.index && (t.pending.splice(t.pending.indexOf(n), 1), a.removeEventListener(p.cornerstone.EVENTS.NEW_IMAGE, o), t.pending.length > 0 && e(t, t.pending[0], a)) }), $o(a, n.index) } }(t, t.pending[0], a)) }), $o(a, n.index) } }(i, s, e) } } }; function Qo(e, t, n) { if (e.pending[0] === t) { if (e.currentImageIdIndex === t.index) { e.pending.splice(e.pending.indexOf(t), 1); if (e.pending.length > 0) { Qo(e, e.pending[0], n) } return } var a = function a(o) { var i; if (e.imageIds.indexOf(o.detail.image.imageId) === t.index) { e.pending.splice(e.pending.indexOf(t), 1); n.removeEventListener(p.cornerstone.EVENTS.NEW_IMAGE, a); if (e.pending.length > 0) { Qo(e, e.pending[0], n) } } }; n.addEventListener(p.cornerstone.EVENTS.NEW_IMAGE, a); $o(n, t.index) } } var ei = function (e) { function t() { var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}; i()(this, t); return c()(this, d()(t).call(this, e, { name: "StackScrollMouseWheel", supportedInteractionTypes: ["MouseWheel"], configuration: { loop: !1, allowSkipping: !0, invert: !1 } })) } return v()(t, e), s()(t, [{ key: "mouseWheelCallback", value: function (e) { var t = e.detail, n = t.direction, a = t.element, o = this.configuration, i = o.loop, r = o.allowSkipping, s = o.invert; Jo(a, s ? -n : n, i, r) } }]), t }(ge), ti = function (e) { function t() { var e, n = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}; i()(this, t); return (e = c()(this, d()(t).call(this, n, { name: "StackScrollMultiTouch", supportedInteractionTypes: ["MultiTouch"], configuration: { loop: !1, allowSkipping: !0, touchPointers: 3 } }))).multiTouchDragCallback = e._dragCallback.bind(De()(e)), e } return v()(t, e), s()(t, [{ key: "_dragCallback", value: function (e) { var t = e.detail; if (t.numPointers === this.configuration.touchPointers) { var n = t.element, a = t.deltaPoints, o = this.configuration, i = o.loop, r = o.allowSkipping, s = no(this.name, n), l = this._getPixelPerImage(n), c = this._getDeltaY(n, a.page.y); if (!l) return; if (Math.abs(c) >= l) { var u = Math.round(c / l); Jo(n, u, i, r), s.deltaY = c % l } else s.deltaY = c; ao(this.name, n, s) } } }, { key: "_getDeltaY", value: function (e, t) { return (no(this.name, e).deltaY || 0) + t } }, { key: "_getPixelPerImage", value: function (e) { var t = xe(e, "stack"); if (t && t.data && t.data.length) { var n = t.data[0]; return this.configuration.stackScrollSpeed || Math.max(2, e.offsetHeight / Math.max(n.imageIds.length, 8)) } } }]), t }(ge), ni = function (e) { function t() { var e, n = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}; i()(this, t); var a = { name: "StackScroll", supportedInteractionTypes: ["Mouse", "Touch"], configuration: { loop: !1, allowSkipping: !0 }, svgCursor: on }; return (e = c()(this, d()(t).call(this, n, a))).mouseDragCallback = e._dragCallback.bind(De()(e)), e.touchDragCallback = e._dragCallback.bind(De()(e)), e } return v()(t, e), s()(t, [{ key: "_dragCallback", value: function (e) { var t = e.detail, n = t.element, a = t.deltaPoints, o = this.configuration, i = o.loop, r = o.allowSkipping, s = no(this.name, n), l = this._getPixelPerImage(n), c = this._getDeltaY(n, a.page.y); if (l) { if (Math.abs(c) >= l) { var u = Math.round(c / l); Jo(n, u, i, r), s.deltaY = c % l } else s.deltaY = c; ao(this.name, n, s) } } }, { key: "_getDeltaY", value: function (e, t) { return (no(this.name, e).deltaY || 0) + t } }, { key: "_getPixelPerImage", value: function (e) { var t = xe(e, "stack"); if (t && t.data && t.data.length) { var n = t.data[0]; return this.configuration.stackScrollSpeed || Math.max(2, e.offsetHeight / Math.max(n.imageIds.length, 8)) } } }]), t }(ge), ai = function (e, t, n, a, o) { if (!e) throw new Error("getLuminance: parameter element must not be undefined"); t = Math.round(t), n = Math.round(n); var i, r, s, l = p.cornerstone.getEnabledElement(e).image, c = [], u = 0, d = l.getPixelData(); if (l.color) for (r = 0; r < o; r++)for (s = 0; s < a; s++) { var h = d[i = 4 * ((r + n) * l.columns + (s + t))], v = d[i + 1], g = d[i + 2]; c[u++] = .2126 * h + .7152 * v + .0722 * g } else for (r = 0; r < o; r++)for (s = 0; s < a; s++)i = (r + n) * l.columns + (s + t), c[u++] = d[i] * l.slope + l.intercept; return c }, oi = function (e) { function t() { var e, n = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}; i()(this, t); var a = { name: "WwwcRegion", supportedInteractionTypes: ["Mouse", "Touch"], configuration: { minWindowWidth: 10 }, svgCursor: rn }; return (e = c()(this, d()(t).call(this, n, a)))._resetHandles(), e.postTouchStartCallback = e._startOutliningRegion.bind(De()(e)), e.touchDragCallback = e._setHandlesAndUpdate.bind(De()(e)), e.touchEndCallback = e._applyStrategy.bind(De()(e)), e.postMouseDownCallback = e._startOutliningRegion.bind(De()(e)), e.mouseClickCallback = e._startOutliningRegion.bind(De()(e)), e.mouseDragCallback = e._setHandlesAndUpdate.bind(De()(e)), e.mouseMoveCallback = e._setHandlesAndUpdate.bind(De()(e)), e.mouseUpCallback = e._applyStrategy.bind(De()(e)), e } return v()(t, e), s()(t, [{ key: "renderToolData", value: function (e) { var t = this, n = e.detail, a = n.element, o = st.getColorIfActive({ active: !0 }), i = Dt(n.canvasContext.canvas); lt(i, function (e) { Ot(e, a, t.handles.start, t.handles.end, { color: o }) }) } }, { key: "_startOutliningRegion", value: function (e) { var t = e.detail.element, n = e.detail.currentPoints.image; return ii(this.handles.start) ? this.handles.start = n : (this.handles.end = n, this._applyStrategy(e)), p.cornerstone.updateImage(t), !0 } }, { key: "_setHandlesAndUpdate", value: function (e) { var t = e.detail.element, n = e.detail.currentPoints.image; this.handles.end = n, p.cornerstone.updateImage(t) } }, { key: "_applyStrategy", value: function (e) { ii(this.handles.start) || ii(this.handles.end) || (e.detail.handles = this.handles, ri(e, this.configuration), this._resetHandles()) } }, { key: "_resetHandles", value: function () { this.handles = { start: {}, end: {} } } }]), t }(ge), ii = function (e) { return 0 === Object.keys(e).length && e.constructor === Object }, ri = function (e, t) { var n = e.detail, a = n.image, o = n.element, i = e.detail.handles, r = i.start, s = i.end, l = Math.min(r.x, s.x), c = Math.min(r.y, s.y), u = Math.abs(r.x - s.x), d = Math.abs(r.y - s.y); l = Ie(l, 0, a.width), c = Ie(c, 0, a.height), u = Math.floor(Math.min(u, Math.abs(a.width - l))), d = Math.floor(Math.min(d, Math.abs(a.height - c))); var h = ai(o, l, c, u, d), v = si(h, a.minPixelValue, a.maxPixelValue), g = n.viewport; void 0 === t.minWindowWidth && (t.minWindowWidth = 10), g.voi.windowWidth = Math.max(Math.abs(v.max - v.min), t.minWindowWidth), g.voi.windowCenter = v.mean, p.cornerstone.setViewport(o, g), p.cornerstone.updateImage(o) }, si = function (e, t, n) { var a = e.length, o = n, i = t, r = 0; if (a < 2) return { min: o, max: i, mean: (t + n) / 2 }; for (var s = 0; s < a; s++) { var l = e[s]; o = Math.min(o, l), i = Math.max(i, l), r += l } return { min: o, max: i, mean: r / a } }, li = function (e) { function t() { var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}; i()(this, t); var n = { name: "Wwwc", strategies: { basicLevelingStrategy: ci }, supportedInteractionTypes: ["Mouse", "Touch"], configuration: { orientation: 0 }, svgCursor: sn }; return c()(this, d()(t).call(this, e, n)) } return v()(t, e), s()(t, [{ key: "mouseDragCallback", value: function (e) { this.applyActiveStrategy(e), p.cornerstone.setViewport(e.detail.element, e.detail.viewport) } }, { key: "touchDragCallback", value: function (e) { e.stopImmediatePropagation(), this.applyActiveStrategy(e), p.cornerstone.setViewport(e.detail.element, e.detail.viewport) } }]), t }(ge); function ci(e, t) { var n = t.orientation, a = e.detail, o = (a.image.maxPixelValue * a.image.slope + a.image.intercept - (a.image.minPixelValue * a.image.slope + a.image.intercept)) / 1024, i = a.deltaPoints.page.x * o, r = a.deltaPoints.page.y * o; 0 === n ? (a.viewport.voi.windowWidth += i, a.viewport.voi.windowCenter += r) : (a.viewport.voi.windowWidth += r, a.viewport.voi.windowCenter += i) } var ui = function (e, t, n) { var a = n.maxScale, o = n.minScale, i = Math.log(e.scale) / Math.log(1.7) + t, r = Math.pow(1.7, i); return e.scale = a && r > a ? a : o && r < o ? o : r, e }, di = { changeViewportScale: ui, correctShift: function (e, t) { var n = t.hflip, a = t.vflip, o = t.rotation; if (e.x *= n ? -1 : 1, e.y *= a ? -1 : 1, 0 !== o) { var i = o * Math.PI / 180, r = Math.cos(i), s = Math.sin(i), l = e.x * r - e.y * s, c = e.x * s + e.y * r; e.x = l, e.y = c } return e } }, hi = function (e) { function t() { var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}; i()(this, t); return c()(this, d()(t).call(this, e, { name: "ZoomMouseWheel", supportedInteractionTypes: ["MouseWheel"], configuration: { minScale: .25, maxScale: 20, invert: !1 } })) } return v()(t, e), s()(t, [{ key: "mouseWheelCallback", value: function (e) { var t = e.detail, n = t.element, a = t.viewport, o = t.spinY, i = this.configuration, r = i.invert, s = i.maxScale, l = i.minScale, c = ui(a, r ? o / 4 : -o / 4, { maxScale: s, minScale: l }); p.cornerstone.setViewport(n, c) } }]), t }(ge), vi = di.correctShift, gi = di.changeViewportScale, fi = function (e) { function t() { var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}; i()(this, t); var n = { name: "Zoom", strategies: { default: pi, translate: yi, zoomToCenter: xi }, defaultStrategy: "default", supportedInteractionTypes: ["Mouse", "Touch"], configuration: { invert: !1, preventZoomOutsideImage: !1, minScale: .25, maxScale: 20 }, svgCursor: ln }; return c()(this, d()(t).call(this, e, n)) } return v()(t, e), s()(t, [{ key: "touchDragCallback", value: function (e) { mi.call(this, e) } }, { key: "mouseDragCallback", value: function (e) { mi.call(this, e) } }]), t }(ge), mi = function (e) { if (!e.detail.deltaPoints.page.y) return !1; this.applyActiveStrategy(e, this.configuration), p.cornerstone.setViewport(e.detail.element, e.detail.viewport) }; function pi(e, t) { var n = t.invert, a = t.maxScale, o = t.minScale, i = e.detail.deltaPoints.page.y, r = n ? -i / 100 : i / 100, s = e.detail, l = s.element, c = s.viewport, u = [e.detail.startPoints.page.x, e.detail.startPoints.page.y, e.detail.startPoints.image.x, e.detail.startPoints.image.y], d = u[0], h = u[1], v = u[2], g = u[3], f = gi(c, r, { maxScale: a, minScale: o }); p.cornerstone.setViewport(l, f); var m = p.cornerstone.pageToPixel(l, d, h), y = { x: v - m.x, y: g - m.y }; y = vi(y, f), c.translation.x -= y.x, c.translation.y -= y.y } function yi(e, t) { var n = t.invert, a = t.preventZoomOutsideImage, o = t.maxScale, i = t.minScale, r = e.detail.deltaPoints.page.y, s = n ? -r / 100 : r / 100, l = e.detail.image, c = e.detail.viewport, u = [e.detail.startPoints.image.x, e.detail.startPoints.image.y], d = u[0], h = u[1], v = gi(c, s, { maxScale: o, minScale: i }), g = { x: 0, y: 0 }; if (s < 0) v.scale < 3 && (Math.abs(v.translation.x) < .01 ? v.translation.x = 0 : g.x = v.translation.x / 8, Math.abs(v.translation.y) < .01 ? v.translation.y = 0 : g.y = v.translation.y / 8); else { a && _e(e.detail.startPoints.image, l); var f = { x: l.width / 2 - d, y: l.height / 2 - h }; f = vi(f, v); var m = { x: v.translation.x - f.x, y: v.translation.y - f.y }; Math.abs(m.x) < .01 ? v.translation.x = f.x : g.x = m.x / 8, Math.abs(m.y) < .01 ? v.translation.y = f.y : g.y = m.y / 8 } v.translation.x -= g.x, v.translation.y -= g.y } function xi(e, t) { var n = t.invert, a = t.maxScale, o = t.minScale, i = e.detail.deltaPoints.page.y, r = n ? -i / 100 : i / 100, s = e.detail.viewport; gi(s, r, { maxScale: a, minScale: o }) } var Ti = di.correctShift, Ci = function (e) { function t() { var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}; i()(this, t); return c()(this, d()(t).call(this, e, { name: "ZoomTouchPinch", supportedInteractionTypes: ["TouchPinch"], configuration: { minScale: .25, maxScale: 20 } })) } return v()(t, e), s()(t, [{ key: "touchPinchCallback", value: function (e) { var t = e.detail, n = t.element, a = t.viewport, o = t.scaleChange, i = [e.detail.startPoints.page.x, e.detail.startPoints.page.y, e.detail.startPoints.image.x, e.detail.startPoints.image.y], r = i[0], s = i[1], l = i[2], c = i[3], u = this.configuration, d = u.maxScale, h = u.minScale; a.scale += o * a.scale, d && a.scale > d ? a.scale = d : h && a.scale < h && (a.scale = h), p.cornerstone.setViewport(n, a); var v = p.cornerstone.pageToPixel(n, r, s), g = { x: l - v.x, y: c - v.y }; g = Ti(g, a), a.translation.x -= g.x, a.translation.y -= g.y, p.cornerstone.setViewport(n, a) } }]), t }(ge), bi = function (e) { return { page: Ei(e.page), image: Ei(e.image), client: Ei(e.client), canvas: Ei(e.canvas) } }; function Ei() { var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}; return { x: e.x, y: e.y } } var Mi, wi = { 48: "0", 49: "1", 50: "2", 51: "3", 52: "4", 53: "5", 54: "6", 55: "7", 56: "8", 57: "9", 96: "0", 97: "1", 98: "2", 99: "3", 100: "4", 101: "5", 102: "6", 103: "7", 104: "8", 105: "9", 65: "a", 66: "b", 67: "c", 68: "d", 69: "e", 70: "f", 71: "g", 72: "h", 73: "i", 74: "j", 75: "k", 76: "l", 77: "m", 78: "n", 79: "o", 80: "p", 81: "q", 82: "r", 83: "s", 84: "t", 85: "u", 86: "v", 87: "w", 88: "x", 89: "y", 90: "z", 112: "F1", 113: "F2", 114: "F3", 115: "F4", 116: "F5", 13: "RETURN", 8: "BACKSPACE", 9: "TAB", 46: "DELETE", 12: "DELETE", 27: "ESCAPE", 20: "CAPSLOCK", 173: "-", 189: "-", 109: "-", 61: "+", 187: "+", 107: "+", 219: "[", 221: "]", 59: ";", 186: ";", 188: ",", 190: ".", 199: "/" }, Si = { "base/BaseTool": ge, "base/BaseAnnotationTool": et, "base/BaseBrushTool": He, "tools/cursors/MouseCursor": Ft, "tools/cursors": a, "manipulators/anyHandlesOutsideImage": ke, "manipulators/getHandleNearImagePoint": we, "manipulators/handleActivator": Se, "manipulators/moveAllHandles": Ve, "manipulators/moveHandle": We, "manipulators/moveNewHandle": Xe, "manipulators/moveHandleNearImagePoint": Ze, "manipulators/findHandleDataNearImagePoint": $e, "manipulators/moveAnnotation": Je, "mixins/activeOrDisabledBinaryTool": re.activeOrDisabledBinaryTool, "mixins/enabledOrDisabledBinaryTool": re.enabledOrDisabledBinaryTool, "drawing/getNewContext": Dt, "drawing/draw": lt, "drawing/path": ct, "drawing/setShadow": At, "drawing/drawLine": ut, "drawing/drawLines": function (e, t, n, a) { var o = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : "pixel"; ct(e, a, function (e) { n.forEach(function (n) { var a = n.start, i = n.end; if ("pixel" === o) { var r = p.cornerstone; a = r.pixelToCanvas(t, a), i = r.pixelToCanvas(t, i) } e.moveTo(a.x, a.y), e.lineTo(i.x, i.y) }) }) }, "drawing/drawJoinedLines": dt, "drawing/drawCircle": vt, "drawing/drawEllipse": xt, "drawing/drawRect": Ot, "drawing/fillOutsideRect": function (e, t, n, a, o) { if ("pixel" === (arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : "pixel")) { var i = p.cornerstone; n = i.pixelToCanvas(t, n), a = i.pixelToCanvas(t, a) } var r = Math.min(n.x, a.x), s = Math.min(n.y, a.y), l = Math.abs(n.x - a.x), c = Math.abs(n.y - a.y); ct(e, o, function (e) { e.rect(0, 0, e.canvas.clientWidth, e.canvas.clientHeight), e.rect(r + l, s, -l, c) }) }, "drawing/drawTextBox": _t, "drawing/drawArrow": ht, "drawing/fillBox": kt, "drawing/fillTextLines": St, "drawing/drawLink": Ct, "drawing/drawLinkedTextBox": Pt, "drawing/drawHandles": Tt, "drawing/textBoxWidth": It, "util/getLuminance": ai, "util/copyPoints": bi, "util/calculateSUV": Wn, "util/setContextToDisplayFontSize": function (e, t, n) { return p.cornerstone.setToPixelCoordinateSystem(e, t, .1), { fontSize: n / e.viewport.scale / .1, lineHeight: n / e.viewport.scale / .1, fontScale: .1 } }, "util/scrollToIndex": $o, "util/scroll": Jo, "util/roundToDecimal": Nt, "util/projectPatientPointToImagePlane": ft, "util/imagePointToPatientPoint": mt, "util/planePlaneIntersection": pt, "util/pointInsideBoundingBox": Ee, "util/makeUnselectable": function (e, t) { e.style.webkitUserSelect = "none", e.style.webkitTouchCallout = "none", e.style.mozUserSelect = "none", e.style.msUserSelect = "none", e.style.oUserSelect = "none", e.style.khtmlUserSelect = "none", e.style.userSelect = "none", e.unselectable = "on", e.oncontextmenu = function () { return !1 }, !0 === t && (e.style.pointerEvents = "none") }, "util/getRGBPixels": Da, "util/getDefaultSimultaneousRequests": Fo, "util/getMaxSimultaneousRequests": Bo, "util/getBrowserInfo": No, "util/isMobileDevice": function () { return new RegExp("Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini").test(navigator.userAgent) }, "util/angleBetweenPoints": So, "util/getKeyFromKeyCode": function (e) { return wi[e] }, "util/numbersWithCommas": $n, "util/lineSegDistance": Ut, "util/triggerEvent": C, "util/convertToVectro3": gt, "util/ellipseUtils": Kn, "util/freehandUtils": Ca, "util/brushUtils": Va, "util/zoomUtils": di }, ki = function (e) { return Si[e] }, Ii = V("eventListeners:mouseEventListeners"), _i = !0, Pi = 200; function Oi(e) { if ("number" == typeof e.buttons) return e.buttons; switch (e.which) { case 0: return 0; case 1: return 1; case 2: return 4; case 3: return 2 }return 0 } function Di() { _i = !1 } function Li(e) { var t = e.currentTarget, n = p.cornerstone.getEnabledElement(t); if (n.image) { var a = T.MOUSE_DOUBLE_CLICK, o = { page: p.cornerstoneMath.point.pageToPoint(e), image: p.cornerstone.pageToPixel(t, e.pageX, e.pageY), client: { x: e.clientX, y: e.clientY } }; o.canvas = p.cornerstone.pixelToCanvas(t, o.image); var i = bi(o); Ii.log("double-click: %o", Oi(e)), C(t, a, { event: e, buttons: Oi(e), viewport: p.cornerstone.getViewport(t), image: n.image, element: t, startPoints: o, lastPoints: i, currentPoints: o, deltaPoints: { x: 0, y: 0 }, type: a }) } } function Ai(e) { var t = e.currentTarget, n = p.cornerstone.getEnabledElement(t); if (n.image) { Mi = setTimeout(Di, Pi), t.removeEventListener("mousemove", Ri); var a = { page: p.cornerstoneMath.point.pageToPoint(e), image: p.cornerstone.pageToPixel(t, e.pageX, e.pageY), client: { x: e.clientX, y: e.clientY } }; a.canvas = p.cornerstone.pixelToCanvas(t, a.image); var o = bi(a), i = { event: e, buttons: Oi(e), viewport: p.cornerstone.getViewport(t), image: n.image, element: t, startPoints: a, lastPoints: o, currentPoints: a, deltaPoints: { x: 0, y: 0 }, type: T.MOUSE_DOWN }; C(i.element, T.MOUSE_DOWN, i) && (i.type = T.MOUSE_DOWN_ACTIVATE, C(i.element, T.MOUSE_DOWN_ACTIVATE, i)), document.addEventListener("mousemove", r), document.addEventListener("mouseup", function e(i) { clearTimeout(Mi); var s = T.MOUSE_UP; _i && (s = T.MOUSE_CLICK); var l = { page: p.cornerstoneMath.point.pageToPoint(i), image: p.cornerstone.pageToPixel(t, i.pageX, i.pageY), client: { x: i.clientX, y: i.clientY } }; l.canvas = p.cornerstone.pixelToCanvas(t, l.image); var c = { page: p.cornerstoneMath.point.subtract(l.page, o.page), image: p.cornerstoneMath.point.subtract(l.image, o.image), client: p.cornerstoneMath.point.subtract(l.client, o.client), canvas: p.cornerstoneMath.point.subtract(l.canvas, o.canvas) }; Ii.log("mouseup: %o", Oi(i)); var u = { event: i, buttons: Oi(i), viewport: p.cornerstone.getViewport(t), image: n.image, element: t, startPoints: a, lastPoints: o, currentPoints: l, deltaPoints: c, type: s }; C(u.element, s, u), document.removeEventListener("mousemove", r), document.removeEventListener("mouseup", e), t.addEventListener("mousemove", Ri), _i = !0 }) } function r(e) { var i = T.MOUSE_DRAG, r = { page: p.cornerstoneMath.point.pageToPoint(e), image: p.cornerstone.pageToPixel(t, e.pageX, e.pageY), client: { x: e.clientX, y: e.clientY } }; r.canvas = p.cornerstone.pixelToCanvas(t, r.image); var s = { page: p.cornerstoneMath.point.subtract(r.page, o.page), image: p.cornerstoneMath.point.subtract(r.image, o.image), client: p.cornerstoneMath.point.subtract(r.client, o.client), canvas: p.cornerstoneMath.point.subtract(r.canvas, o.canvas) }; Ii.log("mousemove: %o", Oi(e)); var l = { buttons: Oi(e), viewport: p.cornerstone.getViewport(t), image: n.image, element: t, startPoints: a, lastPoints: o, currentPoints: r, deltaPoints: s, type: i, ctrlKey: e.ctrlKey, metaKey: e.metaKey, shiftKey: e.shiftKey }; C(l.element, i, l), o = bi(r) } } function Ri(e) { var t = e.currentTarget, n = p.cornerstone.getEnabledElement(t); if (n.image) { var a = T.MOUSE_MOVE, o = { page: p.cornerstoneMath.point.pageToPoint(e), image: p.cornerstone.pageToPixel(t, e.pageX, e.pageY), client: { x: e.clientX, y: e.clientY } }; o.canvas = p.cornerstone.pixelToCanvas(t, o.image); var i = bi(o), r = { page: p.cornerstoneMath.point.pageToPoint(e), image: p.cornerstone.pageToPixel(t, e.pageX, e.pageY), client: { x: e.clientX, y: e.clientY } }; r.canvas = p.cornerstone.pixelToCanvas(t, r.image); var s = { page: p.cornerstoneMath.point.subtract(r.page, i.page), image: p.cornerstoneMath.point.subtract(r.image, i.image), client: p.cornerstoneMath.point.subtract(r.client, i.client), canvas: p.cornerstoneMath.point.subtract(r.canvas, i.canvas) }; C(t, a, { viewport: p.cornerstone.getViewport(t), image: n.image, element: t, startPoints: o, lastPoints: i, currentPoints: r, deltaPoints: s, type: a }), i = bi(r) } } function Hi(e) { e.removeEventListener("mousedown", Ai), e.removeEventListener("mousemove", Ri), e.removeEventListener("dblclick", Li) } var Ui = { enable: function (e) { Hi(e), e.addEventListener("mousedown", Ai), e.addEventListener("mousemove", Ri), e.addEventListener("dblclick", Li) }, disable: Hi }, Ni = function (e) { var t = 0, n = 0, a = 0, o = 0; return "detail" in e && (n = e.detail), "wheelDelta" in e && (n = -e.wheelDelta / 120), "wheelDeltaY" in e && (n = -e.wheelDeltaY / 120), "wheelDeltaX" in e && (t = -e.wheelDeltaX / 120), a = 10 * t, o = 10 * n, "deltaY" in e && (o = e.deltaY), "deltaX" in e && (a = e.deltaX), (a || o) && e.deltaMode && (1 === e.deltaMode ? (a *= 40, o *= 40) : (a *= 800, o *= 800)), a && !t && (t = a < 1 ? -1 : 1), o && !n && (n = o < 1 ? -1 : 1), { spinX: t, spinY: n, pixelX: a, pixelY: o } }; function Bi(e) { var t = e.currentTarget, n = p.cornerstone.getEnabledElement(t); if (n.image && !(e.deltaY > -1 && e.deltaY < 1)) { e.preventDefault(); var a = e.pageX, o = e.pageY, i = p.cornerstone.pageToPixel(t, a, o), r = Ni(e), s = r.spinX, l = r.spinY, c = r.pixelX, u = r.pixelY, d = l < 0 ? -1 : 1, h = { element: t, viewport: p.cornerstone.getViewport(t), detail: e, image: n.image, direction: d, spinX: s, spinY: l, pixelX: c, pixelY: u, pageX: a, pageY: o, imageX: i.x, imageY: i.y }; C(t, T.MOUSE_WHEEL, h) } } function Fi(e) { e.removeEventListener("wheel", Bi, { passive: !1 }) } var Vi, qi, zi = { enable: function (e) { Fi(e), e.addEventListener("wheel", Bi, { passive: !1 }) }, disable: Fi }, ji = 2e3, Wi = { mouse: 0, touch: 1 }; function Gi(e, t) { var n = Date.now(); if (e !== Vi) { if (n - qi <= ji) return t.preventDefault(), t.stopPropagation(), t.stopImmediatePropagation(), !1; Vi = e } qi = n } var Yi = Gi.bind(null, Wi.mouse), Xi = Gi.bind(null, Wi.touch); function Ki(e, t, n) { var a = n ? Yi : Xi; t.forEach(function (t) { e.addEventListener(t, a, { passive: !1 }) }) } function Zi(e, t, n) { var a = n ? Yi : Xi; t.forEach(function (t) { e.removeEventListener(t, a) }) } var $i = ["mousedown", "mouseup"], Ji = ["touchstart", "touchend"]; function Qi(e) { Zi(e, $i, Wi.mouse), Zi(e, Ji, Wi.touch) } var er, tr, nr, ar, or, ir, rr, sr, lr, cr = { enable: function (e) { Qi(e), Ki(e, $i, Wi.mouse), Ki(e, Ji, Wi.touch) }, disable: Qi }, ur = 1, dr = 0, hr = !1, vr = !1, gr = 700, fr = 5, mr = "touchInput"; function pr(e) { var t = e.currentTarget || e.srcEvent.currentTarget, n = p.cornerstone.getEnabledElement(t); if (n.image) { var a, o, i, r; switch (e.preventDefault(), (e.pointers && e.pointers.length > 1 || e.touches && e.touches.length > 1) && (vr = !1, clearTimeout(rr)), e.type) { case "tap": vr = !1, clearTimeout(rr), (tr = { page: p.cornerstoneMath.point.pageToPoint(e.pointers[0]), image: p.cornerstone.pageToPixel(t, e.pointers[0].pageX, e.pointers[0].pageY), client: { x: e.pointers[0].clientX, y: e.pointers[0].clientY } }).canvas = p.cornerstone.pixelToCanvas(t, tr.image), a = T.TAP, or = { event: e, viewport: p.cornerstone.getViewport(t), image: n.image, element: t, currentPoints: tr, type: a, isTouchEvent: !0 }, C(t, a, or); break; case "doubletap": vr = !1, clearTimeout(rr), (tr = { page: p.cornerstoneMath.point.pageToPoint(e.pointers[0]), image: p.cornerstone.pageToPixel(t, e.pointers[0].pageX, e.pointers[0].pageY), client: { x: e.pointers[0].clientX, y: e.pointers[0].clientY } }).canvas = p.cornerstone.pixelToCanvas(t, tr.image), a = T.DOUBLE_TAP, or = { event: e, viewport: p.cornerstone.getViewport(t), image: n.image, element: t, currentPoints: tr, type: a, isTouchEvent: !0 }, C(t, a, or); break; case "pinchstart": vr = !1, clearTimeout(rr), ur = 1; break; case "pinchmove": if (vr = !1, clearTimeout(rr), !0 === hr) { ur = e.scale, hr = !1; break } o = (e.scale - ur) / ur, (er = { page: e.center, image: p.cornerstone.pageToPixel(t, e.center.x, e.center.y) }).canvas = p.cornerstone.pixelToCanvas(t, er.image), a = T.TOUCH_PINCH, or = { event: e, startPoints: er, viewport: p.cornerstone.getViewport(t), image: n.image, element: t, direction: e.scale < 1 ? 1 : -1, scaleChange: o, type: a, isTouchEvent: !0 }, C(t, a, or), ur = e.scale; break; case "touchstart": ur = 1, clearTimeout(rr), clearTimeout(ir), ir = setTimeout(function () { (er = { page: p.cornerstoneMath.point.pageToPoint(e.touches[0]), image: p.cornerstone.pageToPixel(t, e.touches[0].pageX, e.touches[0].pageY), client: { x: e.touches[0].clientX, y: e.touches[0].clientY } }).canvas = p.cornerstone.pixelToCanvas(t, er.image), a = T.TOUCH_START, e.touches.length > 1 && (a = T.MULTI_TOUCH_START), or = { event: e, viewport: p.cornerstone.getViewport(t), image: n.image, element: t, startPoints: er, currentPoints: er, type: a, isTouchEvent: !0 }, !0 === C(t, a, or) && (a = T.TOUCH_START_ACTIVE, e.touches.length > 1 && (a = T.MULTI_TOUCH_START_ACTIVE), or.type = a, C(t, a, or)), nr = bi(er) }, 50), vr = !0, sr = 0, rr = setTimeout(function () { vr && ((tr = { page: p.cornerstoneMath.point.pageToPoint(e.touches[0]), image: p.cornerstone.pageToPixel(t, e.touches[0].pageX, e.touches[0].pageY), client: { x: e.touches[0].clientX, y: e.touches[0].clientY } }).canvas = p.cornerstone.pixelToCanvas(t, er.image), a = T.TOUCH_PRESS, or = { event: e, viewport: p.cornerstone.getViewport(t), image: n.image, element: t, currentPoints: tr, type: a, isTouchEvent: !0 }, C(t, a, or)) }, gr); break; case "touchend": ur = 1, vr = !1, clearTimeout(rr), setTimeout(function () { (er = { page: p.cornerstoneMath.point.pageToPoint(e.changedTouches[0]), image: p.cornerstone.pageToPixel(t, e.changedTouches[0].pageX, e.changedTouches[0].pageY), client: { x: e.changedTouches[0].clientX, y: e.changedTouches[0].clientY } }).canvas = p.cornerstone.pixelToCanvas(t, er.image), a = T.TOUCH_END, or = { event: e, viewport: p.cornerstone.getViewport(t), image: n.image, element: t, startPoints: er, currentPoints: er, type: a, isTouchEvent: !0 }, C(t, a, or) }, 50); break; case "panmove": i = { x: e.deltaX - lr.x, y: e.deltaY - lr.y }, lr = { x: e.deltaX, y: e.deltaY }, (tr = { page: { x: nr.page.x + i.x, y: nr.page.y + i.y }, image: p.cornerstone.pageToPixel(t, nr.page.x + i.x, nr.page.y + i.y), client: { x: nr.client.x + i.x, y: nr.client.y + i.y } }).canvas = p.cornerstone.pixelToCanvas(t, tr.image), ar = { page: p.cornerstoneMath.point.subtract(tr.page, nr.page), image: p.cornerstoneMath.point.subtract(tr.image, nr.image), client: p.cornerstoneMath.point.subtract(tr.client, nr.client), canvas: p.cornerstoneMath.point.subtract(tr.canvas, nr.canvas) }, (sr += Math.sqrt(ar.page.x * ar.page.x + ar.page.y * ar.page.y)) > fr && (vr = !1, clearTimeout(rr)), a = T.TOUCH_DRAG, e.pointers.length > 1 && (a = T.MULTI_TOUCH_DRAG), or = { viewport: p.cornerstone.getViewport(t), image: n.image, element: t, startPoints: er, lastPoints: nr, currentPoints: tr, deltaPoints: ar, numPointers: e.pointers.length, type: a, isTouchEvent: !0 }, C(t, a, or), nr = bi(tr); break; case "panstart": lr = { x: e.deltaX, y: e.deltaY }, (tr = { page: p.cornerstoneMath.point.pageToPoint(e.pointers[0]), image: p.cornerstone.pageToPixel(t, e.pointers[0].pageX, e.pointers[0].pageY), client: { x: e.pointers[0].clientX, y: e.pointers[0].clientY } }).canvas = p.cornerstone.pixelToCanvas(t, tr.image), nr = bi(tr); break; case "panend": if (vr = !1, clearTimeout(rr), !nr) return !1; (tr = { page: p.cornerstoneMath.point.pageToPoint(e.pointers[0]), image: p.cornerstone.pageToPixel(t, e.pointers[0].pageX, e.pointers[0].pageY), client: { x: e.pointers[0].clientX, y: e.pointers[0].clientY } }).canvas = p.cornerstone.pixelToCanvas(t, tr.image), ar = { page: p.cornerstoneMath.point.subtract(tr.page, nr.page), image: p.cornerstoneMath.point.subtract(tr.image, nr.image), client: p.cornerstoneMath.point.subtract(tr.client, nr.client), canvas: p.cornerstoneMath.point.subtract(tr.canvas, nr.canvas) }, a = T.TOUCH_DRAG_END, or = { event: e.srcEvent, viewport: p.cornerstone.getViewport(t), image: n.image, element: t, startPoints: er, lastPoints: nr, currentPoints: tr, deltaPoints: ar, type: a, isTouchEvent: !0 }, C(t, a, or), 2 === e.pointers.length - e.changedPointers.length && (hr = !0); break; case "rotatemove": vr = !1, clearTimeout(rr), r = e.rotation - dr, dr = e.rotation, a = T.TOUCH_ROTATE, or = { event: e.srcEvent, viewport: p.cornerstone.getViewport(t), image: n.image, element: t, rotation: r, type: a }, C(t, a, or) }return !1 } } function yr(e) { cr.disable(e);["touchstart", "touchend"].forEach(function (t) { e.removeEventListener(t, pr) }); var t = no(mr, e).hammer; t && t.off("tap doubletap panstart panmove panend pinchstart pinchmove rotatemove", pr) } var xr = { enable: function (e) { yr(e); var t = p.Hammer, n = { inputClass: t.SUPPORT_POINTER_EVENTS ? t.PointerEventInput : t.TouchInput }, a = new t.Manager(e, n), o = { pointers: 0, direction: t.DIRECTION_ALL, threshold: 0 }, i = new t.Pan(o), r = new t.Pinch({ threshold: 0 }), s = new t.Rotate({ threshold: 0 }); r.recognizeWith(i), r.recognizeWith(s), s.recognizeWith(i); var l = new t.Tap({ event: "doubletap", taps: 2, interval: 1500, threshold: 50, posThreshold: 50 }); l.recognizeWith(i), a.add([l, i, s, r]), a.on("tap doubletap panstart panmove panend pinchstart pinchmove rotatemove", pr), cr.enable(e), ["touchstart", "touchend"].forEach(function (t) { e.addEventListener(t, pr, { passive: !1 }) }); var c = no(mr, e); c.hammer = a, ao(mr, e, c) }, disable: yr }; "createImageBitmap" in window || (window.createImageBitmap = function (e) { return new Promise(function (t) { var n = document.createElement("img"); n.addEventListener("load", function () { t(this) }); var a = document.createElement("canvas"); a.width = e.width, a.height = e.height, a.getContext("2d").putImageData(e, 0, 0, 0, 0, a.width, a.height), n.src = a.toDataURL() }) }); var Tr = D.modules.brush, Cr = Tr.state, br = Tr.getters, Er = Tr.setters; function Mr(e, t, n) { var a = e.detail.element, o = n.toolData, i = n.visibleSegmentations; return !(!o.data[t] || !o.data[t].pixelData) && (!!i[t] || Cr.drawColorId === t && Pe(a, D.state.tools).filter(function (e) { return e instanceof He }).length > 0) } function wr(e, t, n) { var a = n.toolData, o = n.imageBitmapCache, i = n.visibleSegmentations; o && o[t] && function (e, t, n) { var a = e.detail, o = Dt(a.canvasContext.canvas), i = p.cornerstone.pixelToCanvas(a.element, { x: 0, y: 0 }), r = p.cornerstone.pixelToCanvas(a.element, { x: a.image.width, y: 0 }), s = p.cornerstone.pixelToCanvas(a.element, { x: a.image.width, y: a.image.height }), l = p.cornerstoneMath.point.distance(i, r), c = p.cornerstoneMath.point.distance(r, s), u = a.canvasContext.canvas, d = a.viewport; o.imageSmoothingEnabled = !1, o.globalAlpha = function (e) { if (e) return Cr.alpha; return Cr.hiddenButActiveAlpha }(n), Rt(o, u, d); var h = { x: d.translation.x * d.scale, y: d.translation.y * d.scale }; o.drawImage(t, u.width / 2 - l / 2 + h.x, u.height / 2 - c / 2 + h.y, l, c), o.globalAlpha = 1, Ht(o) }(e, o[t], i[t]), a.data[t].invalidated && function (e, t, n) { var a = e.detail, o = a.element, i = p.cornerstone.getEnabledElement(o), r = t.data[n].pixelData, s = t.data[n].alpha; if (!r) return; var l = Cr.colorMapId, c = [[0, 0, 0, 0], p.cornerstone.colors.getColormap(l).getColor(n)], u = new ImageData(a.image.width, a.image.height), d = { stats: {}, minPixelValue: 0, getPixelData: function () { return r } }; void 0 !== s && (c[1][3] = s); p.cornerstone.storedPixelDataToCanvasImageDataColorLUT(d, c, u.data), window.createImageBitmap(u).then(function (e) { Er.imageBitmapCacheForElement(i.uuid, n, e), t.data[n].invalidated = !1, p.cornerstone.updateImage(a.element) }) }(e, a, t) } var Sr = function (e) { var t = e.detail.element, n = _.tools.filter(function (e) { return e.element === t && ("active" === e.mode || "passive" === e.mode || "enabled" === e.mode) }); n.filter(function (e) { return e instanceof He }).length > 0 && function (e) { var t = e.detail.element, n = He.getNumberOfColors(), a = xe(t, He.getReferencedToolDataName()); if (a) for (var o = p.cornerstone.getEnabledElement(t).uuid, i = { visibleSegmentations: br.visibleSegmentationsForElement(o), imageBitmapCache: br.imageBitmapCacheForElement(o), toolData: a }, r = 0; r < n; r++)Mr(e, r, i) && wr(e, r, i) }(e), n.forEach(function (t) { t.renderToolData && t.renderToolData(e) }) }, kr = function (e) { e.addEventListener(p.cornerstone.EVENTS.IMAGE_RENDERED, Sr) }, Ir = function (e) { e.removeEventListener(p.cornerstone.EVENTS.IMAGE_RENDERED, Sr) }, _r = function (e, t, n) { if (_.isToolLocked) return !1; var a = n.detail.element, o = _.tools.filter(function (t) { return t.supportedInteractionTypes.includes(e) }); if (o = (o = Pe(a, o, e)).filter(function (e) { return "function" == typeof e[t] }), _.isMultiPartToolActive && (o = Ue(o)), 0 === o.length) return !1; o[0][t](n) }, Pr = function (e, t, n) { var a = "mouse" === (arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : "mouse") ? _.clickProximity : _.touchProximity; return t.filter(function (t) { for (var o = xe(e, t.name), i = 0; i < o.data.length; i++)if (void 0 !== we(e, o.data[i].handles, n, a)) return !0; return !1 }) }, Or = function (e, t) { return t.filter(function (t) { return t.element === e && ("active" === t.mode || "passive" === t.mode) }) }, Dr = function (e, t) { return t.filter(function (t) { var n = xe(e, t.name); return n && n.data.length > 0 }) }, Lr = function (e) { if (!_.isToolLocked) { var t = e.detail, n = e.detail.element, a = e.detail.currentPoints.canvas, o = Or(n, P.mouseTools()), i = o.filter(function (e) { return "active" === e.mode && Array.isArray(e.options.mouseButtonMask) && e.options.mouseButtonMask.includes(t.buttons) && e.options.isMouseActive }); if (_.isMultiPartToolActive && (i = Ue(i)), i.length > 0) { var r = i.find(function (e) { return "function" == typeof e.preMouseDownCallback }); if (r) if (r.preMouseDownCallback(e)) return } if (!_.isMultiPartToolActive) { var s = Dr(n, o), l = Pr(n, s, a, "mouse"); if (l.length > 0) { var c = l[0], u = xe(n, c.name), d = $e(n, u, c.name, a), h = d.handle, v = d.data; c.handleSelectedCallback(e, v, h, "mouse") } else { var g = o.filter(function (e) { var t = xe(n, e.name); return t && t.data && e.pointNearTool && t.data.some(function (t) { return e.pointNearTool(n, t, a, "mouse") }) }); if (g.length > 0) { var f = g[0], m = xe(n, f.name).data.find(function (e) { return f.pointNearTool(n, e, a) }); f.toolSelectedCallback(e, m, "mouse") } else if (i.length > 0) { var p = i.find(function (e) { return "function" == typeof e.postMouseDownCallback }); if (p) if (p.postMouseDownCallback(e)) return } } } } }, Ar = V("eventDispatchers:mouseEventHandlers"), Rr = function (e) { if (!_.isToolLocked) { var t = e.detail, n = Ne(t.element, t.buttons, "mouse"); if (n) { if ("function" == typeof n.preMouseDownActivateCallback) if (n.preMouseDownActivateCallback(e)) return; _.isMultiPartToolActive || (n.addNewMeasurement ? n.addNewMeasurement(e, "mouse") : n instanceof et && function (e, t) { Ar.log("addNewMeasurement"), e.preventDefault(), e.stopPropagation(); var n = e.detail, a = n.element, o = t.createNewMeasurement(n); if (o) { ye(a, t.name, o), p.cornerstone.updateImage(a); var i = Object.assign({ doneMovingCallback: function () { var e = T.MEASUREMENT_COMPLETED, n = { toolName: t.name, element: a, measurementData: o }; C(a, e, n) } }, t.options); (1 === Object.keys(o.handles).length ? We : Xe)(n, t.name, o, o.handles.end, i, "mouse") } }(e, n)) } } }, Hr = function (e) { if (!_.isToolLocked) { var t, n = e.detail, a = n.element; if (t = (t = (t = Pe(a, P.mouseTools())).filter(function (e) { return Array.isArray(e.options.mouseButtonMask) && e.options.mouseButtonMask.includes(n.buttons) && e.options.isMouseActive })).filter(function (e) { return "function" == typeof e.mouseDragCallback }), _.isMultiPartToolActive && (t = Ue(t)), 0 !== t.length) t[0].mouseDragCallback(e) } }, Ur = function (e) { if (!_.isToolLocked && !_.isMultiPartToolActive) { var t, n = e.detail, a = n.element, o = n.currentPoints; _.mousePositionImage = o.image; var i = (t = Or(a, P.mouseTools())).filter(function (e) { return "active" === e.mode && e.options.isMouseActive }), r = !1; i.length > 0 && (r = i.some(function (e) { return e.updateOnMouseMove })), t = Dr(a, t); for (var s = 0; s < t.length; s++) { var l = t[s]; "function" == typeof l.mouseMoveCallback && (r = l.mouseMoveCallback(e) || r) } !0 === r && p.cornerstone.updateImage(a) } }, Nr = _r.bind(null, "Mouse", "mouseClickCallback"), Br = _r.bind(null, "Mouse", "doubleClickCallback"), Fr = _r.bind(null, "Mouse", "mouseUpCallback"), Vr = _r.bind(null, "MouseWheel", "mouseWheelCallback"), qr = function (e) { e.addEventListener(T.MOUSE_CLICK, Nr), e.addEventListener(T.MOUSE_DOWN, Lr), e.addEventListener(T.MOUSE_DOWN_ACTIVATE, Rr), e.addEventListener(T.MOUSE_DOUBLE_CLICK, Br), e.addEventListener(T.MOUSE_DRAG, Hr), e.addEventListener(T.MOUSE_MOVE, Ur), e.addEventListener(T.MOUSE_UP, Fr), e.addEventListener(T.MOUSE_WHEEL, Vr) }, zr = function (e) { e.removeEventListener(T.MOUSE_CLICK, Nr), e.removeEventListener(T.MOUSE_DOWN, Lr), e.removeEventListener(T.MOUSE_DOWN_ACTIVATE, Rr), e.removeEventListener(T.MOUSE_DOUBLE_CLICK, Br), e.removeEventListener(T.MOUSE_DRAG, Hr), e.removeEventListener(T.MOUSE_MOVE, Ur), e.removeEventListener(T.MOUSE_UP, Fr), e.removeEventListener(T.MOUSE_WHEEL, Vr) }, jr = function (e) { if (_.isToolLocked) return !1; var t = e.detail.element, n = _.tools.filter(function (e) { return e.element === t && ("active" === e.mode || "passive" === e.mode || "enabled" === e.mode) }); if (0 === n.length) return !1; n.forEach(function (t) { t.newImageCallback && t.newImageCallback(e) }), n.filter(function (e) { return e instanceof He }).length > 0 && function (e) { var t = e.detail, n = t.element, a = xe(n, He.getReferencedToolDataName()); a || (ye(n, He.getReferencedToolDataName(), {}), a = xe(n, He.getReferencedToolDataName())); for (var o = He.getNumberOfColors(), i = 0; i < o; i++)a.data[i] && (a.data[i].invalidated = !0); p.cornerstone.updateImage(t.element) }(e) }, Wr = function (e) { e.addEventListener(p.cornerstone.EVENTS.NEW_IMAGE, jr) }, Gr = function (e) { e.removeEventListener(p.cornerstone.EVENTS.NEW_IMAGE, jr) }, Yr = function (e) { if (_.isToolLocked) return !1; var t = e.detail, n = t.element, a = t.numPointers, o = _.tools.filter(function (e) { return e.supportedInteractionTypes.includes("MultiTouch") }); if (o = (o = Pe(n, o, "MultiTouch")).filter(function (e) { return "function" == typeof e.multiTouchDragCallback && a === e.configuration.touchPointers }), _.isMultiPartToolActive && (o = Ue(o)), 0 === o.length) return !1; o[0].multiTouchDragCallback(e) }, Xr = V("eventDispatchers:touchEventHandlers"), Kr = function (e) { if (!_.isToolLocked && !_.isMultiPartToolActive) { var t = Ne(e.detail.element, null, "touch"); t && t.addNewMeasurement ? t.addNewMeasurement(e, "touch") : t instanceof et && function (e, t) { Xr.log("addNewMeasurement"), e.preventDefault(), e.stopPropagation(); var n = e.detail, a = n.element, o = t.createNewMeasurement(n); if (o) { if (ye(a, t.name, o), 1 === Object.keys(o.handles).length && n.type === T.TAP) return o.active = !1, o.handles.end.active = !1, o.handles.end.highlight = !1, o.invalidated = !0, (_.deleteIfHandleOutsideImage || t.options.deleteIfHandleOutsideImage) && ke(n, o.handles) && Te(a, t.name, o), void p.cornerstone.updateImage(a); p.cornerstone.updateImage(a); var i = Object.assign({ doneMovingCallback: function () { var e = T.MEASUREMENT_COMPLETED, n = { toolName: t.name, element: a, measurementData: o }; C(a, e, n) } }, t.options); Xe(n, t.name, o, o.handles.end, i, "touch") } }(e, t) } }, Zr = function (e) { if (e) for (var t = 0; t < e.data.length; t++) { var n = e.data[t]; n.active = !1, n.handles && $r(n.handles) } }; function $r(e) { Object.keys(e).forEach(function (t) { e[t].active = !1 }) } var Jr = function (e) { if (!_.isToolLocked && !_.isMultiPartToolActive) { var t, n = e.detail.element, a = e.detail.currentPoints.canvas; t = Pe(n, P.touchTools()); var o = (t = Dr(n, t)).filter(function (e) { for (var t = xe(n, e.name), o = 0; o < t.data.length; o++)if (void 0 !== we(n, t.data[o].handles, a, 28)) return !0; return !1 }); if (o.length > 0) { var i = o[0], r = xe(n, i.name), s = r.data.find(function (e) { return void 0 !== we(n, e.handles, a, 28) }); r.data.active = !0, s.active = !0, p.cornerstone.updateImage(n); var l = Object.assign({}, { doneMovingCallback: function () { Zr(r) } }, i.options); return We(e.detail, i.name, r.data, s, l, "touch"), e.stopImmediatePropagation(), void e.preventDefault() } var c = t.filter(function (e) { var t = xe(n, e.name); return t && t.data && e.pointNearTool && t.data.some(function (t) { return e.pointNearTool(n, t, a) }) }); if (c.length > 0) { var u = c[0], d = xe(n, u.name), h = d.data.find(function (e) { return u.pointNearTool(n, e, a) }); h.active = !0, p.cornerstone.updateImage(n); var v = Object.assign({}, { doneMovingCallback: function () { Zr(d) } }, u.options); return Ve(e.detail, u.name, h, null, v, "touch"), e.stopImmediatePropagation(), void e.preventDefault() } var g = Pe(n, P.touchTools()); return g.length > 0 && g[0].touchStartActiveCallback ? g[0].touchStartActiveCallback(e) : Kr(e), !1 } }, Qr = function (e) { if (!_.isToolLocked) { var t = e.detail, n = t.element, a = t.startPoints.canvas, o = Or(n, P.touchTools()), i = o.filter(function (e) { return "active" === e.mode && e.options.isTouchActive }); if (_.isMultiPartToolActive && (i = Ue(i)), i.length > 0) { var r = i.find(function (e) { return "function" == typeof e.preTouchStartCallback }); if (r) if (r.preTouchStartCallback(e)) return } if (!_.isMultiPartToolActive) { var s = Dr(n, o), l = Pr(n, s, a, "touch"); if (l.length > 0) { var c = l[0], u = xe(n, c.name), d = $e(n, u, c.name, a, "touch"), h = d.handle, v = d.data; c.handleSelectedCallback(e, v, h, "touch") } else { var g = s.filter(function (e) { var t = xe(n, e.name); return t && t.data && e.pointNearTool && t.data.some(function (t) { return e.pointNearTool(n, t, a, "touch") }) }); if (g.length > 0) { var f = g[0], m = xe(n, f.name).data.find(function (e) { return f.pointNearTool(n, e, a) }); f.toolSelectedCallback(e, m, "touch") } else if (i.length > 0) { var p = i.find(function (e) { return "function" == typeof e.postTouchStartCallback }); if (p) if (p.postTouchStartCallback(e)) return } } } } }, es = _r.bind(null, "DoubleTap", "doubleTapCallback"), ts = _r.bind(null, "Touch", "touchDragCallback"), ns = _r.bind(null, "Touch", "touchEndCallback"), as = _r.bind(null, "TouchPinch", "touchPinchCallback"), os = _r.bind(null, "Touch", "touchPressCallback"), is = _r.bind(null, "TouchRotate", "touchRotateCallback"), rs = function (e) { e.addEventListener(T.TAP, Jr), e.addEventListener(T.TOUCH_START, Qr, { passive: !1 }), e.addEventListener(T.TOUCH_DRAG, ts, { passive: !1 }), e.addEventListener(T.TOUCH_END, ns), e.addEventListener(T.TOUCH_START_ACTIVE, Kr), e.addEventListener(T.TOUCH_PRESS, os), e.addEventListener(T.DOUBLE_TAP, es), e.addEventListener(T.TOUCH_PINCH, as), e.addEventListener(T.TOUCH_ROTATE, is), e.addEventListener(T.MULTI_TOUCH_DRAG, Yr) }, ss = function (e) { e.removeEventListener(T.TAP, Jr), e.removeEventListener(T.TOUCH_START, Qr), e.removeEventListener(T.TOUCH_DRAG, ts), e.removeEventListener(T.TOUCH_END, ns), e.removeEventListener(T.TOUCH_START_ACTIVE, Kr), e.removeEventListener(T.TOUCH_PRESS, os), e.removeEventListener(T.DOUBLE_TAP, es), e.removeEventListener(T.TOUCH_PINCH, as), e.removeEventListener(T.TOUCH_ROTATE, is), e.removeEventListener(T.MULTI_TOUCH_DRAG, Yr) }, ls = V("addTool"), cs = function (e, t, n) { var a = new t(n); L(e, a.name) ? ls.warn("%s has already been added to the target element", a.name) : (a.element = e, D.state.tools.push(a)) }, us = function (e, t) { ds(e, t), D.state.enabledElements.forEach(function (n) { cs(n, e, t) }) }, ds = function (e, t) { if (D.modules.globalConfiguration.state.globalToolSyncEnabled) { var n = new e(t); void 0 !== D.state.globalTools[n.name] ? ls.warn("%s has already been added globally", n.name) : D.state.globalTools[n.name] = { tool: e, props: t, activeBindings: [] } } }, hs = V("internals:addEnabledElement"), vs = function (e) { hs.log("EVENT:ELEMENT_ENABLED"); var t = e.detail.element; kr(t), Wr(t), D.modules.globalConfiguration.state.mouseEnabled && (Ui.enable(t), zi.enable(t), qr(t)), D.modules.globalConfiguration.state.touchEnabled && (xr.enable(t), rs(t)), gs(t) }, gs = function (e) { D.state.enabledElements.push(e), D.modules && function (e) { var t = D.modules; Object.keys(t).forEach(function (n) { "function" == typeof t[n].enabledElementCallback && t[n].enabledElementCallback(e) }) }(e), function (e) { if (!D.modules.globalConfiguration.state.globalToolSyncEnabled) return; Object.keys(D.state.globalTools).forEach(function (t) { var n = D.state.globalTools[t], a = n.tool, o = n.props; cs(e, a, o) }) }(e), function (e) { if (!D.modules.globalConfiguration.state.globalToolSyncEnabled) return; var t = { active: G, passive: J, enabled: Z, disabled: X }; D.state.globalToolChangeHistory.forEach(function (n) { var a = n.args.slice(0); a.unshift(e), t[n.mode].apply(null, a) }) }(e) }; var fs = V("internals:removeEnabledElement"), ms = function (e) { fs.log("EVENT:ELEMENT_DISABLED"); var t = e.detail.element; Ir(t), Gr(t), D.modules.globalConfiguration.state.mouseEnabled && (Ui.disable(t), zi.disable(t), zr(t)), D.modules.globalConfiguration.state.touchEnabled && (xr.disable(t), ss(t)), ps(t), ys(t), xs(t) }, ps = function (e) { D.state.tools = D.state.tools.filter(function (t) { return t.element !== e }) }, ys = function (e) { D.modules && function (e) { var t = D.modules; Object.keys(t).forEach(function (n) { "function" == typeof t[n].removeEnabledElementCallback && t[n].removeEnabledElementCallback(e) }) }(e); var t = D.state.enabledElements.findIndex(function (t) { return t === e }); t > -1 ? D.state.enabledElements.splice(t, 1) : fs.warn("unable to remove element") }, xs = function (e) { eo.removeHandlers(e) }; var Ts, Cs = function () { window.removeEventListener("resize", bs, !1) }; function bs() { Ts || (Ts = setTimeout(function () { Ts = null, Es() }, 66)) } var Es = function () { _.enabledElements.forEach(function (e) { p.cornerstone.resize(e) }) }, Ms = function () { Cs(), window.addEventListener("resize", bs, !1) }, ws = function (e) { var t; !function () { !function () { var e = p.cornerstone, t = e.EVENTS.ELEMENT_ENABLED, n = e.EVENTS.ELEMENT_DISABLED; e.events.removeEventListener(t, vs), e.events.removeEventListener(n, ms) }(); var e = p.cornerstone, t = e.EVENTS.ELEMENT_ENABLED, n = e.EVENTS.ELEMENT_DISABLED; e.events.addEventListener(t, vs), e.events.addEventListener(n, ms) }(), t = D.modules, Object.keys(t).forEach(function (e) { "function" == typeof t[e].onRegisterCallback && t[e].onRegisterCallback() }), Ms(), D.modules.globalConfiguration.state = Object.assign({}, D.modules.globalConfiguration.state, e) }; var Ss, ks = V("stackTools:stackPrefetch"), Is = "stackPrefetch", _s = "prefetch", Ps = { maxImagesToPrefetch: 1 / 0 }, Os = 10; var Ds = function (e) { return Math.max.apply(null, e) }, Ls = function (e) { return Math.min.apply(null, e) }; function As(e) { var t = xe(e, "stack"); if (t && t.data && t.data.length) { var n = t.data[0], a = xe(e, Is); if (a) { var o = a.data[0] || {}; if (o.indicesToRequest && o.indicesToRequest.length || (o.enabled = !1), !1 !== o.enabled) if (a.data[0].indicesToRequest.sort(function (e, t) { return e - t }), o.indicesToRequest.slice().forEach(function (e) { var t = n.imageIds[e]; t && (p.cornerstone.imageCache.getImageLoadObject(t) && C(e)) }), o.indicesToRequest.length) { Zo.clearRequestStack(_s); for (var i, r, s, l, c, u, d = (i = o.indicesToRequest, r = n.currentImageIdIndex, s = [], l = [], i.forEach(function (e) { e < r ? s.push(e) : e > r && l.push(e) }), { low: i.indexOf(Ds(s)), high: i.indexOf(Ls(l)) }), h = eo.getErrorLoadingHandler(e), v = d.low, g = d.high; v >= 0 || g < o.indicesToRequest.length;) { var f = n.currentImageIdIndex, m = f - o.indicesToRequest[v] > Ps.maxImagesToPrefetch, y = o.indicesToRequest[g] - f > Ps.maxImagesToPrefetch, x = !m && v >= 0, T = !y && g < o.indicesToRequest.length; if (!T && !x) break; x && (u = o.indicesToRequest[v--], c = n.imageIds[u], Zo.addRequest(e, c, _s, !1, b, E)), T && (u = o.indicesToRequest[g++], c = n.imageIds[u], Zo.addRequest(e, c, _s, !1, b, E)) } Zo.startGrabbing() } } } function C(e) { var t = o.indicesToRequest.indexOf(e); t > -1 && o.indicesToRequest.splice(t, 1) } function b(e) { ks.log("prefetch done: %s", e.imageId), C(n.imageIds.indexOf(e.imageId)) } function E(t) { ks.log("prefetch errored: %o", t), h && h(e, c, t, "stackPrefetch") } } function Rs(e) { return function (t) { var n, a = t.detail; try { n = xe(e, "stack") } catch (e) { return } if (n && n.data && n.data.length) { var o = n.data[0].imageIds.indexOf(a.imageId); if (!(o < 0)) { var i = xe(e, Is); i && i.data && i.data.length && i.data[0].indicesToRequest.push(o) } } } } function Hs(e) { clearTimeout(Ss), Ss = setTimeout(function () { var t = e.target; try { As(t) } catch (e) { return } }, Os) } var Us = { enable: function (e) { xe(e, Is).data = []; var t = xe(e, "stack"); if (t && t.data && t.data.length) { var n = t.data[0]; if (!0 !== n.preventCache) { var a = { indicesToRequest: function (e, t) { e = Math.round(e) || 0; var n = [], a = (t = Math.round(t) || 0) - e + 1; if (a <= 0) return n; for (; a--;)n[a] = t--; return n }(0, n.imageIds.length - 1), enabled: !0, direction: 1 }, o = a.indicesToRequest.indexOf(n.currentImageIdIndex); a.indicesToRequest.splice(o, 1), ye(e, Is, a), As(e), e.removeEventListener(p.cornerstone.EVENTS.NEW_IMAGE, Hs), e.addEventListener(p.cornerstone.EVENTS.NEW_IMAGE, Hs); var i = Rs(e); p.cornerstone.events.removeEventListener(p.cornerstone.EVENTS.IMAGE_CACHE_PROMISE_REMOVED, i), p.cornerstone.events.addEventListener(p.cornerstone.EVENTS.IMAGE_CACHE_PROMISE_REMOVED, i) } else ks.warn("A stack that should not be cached was given the stackPrefetch") } }, disable: function (e) { clearTimeout(Ss), e.removeEventListener(p.cornerstone.EVENTS.NEW_IMAGE, Hs); var t = Rs(e); p.cornerstone.events.removeEventListener(p.cornerstone.EVENTS.IMAGE_CACHE_PROMISE_REMOVED, t); var n = xe(e, Is); n && n.data.length && (n.data[0].enabled = !1, Zo.clearRequestStack(_s)) }, getConfiguration: function () { return Ps }, setConfiguration: function (e) { var t; Ps = e, e.maxSimultaneousRequests && (t = e.maxSimultaneousRequests, Eo = t) } }, Ns = function () { function e() { i()(this, e), this.currentImageIdIndex = 0, this.layerIds = [], this.findImageFn = void 0 } return s()(e, [{ key: "render", value: function (e, t) { var n = this; if (!Number.isInteger(this.currentImageIdIndex)) throw new Error("FusionRenderer: render - Image ID Index is not an integer"); if (!this.findImageFn) throw new Error("No findImage function has been defined"); t || (t = xe(e, "stack").data); var a = p.cornerstone, o = t[0], i = o.imageIds[this.currentImageIdIndex], r = t.slice(1, t.length); a.loadAndCacheImage(i).then(function (t) { var s = n.layerIds[0]; s ? a.setLayerImage(e, t, s) : (s = a.addLayer(e, t, o.options), n.layerIds.push(s)), a.displayImage(e, t), r.forEach(function (t, o) { var r = n.findImageFn(t.imageIds, i), l = o + 1, c = n.layerIds[l]; c || (c = a.addLayer(e, void 0, t.options), n.layerIds.push(c)), r ? a.loadAndCacheImage(r).then(function (t) { a.setLayerImage(e, t, c), a.updateImage(e) }) : (a.setLayerImage(e, void 0, c), a.setActiveLayer(e, s), a.updateImage(e)) }) }) } }]), e }(), Bs = {}; Bs.FusionRenderer = Ns; var Fs = Bs, Vs = "playClip"; function qs(e) { var t = e.intervalId; void 0 !== t && (e.intervalId = void 0, e.usingFrameTimeVector ? clearTimeout(t) : clearInterval(t)) } function zs(e, t) { var n, a; if (void 0 === e) throw new Error("playClip: element must not be undefined"); var o = xe(e, "stack"); if (o && o.data && o.data.length) { var i, r = p.cornerstone; if (o.data.length > 1) { var s = xe(e, "stackRenderer"); s && s.data && s.data.length && (i = s.data[0]) } var l = o.data[0], c = xe(e, Vs); c && c.data && c.data.length ? qs(n = c.data[0]) : ye(e, Vs, n = { intervalId: void 0, framesPerSecond: 30, lastFrameTimeStamp: void 0, frameRate: 0, frameTimeVector: void 0, ignoreFrameTimeVector: !1, usingFrameTimeVector: !1, speed: 1, reverse: !1, loop: !0 }), (t < 0 || t > 0) && (n.framesPerSecond = Number(t), n.reverse = n.framesPerSecond < 0, n.ignoreFrameTimeVector = !0), !0 !== n.ignoreFrameTimeVector && n.frameTimeVector && n.frameTimeVector.length === l.imageIds.length && (a = function (e, t) { var n, a, o, i = 0, r = e.length, s = []; for (s.isTimeVarying = !1, ("number" != typeof t || t <= 0) && (t = 1), n = 1; n < r; n++)o = Number(e[n]) / t | 0, s.push(o), 1 === n ? a = o : o !== a && (s.isTimeVarying = !0), i += o; return s.length > 0 && (o = s.isTimeVarying ? i / s.length | 0 : s[0], s.push(o)), s }(n.frameTimeVector, n.speed)); var u = function () { var t, a, s, c = l.currentImageIdIndex, u = l.imageIds.length; if (n.reverse ? c-- : c++ , !n.loop && (c < 0 || c >= u)) return qs(n), void function (e) { var t = { element: e }; C(e, T.CLIP_STOPPED, t) }(e); c >= u && (c = 0), c < 0 && (c = u - 1), c !== l.currentImageIdIndex && (t = eo.getStartLoadHandler(e), a = eo.getEndLoadHandler(e), s = eo.getErrorLoadingHandler(e), t && t(e), (!0 === l.preventCache ? r.loadImage(l.imageIds[c]) : r.loadAndCacheImage(l.imageIds[c])).then(function (t) { try { l.currentImageIdIndex = c, i ? (i.currentImageIdIndex = c, i.render(e, o.data)) : r.displayImage(e, t), a && a(e, t) } catch (e) { return } }, function (t) { var n = l.imageIds[c]; s && s(e, n, t) })) }; a && a.length > 0 && a.isTimeVarying ? (n.usingFrameTimeVector = !0, n.intervalId = setTimeout(function e() { n.intervalId = setTimeout(e, a[l.currentImageIdIndex]), u() }, 0)) : (n.usingFrameTimeVector = !1, n.intervalId = setInterval(u, 1e3 / Math.abs(n.framesPerSecond))) } } function js(e) { var t = xe(e, Vs); t && t.data && t.data.length && qs(t.data[0]) } var Ws = function (e, t) { var n = D.state.tools.findIndex(function (n) { return n.element === e && n.name === t }); n >= 0 && D.state.tools.splice(n, 1) }, Gs = function (e) { Ys(e), D.state.enabledElements.forEach(function (t) { Ws(t, e) }) }, Ys = function (e) { D.modules.globalConfiguration.state.globalToolSyncEnabled && D.state.globalTools[e] && delete D.state.globalTools[e] }, Xs = function (e, t, n) { var a = L(e, t); a && a.mergeOptions(n) }, Ks = function (e, t) { _.enabledElements.forEach(function (n) { Xs(n, e, t) }) }; function Zs(e, t) { var n = {}; return { get: function (a, o) { return e.indexOf(o) >= 0 ? (!1 === n.hasOwnProperty(o) && (n[o] = { data: [] }), n[o]) : t.get(a, o) }, add: function (a, o, i) { if (!(e.indexOf(o) >= 0)) return t.add(a, o, i); !1 === n.hasOwnProperty(o) && (n[o] = { data: [] }), n[o].data.push(i) }, saveToolState: function () { return n }, restoreToolState: function (e) { n = e }, toolState: n } } var $s = []; function Js(e, t) { var n = pe(e); n || (n = me); var a = ["stack", "stackPrefetch", "playClip", "volume", "slab", "referenceLines", "crosshairs", "stackRenderer"]; t && (a = a.concat(t)); var o = Zs(a, n); $s.push(o), be(e, o) } var Qs = { newStackSpecificToolStateManager: Zs, addStackStateManager: Js }; function el() { var e = {}; return { get: function (t, n) { if (!1 !== e.hasOwnProperty(t)) { var a = e[t]; if (!1 !== a.hasOwnProperty(n)) return a[n] } }, add: function (t, n, a) { !1 === e.hasOwnProperty(t) && (e[t] = {}); var o = e[t]; !1 === o.hasOwnProperty(n) && (o[n] = { data: [] }), o[n].data.push(a) }, remove: function (t, n, a) { if (!1 !== e.hasOwnProperty(t)) { var o = e[t]; if (!1 !== o.hasOwnProperty(n)) { for (var i = o[n], r = -1, s = 0; s < i.data.length; s++)i.data[s] === a && (r = s); -1 !== r && i.data.splice(r, 1) } } } } } var tl = el(), nl = { getOrientationString: function (e) { for (var t = gt(e), n = "", a = t.x < 0 ? "R" : "L", o = t.y < 0 ? "A" : "P", i = t.z < 0 ? "F" : "H", r = new p.cornerstoneMath.Vector3(Math.abs(t.x), Math.abs(t.y), Math.abs(t.z)), s = 0; s < 3; s++)if (r.x > 1e-4 && r.x > r.y && r.x > r.z) n += a, r.x = 0; else if (r.y > 1e-4 && r.y > r.x && r.y > r.z) n += o, r.y = 0; else { if (!(r.z > 1e-4 && r.z > r.x && r.z > r.y)) break; n += i, r.z = 0 } return n }, invertOrientationString: function (e) { var t = e.replace("H", "f"); return t = (t = (t = (t = (t = (t = t.replace("F", "h")).replace("R", "l")).replace("L", "r")).replace("A", "p")).replace("P", "a")).toUpperCase() } }, al = function (e, t) { var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : "image/png", a = e.querySelector("canvas"); if (a.msToBlob) { var o = a.msToBlob(); return window.navigator.msSaveBlob(o, t) } var i = document.createElement("a"); if (i.download = t, i.href = a.toDataURL(n, 1), document.createEvent) { var r = document.createEvent("MouseEvents"); r.initMouseEvent("click", !0, !0, window, 0, 0, 0, 0, 0, !1, !1, !1, !1, 0, null), i.dispatchEvent(r) } else i.fireEvent && i.fireEvent("onclick") }, ol = V("thirdParty:registerModule"), il = function (e, t) { var n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2], a = function (e) { return void 0 !== O[e] }(e); !a || n ? (a && ol.warn("Overwriting module %s", e), O[e] = t) : ol.warn("A module with the name %s is already registered", e) }; var rl = V("thirdParty:registerMixin"), sl = function (e, t) { var n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2], a = function (e) { return void 0 !== re[e] }(e); !a || n ? (a && rl.warn("Overwriting mixins/%s", e), re[e] = t, Si["mixins/".concat(e)] = re[e]) : rl.warn("mixins/%s is already registered", e) }; var ll = V("thirdParty:registerType"), cl = function (e, t, n) { var a = arguments.length > 3 && void 0 !== arguments[3] && arguments[3], o = "".concat(e, "/").concat(t), i = function (e) { return void 0 !== Si[e] }(o); !i || a ? (i && ll.warn("Overwriting %s", o), Si[o] = n) : ll.warn("%s is already registered", o) }; var ul = V("thirdParty:register"), dl = function (e, t, n) { var a = arguments.length > 3 && void 0 !== arguments[3] && arguments[3]; if (function (e, t, n) { if (!e) return ul.warn("The type must be given in order to register."), !1; if (!t) return ul.warn("The %s must have a name in order to register.", e), !1; if ("object" !== x()(n) && "function" != typeof n) return ul.warn("The %s is a %s, it should be an Object or a function.", n, x()(n)), !1; return !0 }(e, t, n)) switch (e) { case "module": il(t, n, a); break; case "mixin": sl(t, n, a); break; default: cl(e, t, n, a) } }; var hl = function (e) { var t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1]; e.forEach(function (e) { var n = e.type, a = e.name, o = e.item; dl(n, a, o, t) }) }, vl = function (e, t, n) { if (n !== t) { var a = p.cornerstone, o = a.getViewport(t), i = a.getViewport(n); i.voi.windowWidth === o.voi.windowWidth && i.voi.windowCenter === o.voi.windowCenter && i.invert === o.invert || (i.voi.windowWidth = o.voi.windowWidth, i.voi.windowCenter = o.voi.windowCenter, i.invert = o.invert, e.setViewport(n, i)) } }, gl = function (e, t, n) { n !== t && p.cornerstone.updateImage(n) }; function fl(e) { return e.filter(function (e, t, n) { return n.indexOf(e) === t }) } var ml = function (e, t) { var n = p.cornerstone, a = this, o = [], i = [], r = !1, s = {}, l = t; function c(e, t) { var n = !a.enabled, c = !o.length || !i.length; n || c || (r = !0, i.forEach(function (n) { var r = i.indexOf(n); if (-1 !== r) { var c = s.imageIds.targetElements[r], u = o.indexOf(e); if (-1 !== u) { var d, h = s.imageIds.sourceElements[u]; h === c ? d = 0 : void 0 !== s.distances[h] && (d = s.distances[h][c]), l(a, e, n, t, d) } } }), r = !1) } function u(e) { var t = e.detail; !0 !== r && c(e.currentTarget, t) } function d(e) { var t = e.detail.element; a.remove(t), function (e) { for (var t in to) to[t] = to[t].filter(function (t) { return t.element !== e }) }(t) } this.enabled = !0, this.setHandler = function (e) { l = e }, this.getHandler = function () { return l }, this.getDistances = function () { o.length && i.length && (s.distances = {}, s.imageIds = { sourceElements: [], targetElements: [] }, o.forEach(function (e) { var t = n.getEnabledElement(e); if (t && t.image) { var a = t.image.imageId, o = n.metaData.get("imagePlaneModule", a); if (o && o.imagePositionPatient) { var r = gt(o.imagePositionPatient); s.hasOwnProperty(t) || (s.distances[a] = {}, s.imageIds.sourceElements.push(a), i.forEach(function (t) { var o = n.getEnabledElement(t); if (o && o.image) { var i = o.image.imageId; if (s.imageIds.targetElements.push(i), e !== t && a !== i && !s.distances[a].hasOwnProperty(i)) { var l = n.metaData.get("imagePlaneModule", i); if (l && l.imagePositionPatient) { var c = gt(l.imagePositionPatient); s.distances[a][i] = c.clone().sub(r) } } } }), Object.keys(s.distances[a]).length || delete s.distances[a]) } } })) }, this.addSource = function (t) { -1 === o.indexOf(t) && (o.push(t), e.split(" ").forEach(function (e) { t.addEventListener(e, u) }), a.getDistances(), a.updateDisableHandlers()) }, this.addTarget = function (e) { -1 === i.indexOf(e) && (i.push(e), a.getDistances(), l(a, e, e, 0), a.updateDisableHandlers()) }, this.add = function (e) { a.addSource(e), a.addTarget(e) }, this.removeSource = function (t) { var n = o.indexOf(t); -1 !== n && (o.splice(n, 1), e.split(" ").forEach(function (e) { t.removeEventListener(e, u) }), a.getDistances(), c(t), a.updateDisableHandlers()) }, this.removeTarget = function (e) { var t = i.indexOf(e); -1 !== t && (i.splice(t, 1), a.getDistances(), l(a, e, e, 0), a.updateDisableHandlers()) }, this.remove = function (e) { a.removeTarget(e), a.removeSource(e) }, this.getSourceElements = function () { return o }, this.getTargetElements = function () { return i }, this.displayImage = function (e, t, a) { r = !0, n.displayImage(e, t, a), r = !1 }, this.setViewport = function (e, t) { r = !0, n.setViewport(e, t), r = !1 }, this.updateDisableHandlers = function () { fl(o.concat(i)).forEach(function (e) { e.removeEventListener(p.cornerstone.EVENTS.ELEMENT_DISABLED, d), e.addEventListener(p.cornerstone.EVENTS.ELEMENT_DISABLED, d) }) }, this.destroy = function () { fl(o.concat(i)).forEach(function (e) { a.remove(e) }) } }, pl = function (e, t, n, a) { if (t !== n && a && a.direction) { var o = p.cornerstone, i = xe(n, "stack").data[0], r = i.currentImageIdIndex + a.direction; if (r = Ie(r, 0, i.imageIds.length - 1), i.currentImageIdIndex !== r) { var s = eo.getStartLoadHandler(n), l = eo.getEndLoadHandler(n), c = eo.getErrorLoadingHandler(n); i.currentImageIdIndex = r; var u = i.imageIds[r]; s && s(n), (!0 === i.preventCache ? o.loadImage(u) : o.loadAndCacheImage(u)).then(function (t) { var a = o.getViewport(n); i.currentImageIdIndex === r && (e.displayImage(n, t, a), l && l(n, t)) }, function (e) { var t = i.imageIds[r]; c && c(n, t, e) }) } } }, yl = function (e, t, n) { if (n !== t) { var a = p.cornerstone, o = xe(t, "stack").data[0], i = o.imageIds[o.currentImageIdIndex], r = a.metaData.get("imagePlaneModule", i); if (void 0 !== r && void 0 !== r.imagePositionPatient) { var s = gt(r.imagePositionPatient), l = xe(n, "stack").data[0], c = Number.MAX_VALUE, u = -1; if (l.imageIds.forEach(function (e, t) { var n = a.metaData.get("imagePlaneModule", e); if (void 0 !== n && void 0 !== n.imagePositionPatient) { var o = gt(n.imagePositionPatient).distanceToSquared(s); o < c && (c = o, u = t) } }), u !== l.currentImageIdIndex) { var d = eo.getStartLoadHandler(n), h = eo.getEndLoadHandler(n), v = eo.getErrorLoadingHandler(n); l.currentImageIdIndex = u; var g = l.imageIds[u]; if (d && d(n), -1 !== u) (!0 === l.preventCache ? a.loadImage(g) : a.loadAndCacheImage(g)).then(function (t) { var o = a.getViewport(n); l.currentImageIdIndex === u && (e.displayImage(n, t, o), h && h(n, t)) }, function (e) { var t = l.imageIds[u]; v && v(n, t, e) }) } } } }, xl = function (e, t, n, a, o) { if (n !== t) { var i = p.cornerstone, r = xe(t, "stack").data[0], s = r.imageIds[r.currentImageIdIndex], l = i.metaData.get("imagePlaneModule", s); if (void 0 !== l && void 0 !== l.imagePositionPatient) { var c = gt(l.imagePositionPatient), u = xe(n, "stack").data[0], d = Number.MAX_VALUE, h = -1; if (o) { var v = c.clone().add(o); if (u.imageIds.forEach(function (e, t) { var n = i.metaData.get("imagePlaneModule", e); if (void 0 !== n && void 0 !== n.imagePositionPatient) { var a = gt(n.imagePositionPatient), o = v.distanceToSquared(a); o < d && (d = o, h = t) } }), h !== u.currentImageIdIndex && -1 !== h) { var g = eo.getStartLoadHandler(n), f = eo.getEndLoadHandler(n), m = eo.getErrorLoadingHandler(n); u.currentImageIdIndex = h; var y = u.imageIds[h]; g && g(n), (!0 === u.preventCache ? i.loadImage(y) : i.loadAndCacheImage(y)).then(function (t) { var a = i.getViewport(n); u.currentImageIdIndex === h && (e.displayImage(n, t, a), f && f(n, t)) }, function (e) { var t = u.imageIds[h]; m && m(n, t, e) }) } } } } }, Tl = function (e, t, n) { if (n !== t) { var a = p.cornerstone, o = xe(t, "stack").data[0], i = xe(n, "stack").data[0], r = o.currentImageIdIndex; if ((r = Ie(r, 0, i.imageIds.length - 1)) !== i.currentImageIdIndex) { var s = eo.getStartLoadHandler(n), l = eo.getEndLoadHandler(n), c = eo.getErrorLoadingHandler(n); s && s(n), (!0 === i.preventCache ? a.loadImage(i.imageIds[r]) : a.loadAndCacheImage(i.imageIds[r])).then(function (t) { var o = a.getViewport(n); i.currentImageIdIndex = r, e.displayImage(n, t, o), l && l(n, t) }, function (e) { var t = i.imageIds[r]; c && c(n, t, e) }) } } }, Cl = function (e, t, n) { if (n !== t) { var a = p.cornerstone, o = a.getViewport(t), i = a.getViewport(n); i.scale === o.scale && i.translation.x === o.translation.x && i.translation.y === o.translation.y || (i.scale = o.scale, i.translation.x = o.translation.x, i.translation.y = o.translation.y, e.setViewport(n, i)) } }; n.d(t, "AngleTool", function () { return vn }), n.d(t, "ArrowAnnotateTool", function () { return fn }), n.d(t, "BidirectionalTool", function () { return jn }), n.d(t, "CircleRoiTool", function () { return Qn }), n.d(t, "CobbAngleTool", function () { return aa }), n.d(t, "EllipticalRoiTool", function () { return ia }), n.d(t, "FreehandMouseTool", function () { return Ia }), n.d(t, "LengthTool", function () { return Oa }), n.d(t, "ProbeTool", function () { return Aa }), n.d(t, "RectangleRoiTool", function () { return Ha }), n.d(t, "TextMarkerTool", function () { return Ba }), n.d(t, "BrushTool", function () { return Wa }), n.d(t, "CrosshairsTool", function () { return oo }), n.d(t, "DoubleTapFitToWindowTool", function () { return io }), n.d(t, "DragProbeTool", function () { return ro }), n.d(t, "EraserTool", function () { return co }), n.d(t, "FreehandSculpterMouseTool", function () { return ho }), n.d(t, "MagnifyTool", function () { return vo }), n.d(t, "PanMultiTouchTool", function () { return go }), n.d(t, "PanTool", function () { return fo }), n.d(t, "ReferenceLinesTool", function () { return wo }), n.d(t, "RotateTool", function () { return ko }), n.d(t, "RotateTouchTool", function () { return Oo }), n.d(t, "ScaleOverlayTool", function () { return Lo }), n.d(t, "StackScrollMouseWheelTool", function () { return ei }), n.d(t, "StackScrollMultiTouchTool", function () { return ti }), n.d(t, "StackScrollTool", function () { return ni }), n.d(t, "WwwcRegionTool", function () { return oi }), n.d(t, "WwwcTool", function () { return li }), n.d(t, "ZoomMouseWheelTool", function () { return hi }), n.d(t, "ZoomTool", function () { return fi }), n.d(t, "ZoomTouchPinchTool", function () { return Ci }), n.d(t, "init", function () { return ws }), n.d(t, "stackPrefetch", function () { return Us }), n.d(t, "stackRenderers", function () { return Fs }), n.d(t, "playClip", function () { return zs }), n.d(t, "stopClip", function () { return js }), n.d(t, "store", function () { return D }), n.d(t, "getToolForElement", function () { return L }), n.d(t, "addTool", function () { return us }), n.d(t, "addToolForElement", function () { return cs }), n.d(t, "removeTool", function () { return Gs }), n.d(t, "removeToolForElement", function () { return Ws }), n.d(t, "setToolOptions", function () { return Ks }), n.d(t, "setToolOptionsForElement", function () { return Xs }), n.d(t, "setToolActive", function () { return Y }), n.d(t, "setToolActiveForElement", function () { return G }), n.d(t, "setToolEnabled", function () { return $ }), n.d(t, "setToolEnabledForElement", function () { return Z }), n.d(t, "setToolDisabled", function () { return K }), n.d(t, "setToolDisabledForElement", function () { return X }), n.d(t, "setToolPassive", function () { return Q }), n.d(t, "setToolPassiveForElement", function () { return J }), n.d(t, "addToolState", function () { return ye }), n.d(t, "getToolState", function () { return xe }), n.d(t, "removeToolState", function () { return Te }), n.d(t, "clearToolState", function () { return Ce }), n.d(t, "setElementToolStateManager", function () { return be }), n.d(t, "getElementToolStateManager", function () { return pe }), n.d(t, "textStyle", function () { return wt }), n.d(t, "toolStyle", function () { return at }), n.d(t, "toolColors", function () { return st }), n.d(t, "toolCoordinates", function () { return In }), n.d(t, "stackSpecificStateManager", function () { return Qs }), n.d(t, "newStackSpecificToolStateManager", function () { return Zs }), n.d(t, "addStackStateManager", function () { return Js }), n.d(t, "loadHandlerManager", function () { return eo }), n.d(t, "newImageIdSpecificToolStateManager", function () { return fe }), n.d(t, "globalImageIdSpecificToolStateManager", function () { return me }), n.d(t, "newFrameOfReferenceSpecificToolStateManager", function () { return el }), n.d(t, "globalFrameOfReferenceSpecificToolStateManager", function () { return tl }), n.d(t, "forceEnabledElementResize", function () { return Es }), n.d(t, "orientation", function () { return nl }), n.d(t, "SaveAs", function () { return al }), n.d(t, "enableLogger", function () { return q }), n.d(t, "disableLogger", function () { return z }), n.d(t, "register", function () { return dl }), n.d(t, "registerSome", function () { return hl }), n.d(t, "wwwcSynchronizer", function () { return vl }), n.d(t, "updateImageSynchronizer", function () { return gl }), n.d(t, "Synchronizer", function () { return ml }), n.d(t, "stackScrollSynchronizer", function () { return pl }), n.d(t, "stackImagePositionSynchronizer", function () { return yl }), n.d(t, "stackImagePositionOffsetSynchronizer", function () { return xl }), n.d(t, "stackImageIndexSynchronizer", function () { return Tl }), n.d(t, "panZoomSynchronizer", function () { return Cl }), n.d(t, "requestPoolManager", function () { return Zo }), n.d(t, "external", function () { return p }), n.d(t, "EVENTS", function () { return T }), n.d(t, "version", function () { return "3.16.0" }), n.d(t, "import", function () { return ki }); var bl = { AngleTool: vn, ArrowAnnotateTool: fn, BidirectionalTool: jn, CircleRoiTool: Qn, CobbAngleTool: aa, EllipticalRoiTool: ia, FreehandMouseTool: Ia, LengthTool: Oa, ProbeTool: Aa, RectangleRoiTool: Ha, TextMarkerTool: Ba, BrushTool: Wa, CrosshairsTool: oo, DoubleTapFitToWindowTool: io, DragProbeTool: ro, EraserTool: co, FreehandSculpterMouseTool: ho, MagnifyTool: vo, PanMultiTouchTool: go, PanTool: fo, ReferenceLinesTool: wo, RotateTool: ko, RotateTouchTool: Oo, ScaleOverlayTool: Lo, StackScrollMouseWheelTool: ei, StackScrollMultiTouchTool: ti, StackScrollTool: ni, WwwcRegionTool: oi, WwwcTool: li, ZoomMouseWheelTool: hi, ZoomTool: fi, ZoomTouchPinchTool: Ci, init: ws, stackPrefetch: Us, stackRenderers: Fs, playClip: zs, stopClip: js, store: D, getToolForElement: L, addTool: us, addToolForElement: cs, removeTool: Gs, removeToolForElement: Ws, setToolOptions: Ks, setToolOptionsForElement: Xs, setToolActive: Y, setToolActiveForElement: G, setToolEnabled: $, setToolEnabledForElement: Z, setToolDisabled: K, setToolDisabledForElement: X, setToolPassive: Q, setToolPassiveForElement: J, addToolState: ye, getToolState: xe, removeToolState: Te, clearToolState: Ce, setElementToolStateManager: be, getElementToolStateManager: pe, textStyle: wt, toolStyle: at, toolColors: st, toolCoordinates: In, stackSpecificStateManager: Qs, newStackSpecificToolStateManager: Zs, addStackStateManager: Js, loadHandlerManager: eo, newImageIdSpecificToolStateManager: fe, globalImageIdSpecificToolStateManager: me, newFrameOfReferenceSpecificToolStateManager: el, globalFrameOfReferenceSpecificToolStateManager: tl, forceEnabledElementResize: Es, orientation: nl, SaveAs: al, enableLogger: q, disableLogger: z, import: ki, register: dl, registerSome: hl, wwwcSynchronizer: vl, updateImageSynchronizer: gl, Synchronizer: ml, stackScrollSynchronizer: pl, stackImagePositionSynchronizer: yl, stackImagePositionOffsetSynchronizer: xl, stackImageIndexSynchronizer: Tl, panZoomSynchronizer: Cl, requestPoolManager: Zo, external: p, EVENTS: T, version: "3.16.0" }; t.default = bl }, function (e, t) { !function (t) { "use strict"; var n, a = Object.prototype, o = a.hasOwnProperty, i = "function" == typeof Symbol ? Symbol : {}, r = i.iterator || "@@iterator", s = i.asyncIterator || "@@asyncIterator", l = i.toStringTag || "@@toStringTag", c = "object" == typeof e, u = t.regeneratorRuntime; if (u) c && (e.exports = u); else { (u = t.regeneratorRuntime = c ? e.exports : {}).wrap = T; var d = "suspendedStart", h = "suspendedYield", v = "executing", g = "completed", f = {}, m = {}; m[r] = function () { return this }; var p = Object.getPrototypeOf, y = p && p(p(O([]))); y && y !== a && o.call(y, r) && (m = y); var x = M.prototype = b.prototype = Object.create(m); E.prototype = x.constructor = M, M.constructor = E, M[l] = E.displayName = "GeneratorFunction", u.isGeneratorFunction = function (e) { var t = "function" == typeof e && e.constructor; return !!t && (t === E || "GeneratorFunction" === (t.displayName || t.name)) }, u.mark = function (e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, M) : (e.__proto__ = M, l in e || (e[l] = "GeneratorFunction")), e.prototype = Object.create(x), e }, u.awrap = function (e) { return { __await: e } }, w(S.prototype), S.prototype[s] = function () { return this }, u.AsyncIterator = S, u.async = function (e, t, n, a) { var o = new S(T(e, t, n, a)); return u.isGeneratorFunction(t) ? o : o.next().then(function (e) { return e.done ? e.value : o.next() }) }, w(x), x[l] = "Generator", x[r] = function () { return this }, x.toString = function () { return "[object Generator]" }, u.keys = function (e) { var t = []; for (var n in e) t.push(n); return t.reverse(), function n() { for (; t.length;) { var a = t.pop(); if (a in e) return n.value = a, n.done = !1, n } return n.done = !0, n } }, u.values = O, P.prototype = { constructor: P, reset: function (e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = n, this.done = !1, this.delegate = null, this.method = "next", this.arg = n, this.tryEntries.forEach(_), !e) for (var t in this) "t" === t.charAt(0) && o.call(this, t) && !isNaN(+t.slice(1)) && (this[t] = n) }, stop: function () { this.done = !0; var e = this.tryEntries[0].completion; if ("throw" === e.type) throw e.arg; return this.rval }, dispatchException: function (e) { if (this.done) throw e; var t = this; function a(a, o) { return s.type = "throw", s.arg = e, t.next = a, o && (t.method = "next", t.arg = n), !!o } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var r = this.tryEntries[i], s = r.completion; if ("root" === r.tryLoc) return a("end"); if (r.tryLoc <= this.prev) { var l = o.call(r, "catchLoc"), c = o.call(r, "finallyLoc"); if (l && c) { if (this.prev < r.catchLoc) return a(r.catchLoc, !0); if (this.prev < r.finallyLoc) return a(r.finallyLoc) } else if (l) { if (this.prev < r.catchLoc) return a(r.catchLoc, !0) } else { if (!c) throw new Error("try statement without catch or finally"); if (this.prev < r.finallyLoc) return a(r.finallyLoc) } } } }, abrupt: function (e, t) { for (var n = this.tryEntries.length - 1; n >= 0; --n) { var a = this.tryEntries[n]; if (a.tryLoc <= this.prev && o.call(a, "finallyLoc") && this.prev < a.finallyLoc) { var i = a; break } } i && ("break" === e || "continue" === e) && i.tryLoc <= t && t <= i.finallyLoc && (i = null); var r = i ? i.completion : {}; return r.type = e, r.arg = t, i ? (this.method = "next", this.next = i.finallyLoc, f) : this.complete(r) }, complete: function (e, t) { if ("throw" === e.type) throw e.arg; return "break" === e.type || "continue" === e.type ? this.next = e.arg : "return" === e.type ? (this.rval = this.arg = e.arg, this.method = "return", this.next = "end") : "normal" === e.type && t && (this.next = t), f }, finish: function (e) { for (var t = this.tryEntries.length - 1; t >= 0; --t) { var n = this.tryEntries[t]; if (n.finallyLoc === e) return this.complete(n.completion, n.afterLoc), _(n), f } }, catch: function (e) { for (var t = this.tryEntries.length - 1; t >= 0; --t) { var n = this.tryEntries[t]; if (n.tryLoc === e) { var a = n.completion; if ("throw" === a.type) { var o = a.arg; _(n) } return o } } throw new Error("illegal catch attempt") }, delegateYield: function (e, t, a) { return this.delegate = { iterator: O(e), resultName: t, nextLoc: a }, "next" === this.method && (this.arg = n), f } } } function T(e, t, n, a) { var o = t && t.prototype instanceof b ? t : b, i = Object.create(o.prototype), r = new P(a || []); return i._invoke = function (e, t, n) { var a = d; return function (o, i) { if (a === v) throw new Error("Generator is already running"); if (a === g) { if ("throw" === o) throw i; return D() } for (n.method = o, n.arg = i; ;) { var r = n.delegate; if (r) { var s = k(r, n); if (s) { if (s === f) continue; return s } } if ("next" === n.method) n.sent = n._sent = n.arg; else if ("throw" === n.method) { if (a === d) throw a = g, n.arg; n.dispatchException(n.arg) } else "return" === n.method && n.abrupt("return", n.arg); a = v; var l = C(e, t, n); if ("normal" === l.type) { if (a = n.done ? g : h, l.arg === f) continue; return { value: l.arg, done: n.done } } "throw" === l.type && (a = g, n.method = "throw", n.arg = l.arg) } } }(e, n, r), i } function C(e, t, n) { try { return { type: "normal", arg: e.call(t, n) } } catch (e) { return { type: "throw", arg: e } } } function b() { } function E() { } function M() { } function w(e) { ["next", "throw", "return"].forEach(function (t) { e[t] = function (e) { return this._invoke(t, e) } }) } function S(e) { var t; this._invoke = function (n, a) { function i() { return new Promise(function (t, i) { !function t(n, a, i, r) { var s = C(e[n], e, a); if ("throw" !== s.type) { var l = s.arg, c = l.value; return c && "object" == typeof c && o.call(c, "__await") ? Promise.resolve(c.__await).then(function (e) { t("next", e, i, r) }, function (e) { t("throw", e, i, r) }) : Promise.resolve(c).then(function (e) { l.value = e, i(l) }, function (e) { return t("throw", e, i, r) }) } r(s.arg) }(n, a, t, i) }) } return t = t ? t.then(i, i) : i() } } function k(e, t) { var a = e.iterator[t.method]; if (a === n) { if (t.delegate = null, "throw" === t.method) { if (e.iterator.return && (t.method = "return", t.arg = n, k(e, t), "throw" === t.method)) return f; t.method = "throw", t.arg = new TypeError("The iterator does not provide a 'throw' method") } return f } var o = C(a, e.iterator, t.arg); if ("throw" === o.type) return t.method = "throw", t.arg = o.arg, t.delegate = null, f; var i = o.arg; return i ? i.done ? (t[e.resultName] = i.value, t.next = e.nextLoc, "return" !== t.method && (t.method = "next", t.arg = n), t.delegate = null, f) : i : (t.method = "throw", t.arg = new TypeError("iterator result is not an object"), t.delegate = null, f) } function I(e) { var t = { tryLoc: e[0] }; 1 in e && (t.catchLoc = e[1]), 2 in e && (t.finallyLoc = e[2], t.afterLoc = e[3]), this.tryEntries.push(t) } function _(e) { var t = e.completion || {}; t.type = "normal", delete t.arg, e.completion = t } function P(e) { this.tryEntries = [{ tryLoc: "root" }], e.forEach(I, this), this.reset(!0) } function O(e) { if (e) { var t = e[r]; if (t) return t.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) { var a = -1, i = function t() { for (; ++a < e.length;)if (o.call(e, a)) return t.value = e[a], t.done = !1, t; return t.value = n, t.done = !0, t }; return i.next = i } } return { next: D } } function D() { return { value: n, done: !0 } } }(function () { return this || "object" == typeof self && self }() || Function("return this")()) }, function (e, t, n) { var a = function () { return this || "object" == typeof self && self }() || Function("return this")(), o = a.regeneratorRuntime && Object.getOwnPropertyNames(a).indexOf("regeneratorRuntime") >= 0, i = o && a.regeneratorRuntime; if (a.regeneratorRuntime = void 0, e.exports = n(12), o) a.regeneratorRuntime = i; else try { delete a.regeneratorRuntime } catch (e) { a.regeneratorRuntime = void 0 } }, function (e, t) { e.exports = function () { throw new TypeError("Invalid attempt to spread non-iterable instance") } }, function (e, t) { e.exports = function (e) { if (Symbol.iterator in Object(e) || "[object Arguments]" === Object.prototype.toString.call(e)) return Array.from(e) } }, function (e, t) { e.exports = function (e) { if (Array.isArray(e)) { for (var t = 0, n = new Array(e.length); t < e.length; t++)n[t] = e[t]; return n } } }, function (e, t) { var n = 1e3, a = 60 * n, o = 60 * a, i = 24 * o, r = 7 * i, s = 365.25 * i; function l(e, t, n, a) { var o = t >= 1.5 * n; return Math.round(e / n) + " " + a + (o ? "s" : "") } e.exports = function (e, t) { t = t || {}; var c = typeof e; if ("string" === c && e.length > 0) return function (e) { if ((e = String(e)).length > 100) return; var t = /^((?:\d+)?\-?\d?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(e); if (!t) return; var l = parseFloat(t[1]); switch ((t[2] || "ms").toLowerCase()) { case "years": case "year": case "yrs": case "yr": case "y": return l * s; case "weeks": case "week": case "w": return l * r; case "days": case "day": case "d": return l * i; case "hours": case "hour": case "hrs": case "hr": case "h": return l * o; case "minutes": case "minute": case "mins": case "min": case "m": return l * a; case "seconds": case "second": case "secs": case "sec": case "s": return l * n; case "milliseconds": case "millisecond": case "msecs": case "msec": case "ms": return l; default: return } }(e); if ("number" === c && !1 === isNaN(e)) return t.long ? function (e) { var t = Math.abs(e); if (t >= i) return l(e, t, i, "day"); if (t >= o) return l(e, t, o, "hour"); if (t >= a) return l(e, t, a, "minute"); if (t >= n) return l(e, t, n, "second"); return e + " ms" }(e) : function (e) { var t = Math.abs(e); if (t >= i) return Math.round(e / i) + "d"; if (t >= o) return Math.round(e / o) + "h"; if (t >= a) return Math.round(e / a) + "m"; if (t >= n) return Math.round(e / n) + "s"; return e + "ms" }(e); throw new Error("val is not a non-empty string or a valid number. val=" + JSON.stringify(e)) } }, function (e, t, n) { e.exports = function (e) { function t(e) { let t = 0; for (let n = 0; n < e.length; n++)t = (t << 5) - t + e.charCodeAt(n), t |= 0; return a.colors[Math.abs(t) % a.colors.length] } function a(e) { let n; function r(...e) { if (!r.enabled) return; const t = r, o = Number(new Date), i = o - (n || o); t.diff = i, t.prev = n, t.curr = o, n = o, e[0] = a.coerce(e[0]), "string" != typeof e[0] && e.unshift("%O"); let s = 0; e[0] = e[0].replace(/%([a-zA-Z%])/g, (n, o) => { if ("%%" === n) return n; s++; const i = a.formatters[o]; if ("function" == typeof i) { const a = e[s]; n = i.call(t, a), e.splice(s, 1), s-- } return n }), a.formatArgs.call(t, e), (t.log || a.log).apply(t, e) } return r.namespace = e, r.enabled = a.enabled(e), r.useColors = a.useColors(), r.color = t(e), r.destroy = o, r.extend = i, "function" == typeof a.init && a.init(r), a.instances.push(r), r } function o() { const e = a.instances.indexOf(this); return -1 !== e && (a.instances.splice(e, 1), !0) } function i(e, t) { const n = a(this.namespace + (void 0 === t ? ":" : t) + e); return n.log = this.log, n } function r(e) { return e.toString().substring(2, e.toString().length - 2).replace(/\.\*\?$/, "*") } return a.debug = a, a.default = a, a.coerce = function (e) { return e instanceof Error ? e.stack || e.message : e }, a.disable = function () { const e = [...a.names.map(r), ...a.skips.map(r).map(e => "-" + e)].join(","); return a.enable(""), e }, a.enable = function (e) { let t; a.save(e), a.names = [], a.skips = []; const n = ("string" == typeof e ? e : "").split(/[\s,]+/), o = n.length; for (t = 0; t < o; t++)n[t] && ("-" === (e = n[t].replace(/\*/g, ".*?"))[0] ? a.skips.push(new RegExp("^" + e.substr(1) + "$")) : a.names.push(new RegExp("^" + e + "$"))); for (t = 0; t < a.instances.length; t++) { const e = a.instances[t]; e.enabled = a.enabled(e.namespace) } }, a.enabled = function (e) { if ("*" === e[e.length - 1]) return !0; let t, n; for (t = 0, n = a.skips.length; t < n; t++)if (a.skips[t].test(e)) return !1; for (t = 0, n = a.names.length; t < n; t++)if (a.names[t].test(e)) return !0; return !1 }, a.humanize = n(17), Object.keys(e).forEach(t => { a[t] = e[t] }), a.instances = [], a.names = [], a.skips = [], a.formatters = {}, a.selectColor = t, a.enable(a.load()), a } }, function (e, t) { var n, a, o = e.exports = {}; function i() { throw new Error("setTimeout has not been defined") } function r() { throw new Error("clearTimeout has not been defined") } function s(e) { if (n === setTimeout) return setTimeout(e, 0); if ((n === i || !n) && setTimeout) return n = setTimeout, setTimeout(e, 0); try { return n(e, 0) } catch (t) { try { return n.call(null, e, 0) } catch (t) { return n.call(this, e, 0) } } } !function () { try { n = "function" == typeof setTimeout ? setTimeout : i } catch (e) { n = i } try { a = "function" == typeof clearTimeout ? clearTimeout : r } catch (e) { a = r } }(); var l, c = [], u = !1, d = -1; function h() { u && l && (u = !1, l.length ? c = l.concat(c) : d = -1, c.length && v()) } function v() { if (!u) { var e = s(h); u = !0; for (var t = c.length; t;) { for (l = c, c = []; ++d < t;)l && l[d].run(); d = -1, t = c.length } l = null, u = !1, function (e) { if (a === clearTimeout) return clearTimeout(e); if ((a === r || !a) && clearTimeout) return a = clearTimeout, clearTimeout(e); try { a(e) } catch (t) { try { return a.call(null, e) } catch (t) { return a.call(this, e) } } }(e) } } function g(e, t) { this.fun = e, this.array = t } function f() { } o.nextTick = function (e) { var t = new Array(arguments.length - 1); if (arguments.length > 1) for (var n = 1; n < arguments.length; n++)t[n - 1] = arguments[n]; c.push(new g(e, t)), 1 !== c.length || u || s(v) }, g.prototype.run = function () { this.fun.apply(null, this.array) }, o.title = "browser", o.browser = !0, o.env = {}, o.argv = [], o.version = "", o.versions = {}, o.on = f, o.addListener = f, o.once = f, o.off = f, o.removeListener = f, o.removeAllListeners = f, o.emit = f, o.prependListener = f, o.prependOnceListener = f, o.listeners = function (e) { return [] }, o.binding = function (e) { throw new Error("process.binding is not supported") }, o.cwd = function () { return "/" }, o.chdir = function (e) { throw new Error("process.chdir is not supported") }, o.umask = function () { return 0 } }, function (e, t) { function n(t, a) { return e.exports = n = Object.setPrototypeOf || function (e, t) { return e.__proto__ = t, e }, n(t, a) } e.exports = n }]) });
//# sourceMappingURL=cornerstoneTools.min.js.map